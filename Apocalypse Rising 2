--LIBRARY START
--Services
getgenv().runService = game:GetService"RunService"
getgenv().textService = game:GetService"TextService"
getgenv().inputService = game:GetService"UserInputService"
getgenv().tweenService = game:GetService"TweenService"

if getgenv().library then
    getgenv().library:Unload()
end

local library = {design = getgenv().design == "kali" and "kali" or "FemWare V2", tabs = {}, draggable = true, flags = {}, title = "FemWare V2", open = false, popup = nil, instances = {}, connections = {}, options = {}, notifications = {}, tabSize = 0, theme = {}, foldername = "femware_ar2", fileext = ".txt"}
getgenv().library = library

--Locals
local dragging, dragInput, dragStart, startPos, dragObject

local blacklistedKeys = { --add or remove keys if you find the need to
    Enum.KeyCode.Unknown,Enum.KeyCode.W,Enum.KeyCode.A,Enum.KeyCode.S,Enum.KeyCode.D,Enum.KeyCode.Slash,Enum.KeyCode.Tab,Enum.KeyCode.Escape
}
local whitelistedMouseinputs = { --add or remove mouse inputs if you find the need to
    Enum.UserInputType.MouseButton1,Enum.UserInputType.MouseButton2,Enum.UserInputType.MouseButton3
}

--Functions
library.round = function(num, bracket)
    if typeof(num) == "Vector2" then
        return Vector2.new(library.round(num.X), library.round(num.Y))
    elseif typeof(num) == "Vector3" then
        return Vector3.new(library.round(num.X), library.round(num.Y), library.round(num.Z))
    elseif typeof(num) == "Color3" then
        return library.round(num.r * 255), library.round(num.g * 255), library.round(num.b * 255)
    else
        return num - num % (bracket or 1);
    end
end

--From: https://devforum.roblox.com/t/how-to-create-a-simple-rainbow-effect-using-tweenService/221849/2
local chromaColor
spawn(function()
    while wait() do
        if not library then break end
        chromaColor = Color3.fromHSV(tick() % 6 / 6, 1, 1)
    end
end)

function library:Create(class, properties)
    properties = properties or {}
    if not class then return end
    local a = class == "Square" or class == "Line" or class == "Text" or class == "Quad" or class == "Circle" or class == "Triangle"
    local t = a and Drawing or Instance
    local inst = t.new(class)
    for property, value in next, properties do
        inst[property] = value
    end
    table.insert(self.instances, {object = inst, method = a})
    return inst
end

function library:AddConnection(connection, name, callback)
    callback = type(name) == "function" and name or callback
    connection = connection:connect(callback)
    if name ~= callback then
        self.connections[name] = connection
    else
        table.insert(self.connections, connection)
    end
    return connection
end

function library:Unload()
    for _, c in next, self.connections do
        c:Disconnect()
    end
    for _, i in next, self.instances do
        if i.method then
            pcall(function() i.object:Remove() end)
        else
            i.object:Destroy()
        end
    end
    for _, o in next, self.options do
        if o.type == "toggle" then
            coroutine.resume(coroutine.create(o.SetState, o))
        end
    end
    library = nil
    getgenv().library = nil
end

function library:LoadConfig(config)
    if table.find(self:GetConfigs(), config) then
        local Read, Config = pcall(function() return game:GetService"HttpService":JSONDecode(readfile(self.foldername .. "/" .. config .. self.fileext)) end)
        Config = Read and Config or {}
        for _, option in next, self.options do
            if option.hasInit then
                if option.type ~= "button" and option.flag and not option.skipflag then
                    if option.type == "toggle" then
                        spawn(function() option:SetState(Config[option.flag] == 1) end)
                    elseif option.type == "color" then
                        if Config[option.flag] then
                            spawn(function() option:SetColor(Config[option.flag]) end)
                            if option.trans then
                                spawn(function() option:SetTrans(Config[option.flag .. " Transparency"]) end)
                            end
                        end
                    elseif option.type == "bind" then
                        spawn(function() option:SetKey(Config[option.flag]) end)
                    else
                        spawn(function() option:SetValue(Config[option.flag]) end)
                    end
                end
            end
        end
    end
end

function library:SaveConfig(config)
    local Config = {}
    if table.find(self:GetConfigs(), config) then
        Config = game:GetService"HttpService":JSONDecode(readfile(self.foldername .. "/" .. config .. self.fileext))
    end
    for _, option in next, self.options do
        if option.type ~= "button" and option.flag and not option.skipflag then
            if option.type == "toggle" then
                Config[option.flag] = option.state and 1 or 0
            elseif option.type == "color" then
                Config[option.flag] = {option.color.r, option.color.g, option.color.b}
                if option.trans then
                    Config[option.flag .. " Transparency"] = option.trans
                end
            elseif option.type == "bind" then
                if option.key ~= "none" then
                    Config[option.flag] = option.key
                end
            elseif option.type == "list" then
                Config[option.flag] = option.value
            else
                Config[option.flag] = option.value
            end
        end
    end
    writefile(self.foldername .. "/" .. config .. self.fileext, game:GetService"HttpService":JSONEncode(Config))
end

function library:GetConfigs()
    if not isfolder(self.foldername) then
        makefolder(self.foldername)
        return {}
    end
    local files = {}
    local a = 0
    for i,v in next, listfiles(self.foldername) do
        if v:sub(#v - #self.fileext + 1, #v) == self.fileext then
            a = a + 1
            v = v:gsub(self.foldername .. "\\", "")
            v = v:gsub(self.fileext, "")
            table.insert(files, a, v)
        end
    end
    return files
end

library.createLabel = function(option, parent)
    option.main = library:Create("TextLabel", {
        LayoutOrder = option.position,
        Position = UDim2.new(0, 6, 0, 0),
        Size = UDim2.new(1, -12, 0, 24),
        BackgroundTransparency = 1,
        TextSize = 15,
        Font = Enum.Font.Code,
        TextColor3 = Color3.new(1, 1, 1),
        TextXAlignment = Enum.TextXAlignment.Left,
        TextYAlignment = Enum.TextYAlignment.Top,
        TextWrapped = true,
        Parent = parent
    })

    setmetatable(option, {__newindex = function(t, i, v)
        if i == "Text" then
            option.main.Text = tostring(v)
            option.main.Size = UDim2.new(1, -12, 0, textService:GetTextSize(option.main.Text, 15, Enum.Font.Code, Vector2.new(option.main.AbsoluteSize.X, 9e9)).Y + 6)
        end
    end})
    option.Text = option.text
end

library.createDivider = function(option, parent)
    option.main = library:Create("Frame", {
        LayoutOrder = option.position,
        Size = UDim2.new(1, 0, 0, 18),
        BackgroundTransparency = 1,
        Parent = parent
    })

    library:Create("Frame", {
        AnchorPoint = Vector2.new(0.5, 0.5),
        Position = UDim2.new(0.5, 0, 0.5, 0),
        Size = UDim2.new(1, -24, 0, 1),
        BackgroundColor3 = Color3.fromRGB(60, 60, 60),
        BorderColor3 = Color3.new(),
        Parent = option.main
    })

    option.title = library:Create("TextLabel", {
        AnchorPoint = Vector2.new(0.5, 0.5),
        Position = UDim2.new(0.5, 0, 0.5, 0),
        BackgroundColor3 = Color3.fromRGB(30, 30, 30),
        BorderSizePixel = 0,
        TextColor3 =  Color3.new(1, 1, 1),
        TextSize = 15,
        Font = Enum.Font.Code,
        TextXAlignment = Enum.TextXAlignment.Center,
        Parent = option.main
    })

    setmetatable(option, {__newindex = function(t, i, v)
        if i == "Text" then
            if v then
                option.title.Text = tostring(v)
                option.title.Size = UDim2.new(0, textService:GetTextSize(option.title.Text, 15, Enum.Font.Code, Vector2.new(9e9, 9e9)).X + 12, 0, 20)
                option.main.Size = UDim2.new(1, 0, 0, 18)
            else
                option.title.Text = ""
                option.title.Size = UDim2.new()
                option.main.Size = UDim2.new(1, 0, 0, 6)
            end
        end
    end})
    option.Text = option.text
end

library.createToggle = function(option, parent)
    option.hasInit = true

    option.main = library:Create("Frame", {
        LayoutOrder = option.position,
        Size = UDim2.new(1, 0, 0, 20),
        BackgroundTransparency = 1,
        Parent = parent
    })

    local tickbox
    local tickboxOverlay
    if option.style then
        tickbox = library:Create("ImageLabel", {
            Position = UDim2.new(0, 6, 0, 4),
            Size = UDim2.new(0, 12, 0, 12),
            BackgroundTransparency = 1,
            Image = "rbxassetid://3570695787",
            ImageColor3 = Color3.new(),
            Parent = option.main
        })

        library:Create("ImageLabel", {
            AnchorPoint = Vector2.new(0.5, 0.5),
            Position = UDim2.new(0.5, 0, 0.5, 0),
            Size = UDim2.new(1, -2, 1, -2),
            BackgroundTransparency = 1,
            Image = "rbxassetid://3570695787",
            ImageColor3 = Color3.fromRGB(60, 60, 60),
            Parent = tickbox
        })

        library:Create("ImageLabel", {
            AnchorPoint = Vector2.new(0.5, 0.5),
            Position = UDim2.new(0.5, 0, 0.5, 0),
            Size = UDim2.new(1, -6, 1, -6),
            BackgroundTransparency = 1,
            Image = "rbxassetid://3570695787",
            ImageColor3 = Color3.fromRGB(40, 40, 40),
            Parent = tickbox
        })

        tickboxOverlay = library:Create("ImageLabel", {
            AnchorPoint = Vector2.new(0.5, 0.5),
            Position = UDim2.new(0.5, 0, 0.5, 0),
            Size = UDim2.new(1, -6, 1, -6),
            BackgroundTransparency = 1,
            Image = "rbxassetid://3570695787",
            ImageColor3 = library.flags["Menu Accent Color"],
            Visible = option.state,
            Parent = tickbox
        })

        library:Create("ImageLabel", {
            AnchorPoint = Vector2.new(0.5, 0.5),
            Position = UDim2.new(0.5, 0, 0.5, 0),
            Size = UDim2.new(1, 0, 1, 0),
            BackgroundTransparency = 1,
            Image = "rbxassetid://5941353943",
            ImageTransparency = 0.6,
            Parent = tickbox
        })

        table.insert(library.theme, tickboxOverlay)
    else
        tickbox = library:Create("Frame", {
            Position = UDim2.new(0, 6, 0, 4),
            Size = UDim2.new(0, 12, 0, 12),
            BackgroundColor3 = library.flags["Menu Accent Color"],
            BorderColor3 = Color3.new(),
            Parent = option.main
        })

        tickboxOverlay = library:Create("ImageLabel", {
            Size = UDim2.new(1, 0, 1, 0),
            BackgroundTransparency = option.state and 1 or 0,
            BackgroundColor3 = Color3.fromRGB(50, 50, 50),
            BorderColor3 = Color3.new(),
            Image = "rbxassetid://4155801252",
            ImageTransparency = 0.6,
            ImageColor3 = Color3.new(),
            Parent = tickbox
        })

        library:Create("ImageLabel", {
            Size = UDim2.new(1, 0, 1, 0),
            BackgroundTransparency = 1,
            Image = "rbxassetid://2592362371",
            ImageColor3 = Color3.fromRGB(60, 60, 60),
            ScaleType = Enum.ScaleType.Slice,
            SliceCenter = Rect.new(2, 2, 62, 62),
            Parent = tickbox
        })

        library:Create("ImageLabel", {
            Size = UDim2.new(1, -2, 1, -2),
            Position = UDim2.new(0, 1, 0, 1),
            BackgroundTransparency = 1,
            Image = "rbxassetid://2592362371",
            ImageColor3 = Color3.new(),
            ScaleType = Enum.ScaleType.Slice,
            SliceCenter = Rect.new(2, 2, 62, 62),
            Parent = tickbox
        })

        table.insert(library.theme, tickbox)
    end

    option.interest = library:Create("Frame", {
        Position = UDim2.new(0, 0, 0, 0),
        Size = UDim2.new(1, 0, 0, 20),
        BackgroundTransparency = 1,
        Parent = option.main
    })

    option.title = library:Create("TextLabel", {
        Position = UDim2.new(0, 24, 0, 0),
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Text = option.text,
        TextColor3 =  option.state and Color3.fromRGB(210, 210, 210) or Color3.fromRGB(180, 180, 180),
        TextSize = 15,
        Font = Enum.Font.Code,
        TextXAlignment = Enum.TextXAlignment.Left,
        Parent = option.interest
    })

    option.interest.InputBegan:connect(function(input)
        if input.UserInputType.Name == "MouseButton1" then
            option:SetState(not option.state)
        end
        if input.UserInputType.Name == "MouseMovement" then
            if not library.warning and not library.slider then
                if option.style then
                    tickbox.ImageColor3 = library.flags["Menu Accent Color"]
                    --tweenService:Create(tickbox, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {ImageColor3 = library.flags["Menu Accent Color"]}):Play()
                else
                    tickbox.BorderColor3 = library.flags["Menu Accent Color"]
                    tickboxOverlay.BorderColor3 = library.flags["Menu Accent Color"]
                    --tweenService:Create(tickbox, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BorderColor3 = library.flags["Menu Accent Color"]}):Play()
                    --tweenService:Create(tickboxOverlay, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BorderColor3 = library.flags["Menu Accent Color"]}):Play()
                end
            end
            if option.tip then
                library.tooltip.Text = option.tip
                library.tooltip.Size = UDim2.new(0, textService:GetTextSize(option.tip, 15, Enum.Font.Code, Vector2.new(9e9, 9e9)).X, 0, 20)
            end
        end
    end)

    option.interest.InputChanged:connect(function(input)
        if input.UserInputType.Name == "MouseMovement" then
            if option.tip then
                library.tooltip.Position = UDim2.new(0, input.Position.X + 26, 0, input.Position.Y + 36)
            end
        end
    end)

    option.interest.InputEnded:connect(function(input)
        if input.UserInputType.Name == "MouseMovement" then
            if option.style then
                tickbox.ImageColor3 = Color3.new()
                --tweenService:Create(tickbox, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {ImageColor3 = Color3.new()}):Play()
            else
                tickbox.BorderColor3 = Color3.new()
                tickboxOverlay.BorderColor3 = Color3.new()
                --tweenService:Create(tickbox, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BorderColor3 = Color3.new()}):Play()
                --tweenService:Create(tickboxOverlay, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BorderColor3 = Color3.new()}):Play()
            end
            library.tooltip.Position = UDim2.new(2)
        end
    end)

    function option:SetState(state, nocallback)
        state = typeof(state) == "boolean" and state
        state = state or false
        library.flags[self.flag] = state
        self.state = state
        option.title.TextColor3 = state and Color3.fromRGB(210, 210, 210) or Color3.fromRGB(160, 160, 160)
        if option.style then
            tickboxOverlay.Visible = state
        else
            tickboxOverlay.BackgroundTransparency = state and 1 or 0
        end
        if not nocallback then
            self.callback(state)
        end
    end

    if option.state ~= nil then
        delay(1, function()
            if library then
                option.callback(option.state)
            end
        end)
    end

    setmetatable(option, {__newindex = function(t, i, v)
        if i == "Text" then
            option.title.Text = tostring(v)
        end
    end})
end

library.createButton = function(option, parent)
    option.hasInit = true

    option.main = library:Create("Frame", {
        LayoutOrder = option.position,
        Size = UDim2.new(1, 0, 0, 28),
        BackgroundTransparency = 1,
        Parent = parent
    })

    option.title = library:Create("TextLabel", {
        AnchorPoint = Vector2.new(0.5, 1),
        Position = UDim2.new(0.5, 0, 1, -5),
        Size = UDim2.new(1, -12, 0, 20),
        BackgroundColor3 = Color3.fromRGB(50, 50, 50),
        BorderColor3 = Color3.new(),
        Text = option.text,
        TextColor3 = Color3.new(1, 1, 1),
        TextSize = 15,
        Font = Enum.Font.Code,
        Parent = option.main
    })

    library:Create("ImageLabel", {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2592362371",
        ImageColor3 = Color3.fromRGB(60, 60, 60),
        ScaleType = Enum.ScaleType.Slice,
        SliceCenter = Rect.new(2, 2, 62, 62),
        Parent = option.title
    })

    library:Create("ImageLabel", {
        Size = UDim2.new(1, -2, 1, -2),
        Position = UDim2.new(0, 1, 0, 1),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2592362371",
        ImageColor3 = Color3.new(),
        ScaleType = Enum.ScaleType.Slice,
        SliceCenter = Rect.new(2, 2, 62, 62),
        Parent = option.title
    })

    library:Create("UIGradient", {
        Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(180, 180, 180)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(253, 253, 253)),
        }),
        Rotation = -90,
        Parent = option.title
    })

    option.title.InputBegan:connect(function(input)
        if input.UserInputType.Name == "MouseButton1" then
            option.callback()
            if library then
                library.flags[option.flag] = true
            end
            if option.tip then
                library.tooltip.Text = option.tip
                library.tooltip.Size = UDim2.new(0, textService:GetTextSize(option.tip, 15, Enum.Font.Code, Vector2.new(9e9, 9e9)).X, 0, 20)
            end
        end
        if input.UserInputType.Name == "MouseMovement" then
            if not library.warning and not library.slider then
                option.title.BorderColor3 = library.flags["Menu Accent Color"]
            end
        end
    end)

    option.title.InputChanged:connect(function(input)
        if input.UserInputType.Name == "MouseMovement" then
            if option.tip then
                library.tooltip.Position = UDim2.new(0, input.Position.X + 26, 0, input.Position.Y + 36)
            end
        end
    end)

    option.title.InputEnded:connect(function(input)
        if input.UserInputType.Name == "MouseMovement" then
            option.title.BorderColor3 = Color3.new()
            library.tooltip.Position = UDim2.new(2)
        end
    end)
end

library.createBind = function(option, parent)
    option.hasInit = true

    local binding
    local holding
    local Loop

    if option.sub then
        option.main = option:getMain()
    else
        option.main = option.main or library:Create("Frame", {
            LayoutOrder = option.position,
            Size = UDim2.new(1, 0, 0, 20),
            BackgroundTransparency = 1,
            Parent = parent
        })

        library:Create("TextLabel", {
            Position = UDim2.new(0, 6, 0, 0),
            Size = UDim2.new(1, -12, 1, 0),
            BackgroundTransparency = 1,
            Text = option.text,
            TextSize = 15,
            Font = Enum.Font.Code,
            TextColor3 = Color3.fromRGB(210, 210, 210),
            TextXAlignment = Enum.TextXAlignment.Left,
            Parent = option.main
        })
    end

    local bindinput = library:Create(option.sub and "TextButton" or "TextLabel", {
        Position = UDim2.new(1, -6 - (option.subpos or 0), 0, option.sub and 2 or 3),
        SizeConstraint = Enum.SizeConstraint.RelativeYY,
        BackgroundColor3 = Color3.fromRGB(30, 30, 30),
        BorderSizePixel = 0,
        TextSize = 15,
        Font = Enum.Font.Code,
        TextColor3 = Color3.fromRGB(160, 160, 160),
        TextXAlignment = Enum.TextXAlignment.Right,
        Parent = option.main
    })

    if option.sub then
        bindinput.AutoButtonColor = false
    end

    local interest = option.sub and bindinput or option.main
    local inContact
    interest.InputEnded:connect(function(input)
        if input.UserInputType.Name == "MouseButton1" then
            binding = true
            bindinput.Text = "[...]"
            bindinput.Size = UDim2.new(0, -textService:GetTextSize(bindinput.Text, 16, Enum.Font.Code, Vector2.new(9e9, 9e9)).X, 0, 16)
            bindinput.TextColor3 = library.flags["Menu Accent Color"]
        end
    end)

    library:AddConnection(inputService.InputBegan, function(input)
        if inputService:GetFocusedTextBox() then return end
        if binding then
            local key = (table.find(whitelistedMouseinputs, input.UserInputType) and not option.nomouse) and input.UserInputType
            option:SetKey(key or (not table.find(blacklistedKeys, input.KeyCode)) and input.KeyCode)
        else
            if (input.KeyCode.Name == option.key or input.UserInputType.Name == option.key) and not binding then
                if option.mode == "toggle" then
                    library.flags[option.flag] = not library.flags[option.flag]
                    option.callback(library.flags[option.flag], 0)
                else
                    library.flags[option.flag] = true
                    if Loop then Loop:Disconnect() option.callback(true, 0) end
                    Loop = library:AddConnection(runService.RenderStepped, function(step)
                        if not inputService:GetFocusedTextBox() then
                            option.callback(nil, step)
                        end
                    end)
                end
            end
        end
    end)

    library:AddConnection(inputService.InputEnded, function(input)
        if option.key ~= "none" then
            if input.KeyCode.Name == option.key or input.UserInputType.Name == option.key then
                if Loop then
                    Loop:Disconnect()
                    library.flags[option.flag] = false
                    option.callback(true, 0)
                end
            end
        end
    end)

    function option:SetKey(key)
        binding = false
        bindinput.TextColor3 = Color3.fromRGB(160, 160, 160)
        if Loop then Loop:Disconnect() library.flags[option.flag] = false option.callback(true, 0) end
        self.key = (key and key.Name) or key or self.key
        if self.key == "Backspace" then
            self.key = "none"
            bindinput.Text = "[NONE]"
        else
            local a = self.key
            if self.key:match"Mouse" then
                a = self.key:gsub("Button", ""):gsub("Mouse", "M")
            elseif self.key:match"Shift" or self.key:match"Alt" or self.key:match"Control" then
                a = self.key:gsub("Left", "L"):gsub("Right", "R")
            end
            bindinput.Text = "[" .. a:gsub("Control", "CTRL"):upper() .. "]"
        end
        bindinput.Size = UDim2.new(0, -textService:GetTextSize(bindinput.Text, 16, Enum.Font.Code, Vector2.new(9e9, 9e9)).X, 0, 16)
    end
    option:SetKey()
end

library.createSlider = function(option, parent)
    option.hasInit = true

    if option.sub then
        option.main = option:getMain()
        option.main.Size = UDim2.new(1, 0, 0, 42)
    else
        option.main = library:Create("Frame", {
            LayoutOrder = option.position,
            Size = UDim2.new(1, 0, 0, option.textpos and 24 or 40),
            BackgroundTransparency = 1,
            Parent = parent
        })
    end

    option.slider = library:Create("Frame", {
        Position = UDim2.new(0, 6, 0, (option.sub and 22 or option.textpos and 4 or 20)),
        Size = UDim2.new(1, -12, 0, 16),
        BackgroundColor3 = Color3.fromRGB(50, 50, 50),
        BorderColor3 = Color3.new(),
        Parent = option.main
    })

    library:Create("ImageLabel", {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2454009026",
        ImageColor3 = Color3.new(),
        ImageTransparency = 0.8,
        Parent = option.slider
    })

    option.fill = library:Create("Frame", {
        BackgroundColor3 = library.flags["Menu Accent Color"],
        BorderSizePixel = 0,
        Parent = option.slider
    })

    library:Create("ImageLabel", {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2592362371",
        ImageColor3 = Color3.fromRGB(60, 60, 60),
        ScaleType = Enum.ScaleType.Slice,
        SliceCenter = Rect.new(2, 2, 62, 62),
        Parent = option.slider
    })

    library:Create("ImageLabel", {
        Size = UDim2.new(1, -2, 1, -2),
        Position = UDim2.new(0, 1, 0, 1),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2592362371",
        ImageColor3 = Color3.new(),
        ScaleType = Enum.ScaleType.Slice,
        SliceCenter = Rect.new(2, 2, 62, 62),
        Parent = option.slider
    })

    option.title = library:Create("TextBox", {
        Position = UDim2.new((option.sub or option.textpos) and 0.5 or 0, (option.sub or option.textpos) and 0 or 6, 0, 0),
        Size = UDim2.new(0, 0, 0, (option.sub or option.textpos) and 14 or 18),
        BackgroundTransparency = 1,
        Text = (option.text == "nil" and "" or option.text .. ": ") .. option.value .. option.suffix,
        TextSize = (option.sub or option.textpos) and 14 or 15,
        Font = Enum.Font.Code,
        TextColor3 = Color3.fromRGB(210, 210, 210),
        TextXAlignment = Enum.TextXAlignment[(option.sub or option.textpos) and "Center" or "Left"],
        Parent = (option.sub or option.textpos) and option.slider or option.main
    })
    table.insert(library.theme, option.fill)

    library:Create("UIGradient", {
        Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(115, 115, 115)),
            ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1)),
        }),
        Rotation = -90,
        Parent = option.fill
    })

    if option.min >= 0 then
        option.fill.Size = UDim2.new((option.value - option.min) / (option.max - option.min), 0, 1, 0)
    else
        option.fill.Position = UDim2.new((0 - option.min) / (option.max - option.min), 0, 0, 0)
        option.fill.Size = UDim2.new(option.value / (option.max - option.min), 0, 1, 0)
    end

    local manualInput
    option.title.Focused:connect(function()
        if not manualInput then
            option.title:ReleaseFocus()
            option.title.Text = (option.text == "nil" and "" or option.text .. ": ") .. option.value .. option.suffix
        end
    end)

    option.title.FocusLost:connect(function()
        option.slider.BorderColor3 = Color3.new()
        if manualInput then
            if tonumber(option.title.Text) then
                option:SetValue(tonumber(option.title.Text))
            else
                option.title.Text = (option.text == "nil" and "" or option.text .. ": ") .. option.value .. option.suffix
            end
        end
        manualInput = false
    end)

    local interest = (option.sub or option.textpos) and option.slider or option.main
    interest.InputBegan:connect(function(input)
        if input.UserInputType.Name == "MouseButton1" then
            if inputService:IsKeyDown(Enum.KeyCode.LeftControl) or inputService:IsKeyDown(Enum.KeyCode.RightControl) then
                manualInput = true
                option.title:CaptureFocus()
            else
                library.slider = option
                option.slider.BorderColor3 = library.flags["Menu Accent Color"]
                option:SetValue(option.min + ((input.Position.X - option.slider.AbsolutePosition.X) / option.slider.AbsoluteSize.X) * (option.max - option.min))
            end
        end
        if input.UserInputType.Name == "MouseMovement" then
            if not library.warning and not library.slider then
                option.slider.BorderColor3 = library.flags["Menu Accent Color"]
            end
            if option.tip then
                library.tooltip.Text = option.tip
                library.tooltip.Size = UDim2.new(0, textService:GetTextSize(option.tip, 15, Enum.Font.Code, Vector2.new(9e9, 9e9)).X, 0, 20)
            end
        end
    end)

    interest.InputChanged:connect(function(input)
        if input.UserInputType.Name == "MouseMovement" then
            if option.tip then
                library.tooltip.Position = UDim2.new(0, input.Position.X + 26, 0, input.Position.Y + 36)
            end
        end
    end)

    interest.InputEnded:connect(function(input)
        if input.UserInputType.Name == "MouseMovement" then
            library.tooltip.Position = UDim2.new(2)
            if option ~= library.slider then
                option.slider.BorderColor3 = Color3.new()
                --option.fill.BorderColor3 = Color3.new()
            end
        end
    end)

    function option:SetValue(value, nocallback)
        if typeof(value) ~= "number" then value = 0 end
        value = library.round(value, option.float)
        value = math.clamp(value, self.min, self.max)
        if self.min >= 0 then
            option.fill:TweenSize(UDim2.new((value - self.min) / (self.max - self.min), 0, 1, 0), "Out", "Quad", 0.05, true)
        else
            option.fill:TweenPosition(UDim2.new((0 - self.min) / (self.max - self.min), 0, 0, 0), "Out", "Quad", 0.05, true)
            option.fill:TweenSize(UDim2.new(value / (self.max - self.min), 0, 1, 0), "Out", "Quad", 0.1, true)
        end
        library.flags[self.flag] = value
        self.value = value
        option.title.Text = (option.text == "nil" and "" or option.text .. ": ") .. option.value .. option.suffix
        if not nocallback then
            self.callback(value)
        end
    end
    delay(1, function()
        if library then
            option:SetValue(option.value)
        end
    end)
end

library.createList = function(option, parent)
    option.hasInit = true

    if option.sub then
        option.main = option:getMain()
        option.main.Size = UDim2.new(1, 0, 0, 48)
    else
        option.main = library:Create("Frame", {
            LayoutOrder = option.position,
            Size = UDim2.new(1, 0, 0, option.text == "nil" and 30 or 48),
            BackgroundTransparency = 1,
            Parent = parent
        })

        if option.text ~= "nil" then
            library:Create("TextLabel", {
                Position = UDim2.new(0, 6, 0, 0),
                Size = UDim2.new(1, -12, 0, 18),
                BackgroundTransparency = 1,
                Text = option.text,
                TextSize = 15,
                Font = Enum.Font.Code,
                TextColor3 = Color3.fromRGB(210, 210, 210),
                TextXAlignment = Enum.TextXAlignment.Left,
                Parent = option.main
            })
        end
    end

    local function getMultiText()
        local s = ""
        for _, value in next, option.values do
            s = s .. (option.value[value] and (tostring(value) .. ", ") or "")
        end
        return string.sub(s, 1, #s - 2)
    end

    option.listvalue = library:Create("TextLabel", {
        Position = UDim2.new(0, 6, 0, (option.text == "nil" and not option.sub) and 4 or 22),
        Size = UDim2.new(1, -12, 0, 22),
        BackgroundColor3 = Color3.fromRGB(50, 50, 50),
        BorderColor3 = Color3.new(),
        Text = " " .. (typeof(option.value) == "string" and option.value or getMultiText()),
        TextSize = 15,
        Font = Enum.Font.Code,
        TextColor3 = Color3.new(1, 1, 1),
        TextXAlignment = Enum.TextXAlignment.Left,
        TextTruncate = Enum.TextTruncate.AtEnd,
        Parent = option.main
    })

    library:Create("ImageLabel", {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2454009026",
        ImageColor3 = Color3.new(),
        ImageTransparency = 0.8,
        Parent = option.listvalue
    })

    library:Create("ImageLabel", {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2592362371",
        ImageColor3 = Color3.fromRGB(60, 60, 60),
        ScaleType = Enum.ScaleType.Slice,
        SliceCenter = Rect.new(2, 2, 62, 62),
        Parent = option.listvalue
    })

    library:Create("ImageLabel", {
        Size = UDim2.new(1, -2, 1, -2),
        Position = UDim2.new(0, 1, 0, 1),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2592362371",
        ImageColor3 = Color3.new(),
        ScaleType = Enum.ScaleType.Slice,
        SliceCenter = Rect.new(2, 2, 62, 62),
        Parent = option.listvalue
    })

    option.arrow = library:Create("ImageLabel", {
        Position = UDim2.new(1, -16, 0, 7),
        Size = UDim2.new(0, 8, 0, 8),
        Rotation = 90,
        BackgroundTransparency = 1,
        Image = "rbxassetid://4918373417",
        ImageColor3 = Color3.new(1, 1, 1),
        ScaleType = Enum.ScaleType.Fit,
        ImageTransparency = 0.4,
        Parent = option.listvalue
    })

    option.holder = library:Create("TextButton", {
        ZIndex = 4,
        BackgroundColor3 = Color3.fromRGB(40, 40, 40),
        BorderColor3 = Color3.new(),
        Text = "",
        AutoButtonColor = false,
        Visible = false,
        Parent = library.base
    })

    option.content = library:Create("ScrollingFrame", {
        ZIndex = 4,
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        BorderSizePixel = 0,
        ScrollBarImageColor3 = Color3.new(),
        ScrollBarThickness = 3,
        ScrollingDirection = Enum.ScrollingDirection.Y,
        VerticalScrollBarInset = Enum.ScrollBarInset.Always,
        TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png",
        BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png",
        Parent = option.holder
    })

    library:Create("ImageLabel", {
        ZIndex = 4,
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2592362371",
        ImageColor3 = Color3.fromRGB(60, 60, 60),
        ScaleType = Enum.ScaleType.Slice,
        SliceCenter = Rect.new(2, 2, 62, 62),
        Parent = option.holder
    })

    library:Create("ImageLabel", {
        ZIndex = 4,
        Size = UDim2.new(1, -2, 1, -2),
        Position = UDim2.new(0, 1, 0, 1),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2592362371",
        ImageColor3 = Color3.new(),
        ScaleType = Enum.ScaleType.Slice,
        SliceCenter = Rect.new(2, 2, 62, 62),
        Parent = option.holder
    })

    local layout = library:Create("UIListLayout", {
        Padding = UDim.new(0, 2),
        Parent = option.content
    })

    library:Create("UIPadding", {
        PaddingTop = UDim.new(0, 4),
        PaddingLeft = UDim.new(0, 4),
        Parent = option.content
    })

    local valueCount = 0
    layout.Changed:connect(function()
        option.holder.Size = UDim2.new(0, option.listvalue.AbsoluteSize.X, 0, 8 + (valueCount > option.max and (-2 + (option.max * 22)) or layout.AbsoluteContentSize.Y))
        option.content.CanvasSize = UDim2.new(0, 0, 0, 8 + layout.AbsoluteContentSize.Y)
    end)
    local interest = option.sub and option.listvalue or option.main

    option.listvalue.InputBegan:connect(function(input)
        if input.UserInputType.Name == "MouseButton1" then
            if library.popup == option then library.popup:Close() return end
            if library.popup then
                library.popup:Close()
            end
            option.arrow.Rotation = -90
            option.open = true
            option.holder.Visible = true
            local pos = option.main.AbsolutePosition
            option.holder.Position = UDim2.new(0, pos.X + 6, 0, pos.Y + ((option.text == "nil" and not option.sub) and 66 or 84))
            library.popup = option
            option.listvalue.BorderColor3 = library.flags["Menu Accent Color"]
        end
        if input.UserInputType.Name == "MouseMovement" then
            if not library.warning and not library.slider then
                option.listvalue.BorderColor3 = library.flags["Menu Accent Color"]
            end
        end
    end)

    option.listvalue.InputEnded:connect(function(input)
        if input.UserInputType.Name == "MouseMovement" then
            if not option.open then
                option.listvalue.BorderColor3 = Color3.new()
            end
        end
    end)

    interest.InputBegan:connect(function(input)
        if input.UserInputType.Name == "MouseMovement" then
            if option.tip then
                library.tooltip.Text = option.tip
                library.tooltip.Size = UDim2.new(0, textService:GetTextSize(option.tip, 15, Enum.Font.Code, Vector2.new(9e9, 9e9)).X, 0, 20)
            end
        end
    end)

    interest.InputChanged:connect(function(input)
        if input.UserInputType.Name == "MouseMovement" then
            if option.tip then
                library.tooltip.Position = UDim2.new(0, input.Position.X + 26, 0, input.Position.Y + 36)
            end
        end
    end)

    interest.InputEnded:connect(function(input)
        if input.UserInputType.Name == "MouseMovement" then
            library.tooltip.Position = UDim2.new(2)
        end
    end)

    local selected
    function option:AddValue(value, state)
        if self.labels[value] then return end
        valueCount = valueCount + 1

        if self.multiselect then
            self.values[value] = state
        else
            if not table.find(self.values, value) then
                table.insert(self.values, value)
            end
        end

        local label = library:Create("TextLabel", {
            ZIndex = 4,
            Size = UDim2.new(1, 0, 0, 20),
            BackgroundTransparency = 1,
            Text = value,
            TextSize = 15,
            Font = Enum.Font.Code,
            TextTransparency = self.multiselect and (self.value[value] and 1 or 0) or self.value == value and 1 or 0,
            TextColor3 = Color3.fromRGB(210, 210, 210),
            TextXAlignment = Enum.TextXAlignment.Left,
            Parent = option.content
        })
        self.labels[value] = label

        local labelOverlay = library:Create("TextLabel", {
            ZIndex = 4,	
            Size = UDim2.new(1, 0, 1, 0),
            BackgroundTransparency = 0.8,
            Text = " " ..value,
            TextSize = 15,
            Font = Enum.Font.Code,
            TextColor3 = library.flags["Menu Accent Color"],
            TextXAlignment = Enum.TextXAlignment.Left,
            Visible = self.multiselect and self.value[value] or self.value == value,
            Parent = label
        })
        selected = selected or self.value == value and labelOverlay
        table.insert(library.theme, labelOverlay)

        label.InputBegan:connect(function(input)
            if input.UserInputType.Name == "MouseButton1" then
                if self.multiselect then
                    self.value[value] = not self.value[value]
                    self:SetValue(self.value)
                else
                    self:SetValue(value)
                    self:Close()
                end
            end
        end)
    end

    for i, value in next, option.values do
        option:AddValue(tostring(typeof(i) == "number" and value or i))
    end

    function option:RemoveValue(value)
        local label = self.labels[value]
        if label then
            label:Destroy()
            self.labels[value] = nil
            valueCount = valueCount - 1
            if self.multiselect then
                self.values[value] = nil
                self:SetValue(self.value)
            else
                table.remove(self.values, table.find(self.values, value))
                if self.value == value then
                    selected = nil
                    self:SetValue(self.values[1] or "")
                end
            end
        end
    end

    function option:SetValue(value, nocallback)
        if self.multiselect and typeof(value) ~= "table" then
            value = {}
            for i,v in next, self.values do
                value[v] = false
            end
        end
        self.value = typeof(value) == "table" and value or tostring(table.find(self.values, value) and value or self.values[1])
        library.flags[self.flag] = self.value
        option.listvalue.Text = " " .. (self.multiselect and getMultiText() or self.value)
        if self.multiselect then
            for name, label in next, self.labels do
                label.TextTransparency = self.value[name] and 1 or 0
                if label:FindFirstChild"TextLabel" then
                    label.TextLabel.Visible = self.value[name]
                end
            end
        else
            if selected then
                selected.TextTransparency = 0
                if selected:FindFirstChild"TextLabel" then
                    selected.TextLabel.Visible = false
                end
            end
            if self.labels[self.value] then
                selected = self.labels[self.value]
                selected.TextTransparency = 1
                if selected:FindFirstChild"TextLabel" then
                    selected.TextLabel.Visible = true
                end
            end
        end
        if not nocallback then
            self.callback(self.value)
        end
    end
    delay(1, function()
        if library then
            option:SetValue(option.value)
        end
    end)

    function option:Close()
        library.popup = nil
        option.arrow.Rotation = 90
        self.open = false
        option.holder.Visible = false
        option.listvalue.BorderColor3 = Color3.new()
    end

    return option
end

library.createBox = function(option, parent)
    option.hasInit = true

    option.main = library:Create("Frame", {
        LayoutOrder = option.position,
        Size = UDim2.new(1, 0, 0, option.text == "nil" and 28 or 44),
        BackgroundTransparency = 1,
        Parent = parent
    })

    if option.text ~= "nil" then
        option.title = library:Create("TextLabel", {
            Position = UDim2.new(0, 6, 0, 0),
            Size = UDim2.new(1, -12, 0, 18),
            BackgroundTransparency = 1,
            Text = option.text,
            TextSize = 15,
            Font = Enum.Font.Code,
            TextColor3 = Color3.fromRGB(210, 210, 210),
            TextXAlignment = Enum.TextXAlignment.Left,
            Parent = option.main
        })
    end

    option.holder = library:Create("Frame", {
        Position = UDim2.new(0, 6, 0, option.text == "nil" and 4 or 20),
        Size = UDim2.new(1, -12, 0, 20),
        BackgroundColor3 = Color3.fromRGB(50, 50, 50),
        BorderColor3 = Color3.new(),
        Parent = option.main
    })

    library:Create("ImageLabel", {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2454009026",
        ImageColor3 = Color3.new(),
        ImageTransparency = 0.8,
        Parent = option.holder
    })

    library:Create("ImageLabel", {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2592362371",
        ImageColor3 = Color3.fromRGB(60, 60, 60),
        ScaleType = Enum.ScaleType.Slice,
        SliceCenter = Rect.new(2, 2, 62, 62),
        Parent = option.holder
    })

    library:Create("ImageLabel", {
        Size = UDim2.new(1, -2, 1, -2),
        Position = UDim2.new(0, 1, 0, 1),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2592362371",
        ImageColor3 = Color3.new(),
        ScaleType = Enum.ScaleType.Slice,
        SliceCenter = Rect.new(2, 2, 62, 62),
        Parent = option.holder
    })

    local inputvalue = library:Create("TextBox", {
        Position = UDim2.new(0, 4, 0, 0),
        Size = UDim2.new(1, -4, 1, 0),
        BackgroundTransparency = 1,
        Text = "  " .. option.value,
        TextSize = 15,
        Font = Enum.Font.Code,
        TextColor3 = Color3.new(1, 1, 1),
        TextXAlignment = Enum.TextXAlignment.Left,
        TextWrapped = true,
        ClearTextOnFocus = false,
        Parent = option.holder
    })

    inputvalue.FocusLost:connect(function(enter)
        option.holder.BorderColor3 = Color3.new()
        option:SetValue(inputvalue.Text, enter)
    end)

    inputvalue.Focused:connect(function()
        option.holder.BorderColor3 = library.flags["Menu Accent Color"]
    end)

    inputvalue.InputBegan:connect(function(input)
        if input.UserInputType.Name == "MouseButton1" then
            inputvalue.Text = ""
        end
        if input.UserInputType.Name == "MouseMovement" then
            if not library.warning and not library.slider then
                option.holder.BorderColor3 = library.flags["Menu Accent Color"]
            end
            if option.tip then
                library.tooltip.Text = option.tip
                library.tooltip.Size = UDim2.new(0, textService:GetTextSize(option.tip, 15, Enum.Font.Code, Vector2.new(9e9, 9e9)).X, 0, 20)
            end
        end
    end)

    inputvalue.InputChanged:connect(function(input)
        if input.UserInputType.Name == "MouseMovement" then
            if option.tip then
                library.tooltip.Position = UDim2.new(0, input.Position.X + 26, 0, input.Position.Y + 36)
            end
        end
    end)

    inputvalue.InputEnded:connect(function(input)
        if input.UserInputType.Name == "MouseMovement" then
            if not inputvalue:IsFocused() then
                option.holder.BorderColor3 = Color3.new()
            end
            library.tooltip.Position = UDim2.new(2)
        end
    end)

    function option:SetValue(value, enter)
        if tostring(value) == "" then
            inputvalue.Text = self.value
        else
            library.flags[self.flag] = tostring(value)
            self.value = tostring(value)
            inputvalue.Text = self.value
            self.callback(value, enter)
        end
    end
    delay(1, function()
        if library then
            option:SetValue(option.value)
        end
    end)
end

library.createColorPickerWindow = function(option)
    option.mainHolder = library:Create("TextButton", {
        ZIndex = 4,
        --Position = UDim2.new(1, -184, 1, 6),
        Size = UDim2.new(0, option.trans and 200 or 184, 0, 264),
        BackgroundColor3 = Color3.fromRGB(40, 40, 40),
        BorderColor3 = Color3.new(),
        AutoButtonColor = false,
        Visible = false,
        Parent = library.base
    })

    option.rgbBox = library:Create("Frame", {
        Position = UDim2.new(0, 6, 0, 214),
        Size = UDim2.new(0, (option.mainHolder.AbsoluteSize.X - 12), 0, 20),
        BackgroundColor3 = Color3.fromRGB(57, 57, 57),
        BorderColor3 = Color3.new(),
        ZIndex = 5;
        Parent = option.mainHolder
    })

    library:Create("ImageLabel", {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2454009026",
        ImageColor3 = Color3.new(),
        ImageTransparency = 0.8,
        ZIndex = 6;
        Parent = option.rgbBox
    })

    library:Create("ImageLabel", {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2592362371",
        ImageColor3 = Color3.fromRGB(60, 60, 60),
        ScaleType = Enum.ScaleType.Slice,
        SliceCenter = Rect.new(2, 2, 62, 62),
        ZIndex = 6;
        Parent = option.rgbBox
    })

    library:Create("ImageLabel", {
        Size = UDim2.new(1, -2, 1, -2),
        Position = UDim2.new(0, 1, 0, 1),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2592362371",
        ImageColor3 = Color3.new(),
        ScaleType = Enum.ScaleType.Slice,
        SliceCenter = Rect.new(2, 2, 62, 62),
        ZIndex = 6;
        Parent = option.rgbBox
    })

    option.rgbInput = library:Create("TextBox", {
        Position = UDim2.new(0, 4, 0, 0),
        Size = UDim2.new(1, -4, 1, 0),
        BackgroundTransparency = 1,
        Text = tostring(option.color),
        TextSize = 14,
        Font = Enum.Font.Code,
        TextColor3 = Color3.new(1, 1, 1),
        TextXAlignment = Enum.TextXAlignment.Center,
        TextWrapped = true,
        ClearTextOnFocus = false,
        ZIndex = 6;
        Parent = option.rgbBox
    })

    option.hexBox = option.rgbBox:Clone()
    option.hexBox.Position = UDim2.new(0, 6, 0, 238)
    -- option.hexBox.Size = UDim2.new(0, (option.mainHolder.AbsoluteSize.X/2 - 10), 0, 20)
    option.hexBox.Parent = option.mainHolder
    option.hexInput = option.hexBox.TextBox;

    library:Create("ImageLabel", {
        ZIndex = 4,
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2592362371",
        ImageColor3 = Color3.fromRGB(60, 60, 60),
        ScaleType = Enum.ScaleType.Slice,
        SliceCenter = Rect.new(2, 2, 62, 62),
        Parent = option.mainHolder
    })

    library:Create("ImageLabel", {
        ZIndex = 4,
        Size = UDim2.new(1, -2, 1, -2),
        Position = UDim2.new(0, 1, 0, 1),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2592362371",
        ImageColor3 = Color3.new(),
        ScaleType = Enum.ScaleType.Slice,
        SliceCenter = Rect.new(2, 2, 62, 62),
        Parent = option.mainHolder
    })

    local hue, sat, val = Color3.toHSV(option.color)
    hue, sat, val = hue == 0 and 1 or hue, sat + 0.005, val - 0.005
    local editinghue
    local editingsatval
    local editingtrans

    local transMain
    if option.trans then
        transMain = library:Create("ImageLabel", {
            ZIndex = 5,
            Size = UDim2.new(1, 0, 1, 0),
            BackgroundTransparency = 1,
            Image = "rbxassetid://2454009026",
            ImageColor3 = Color3.fromHSV(hue, 1, 1),
            Rotation = 180,
            Parent = library:Create("ImageLabel", {
                ZIndex = 4,
                AnchorPoint = Vector2.new(1, 0),
                Position = UDim2.new(1, -6, 0, 6),
                Size = UDim2.new(0, 10, 1, -60),
                BorderColor3 = Color3.new(),
                Image = "rbxassetid://4632082392",
                ScaleType = Enum.ScaleType.Tile,
                TileSize = UDim2.new(0, 5, 0, 5),
                Parent = option.mainHolder
            })
        })

        option.transSlider = library:Create("Frame", {
            ZIndex = 5,
            Position = UDim2.new(0, 0, option.trans, 0),
            Size = UDim2.new(1, 0, 0, 2),
            BackgroundColor3 = Color3.fromRGB(38, 41, 65),
            BorderColor3 = Color3.fromRGB(255, 255, 255),
            Parent = transMain
        })

        transMain.InputBegan:connect(function(Input)
            if Input.UserInputType.Name == "MouseButton1" then
                editingtrans = true
                option:SetTrans(1 - ((Input.Position.Y - transMain.AbsolutePosition.Y) / transMain.AbsoluteSize.Y))
            end
        end)

        transMain.InputEnded:connect(function(Input)
            if Input.UserInputType.Name == "MouseButton1" then
                editingtrans = false
            end
        end)
    end

    local hueMain = library:Create("Frame", {
        ZIndex = 4,
        AnchorPoint = Vector2.new(0, 1),
        Position = UDim2.new(0, 6, 1, -54),
        Size = UDim2.new(1, option.trans and -28 or -12, 0, 10),
        BackgroundColor3 = Color3.new(1, 1, 1),
        BorderColor3 = Color3.new(),
        Parent = option.mainHolder
    })

    local Gradient = library:Create("UIGradient", {
        Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
            ColorSequenceKeypoint.new(0.17, Color3.fromRGB(255, 0, 255)),
            ColorSequenceKeypoint.new(0.33, Color3.fromRGB(0, 0, 255)),
            ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 255, 255)),
            ColorSequenceKeypoint.new(0.67, Color3.fromRGB(0, 255, 0)),
            ColorSequenceKeypoint.new(0.83, Color3.fromRGB(255, 255, 0)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 0)),
        }),
        Parent = hueMain
    })

    local hueSlider = library:Create("Frame", {
        ZIndex = 4,
        Position = UDim2.new(1 - hue, 0, 0, 0),
        Size = UDim2.new(0, 2, 1, 0),
        BackgroundColor3 = Color3.fromRGB(38, 41, 65),
        BorderColor3 = Color3.fromRGB(255, 255, 255),
        Parent = hueMain
    })

    hueMain.InputBegan:connect(function(Input)
        if Input.UserInputType.Name == "MouseButton1" then
            editinghue = true
            X = (hueMain.AbsolutePosition.X + hueMain.AbsoluteSize.X) - hueMain.AbsolutePosition.X
            X = math.clamp((Input.Position.X - hueMain.AbsolutePosition.X) / X, 0, 0.995)
            option:SetColor(Color3.fromHSV(1 - X, sat, val))
        end
    end)

    hueMain.InputEnded:connect(function(Input)
        if Input.UserInputType.Name == "MouseButton1" then
            editinghue = false
        end
    end)

    local satval = library:Create("ImageLabel", {
        ZIndex = 4,
        Position = UDim2.new(0, 6, 0, 6),
        Size = UDim2.new(1, option.trans and -28 or -12, 1, -74),
        BackgroundColor3 = Color3.fromHSV(hue, 1, 1),
        BorderColor3 = Color3.new(),
        Image = "rbxassetid://4155801252",
        ClipsDescendants = true,
        Parent = option.mainHolder
    })

    local satvalSlider = library:Create("Frame", {
        ZIndex = 4,
        AnchorPoint = Vector2.new(0.5, 0.5),
        Position = UDim2.new(sat, 0, 1 - val, 0),
        Size = UDim2.new(0, 4, 0, 4),
        Rotation = 45,
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        Parent = satval
    })

    satval.InputBegan:connect(function(Input)
        if Input.UserInputType.Name == "MouseButton1" then
            editingsatval = true
            X = (satval.AbsolutePosition.X + satval.AbsoluteSize.X) - satval.AbsolutePosition.X
            Y = (satval.AbsolutePosition.Y + satval.AbsoluteSize.Y) - satval.AbsolutePosition.Y
            X = math.clamp((Input.Position.X - satval.AbsolutePosition.X) / X, 0.005, 1)
            Y = math.clamp((Input.Position.Y - satval.AbsolutePosition.Y) / Y, 0, 0.995)
            option:SetColor(Color3.fromHSV(hue, X, 1 - Y))
        end
    end)

    library:AddConnection(inputService.InputChanged, function(Input)
        if Input.UserInputType.Name == "MouseMovement" then
            if editingsatval then
                X = (satval.AbsolutePosition.X + satval.AbsoluteSize.X) - satval.AbsolutePosition.X
                Y = (satval.AbsolutePosition.Y + satval.AbsoluteSize.Y) - satval.AbsolutePosition.Y
                X = math.clamp((Input.Position.X - satval.AbsolutePosition.X) / X, 0.005, 1)
                Y = math.clamp((Input.Position.Y - satval.AbsolutePosition.Y) / Y, 0, 0.995)
                option:SetColor(Color3.fromHSV(hue, X, 1 - Y))
            elseif editinghue then
                X = (hueMain.AbsolutePosition.X + hueMain.AbsoluteSize.X) - hueMain.AbsolutePosition.X
                X = math.clamp((Input.Position.X - hueMain.AbsolutePosition.X) / X, 0, 0.995)
                option:SetColor(Color3.fromHSV(1 - X, sat, val))
            elseif editingtrans then
                option:SetTrans(1 - ((Input.Position.Y - transMain.AbsolutePosition.Y) / transMain.AbsoluteSize.Y))
            end
        end
    end)

    satval.InputEnded:connect(function(Input)
        if Input.UserInputType.Name == "MouseButton1" then
            editingsatval = false
        end
    end)

    local r, g, b = library.round(option.color)
    option.hexInput.Text = string.format("#%02x%02x%02x", r, g, b)
    option.rgbInput.Text = table.concat({r, g, b}, ",")

    option.rgbInput.FocusLost:connect(function()
        local r, g, b = option.rgbInput.Text:gsub("%s+", ""):match("(%d+),(%d+),(%d+)")
        if r and g and b then
            local color = Color3.fromRGB(tonumber(r), tonumber(g), tonumber(b))
            return option:SetColor(color)
        end

        local r, g, b = library.round(option.color)
        option.rgbInput.Text = table.concat({r, g, b}, ",")
    end)

    option.hexInput.FocusLost:connect(function()
        local r, g, b = option.hexInput.Text:match("#?(..)(..)(..)")
        if r and g and b then
            local color = Color3.fromRGB(tonumber("0x"..r), tonumber("0x"..g), tonumber("0x"..b))
            return option:SetColor(color)
        end

        local r, g, b = library.round(option.color)
        option.hexInput.Text = string.format("#%02x%02x%02x", r, g, b)
    end)

    function option:updateVisuals(Color)
        hue, sat, val = Color3.toHSV(Color)
        hue = hue == 0 and 1 or hue
        satval.BackgroundColor3 = Color3.fromHSV(hue, 1, 1)
        if option.trans then
            transMain.ImageColor3 = Color3.fromHSV(hue, 1, 1)
        end
        hueSlider.Position = UDim2.new(1 - hue, 0, 0, 0)
        satvalSlider.Position = UDim2.new(sat, 0, 1 - val, 0)

        local r, g, b = library.round(Color3.fromHSV(hue, sat, val))

        option.hexInput.Text = string.format("#%02x%02x%02x", r, g, b)
        option.rgbInput.Text = table.concat({r, g, b}, ",")
    end

    return option
end

library.createColor = function(option, parent)
    option.hasInit = true

    if option.sub then
        option.main = option:getMain()
    else
        option.main = library:Create("Frame", {
            LayoutOrder = option.position,
            Size = UDim2.new(1, 0, 0, 20),
            BackgroundTransparency = 1,
            Parent = parent
        })

        option.title = library:Create("TextLabel", {
            Position = UDim2.new(0, 6, 0, 0),
            Size = UDim2.new(1, -12, 1, 0),
            BackgroundTransparency = 1,
            Text = option.text,
            TextSize = 15,
            Font = Enum.Font.Code,
            TextColor3 = Color3.fromRGB(210, 210, 210),
            TextXAlignment = Enum.TextXAlignment.Left,
            Parent = option.main
        })
    end

    option.visualize = library:Create(option.sub and "TextButton" or "Frame", {
        Position = UDim2.new(1, -(option.subpos or 0) - 24, 0, 4),
        Size = UDim2.new(0, 18, 0, 12),
        SizeConstraint = Enum.SizeConstraint.RelativeYY,
        BackgroundColor3 = option.color,
        BorderColor3 = Color3.new(),
        Parent = option.main
    })

    library:Create("ImageLabel", {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2454009026",
        ImageColor3 = Color3.new(),
        ImageTransparency = 0.6,
        Parent = option.visualize
    })

    library:Create("ImageLabel", {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2592362371",
        ImageColor3 = Color3.fromRGB(60, 60, 60),
        ScaleType = Enum.ScaleType.Slice,
        SliceCenter = Rect.new(2, 2, 62, 62),
        Parent = option.visualize
    })

    library:Create("ImageLabel", {
        Size = UDim2.new(1, -2, 1, -2),
        Position = UDim2.new(0, 1, 0, 1),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2592362371",
        ImageColor3 = Color3.new(),
        ScaleType = Enum.ScaleType.Slice,
        SliceCenter = Rect.new(2, 2, 62, 62),
        Parent = option.visualize
    })

    local interest = option.sub and option.visualize or option.main

    if option.sub then
        option.visualize.Text = ""
        option.visualize.AutoButtonColor = false
    end

    interest.InputBegan:connect(function(input)
        if input.UserInputType.Name == "MouseButton1" then
            if not option.mainHolder then library.createColorPickerWindow(option) end
            if library.popup == option then library.popup:Close() return end
            if library.popup then library.popup:Close() end
            option.open = true
            local pos = option.main.AbsolutePosition
            option.mainHolder.Position = UDim2.new(0, pos.X + 36 + (option.trans and -16 or 0), 0, pos.Y + 56)
            option.mainHolder.Visible = true
            library.popup = option
            option.visualize.BorderColor3 = library.flags["Menu Accent Color"]
        end
        if input.UserInputType.Name == "MouseMovement" then
            if not library.warning and not library.slider then
                option.visualize.BorderColor3 = library.flags["Menu Accent Color"]
            end
            if option.tip then
                library.tooltip.Text = option.tip
                library.tooltip.Size = UDim2.new(0, textService:GetTextSize(option.tip, 15, Enum.Font.Code, Vector2.new(9e9, 9e9)).X, 0, 20)
            end
        end
    end)

    interest.InputChanged:connect(function(input)
        if input.UserInputType.Name == "MouseMovement" then
            if option.tip then
                library.tooltip.Position = UDim2.new(0, input.Position.X + 26, 0, input.Position.Y + 36)
            end
        end
    end)

    interest.InputEnded:connect(function(input)
        if input.UserInputType.Name == "MouseMovement" then
            if not option.open then
                option.visualize.BorderColor3 = Color3.new()
            end
            library.tooltip.Position = UDim2.new(2)
        end
    end)

    function option:SetColor(newColor, nocallback)
        if typeof(newColor) == "table" then
            newColor = Color3.new(newColor[1], newColor[2], newColor[3])
        end
        newColor = newColor or Color3.new(1, 1, 1)
        if self.mainHolder then
            self:updateVisuals(newColor)
        end
        option.visualize.BackgroundColor3 = newColor
        library.flags[self.flag] = newColor
        self.color = newColor
        if not nocallback then
            self.callback(newColor)
        end
    end

    if option.trans then
        function option:SetTrans(value, manual)
            value = math.clamp(tonumber(value) or 0, 0, 1)
            if self.transSlider then
                self.transSlider.Position = UDim2.new(0, 0, value, 0)
            end
            self.trans = value
            library.flags[self.flag .. " Transparency"] = 1 - value
            self.calltrans(value)
        end
        option:SetTrans(option.trans)
    end

    delay(1, function()
        if library then
            option:SetColor(option.color)
        end
    end)

    function option:Close()
        library.popup = nil
        self.open = false
        self.mainHolder.Visible = false
        option.visualize.BorderColor3 = Color3.new()
    end
end

function library:AddTab(title, pos)
    local tab = {canInit = true, tabs = {}, columns = {}, title = tostring(title)}
    table.insert(self.tabs, pos or #self.tabs + 1, tab)

    function tab:AddColumn()
        local column = {sections = {}, position = #self.columns, canInit = true, tab = self}
        table.insert(self.columns, column)

        function column:AddSection(title)
            local section = {title = tostring(title), options = {}, canInit = true, column = self}
            table.insert(self.sections, section)

            function section:AddLabel(text)
                local option = {text = text}
                option.section = self
                option.type = "label"
                option.position = #self.options
                option.canInit = true
                table.insert(self.options, option)

                if library.hasInit and self.hasInit then
                    library.createLabel(option, self.content)
                else
                    option.Init = library.createLabel
                end

                return option
            end

            function section:AddDivider(text)
                local option = {text = text}
                option.section = self
                option.type = "divider"
                option.position = #self.options
                option.canInit = true
                table.insert(self.options, option)

                if library.hasInit and self.hasInit then
                    library.createDivider(option, self.content)
                else
                    option.Init = library.createDivider
                end

                return option
            end

            function section:AddToggle(option)
                option = typeof(option) == "table" and option or {}
                option.section = self
                option.text = tostring(option.text)
                option.state = option.state == nil and nil or (typeof(option.state) == "boolean" and option.state or false)
                option.callback = typeof(option.callback) == "function" and option.callback or function() end
                option.type = "toggle"
                option.position = #self.options
                option.flag = (library.flagprefix and library.flagprefix .. " " or "") .. (option.flag or option.text)
                option.subcount = 0
                option.canInit = (option.canInit ~= nil and option.canInit) or true
                option.tip = option.tip and tostring(option.tip)
                option.style = option.style == 2
                library.flags[option.flag] = option.state
                table.insert(self.options, option)
                library.options[option.flag] = option

                function option:AddColor(subOption)
                    subOption = typeof(subOption) == "table" and subOption or {}
                    subOption.sub = true
                    subOption.subpos = self.subcount * 24
                    function subOption:getMain() return option.main end
                    self.subcount = self.subcount + 1
                    return section:AddColor(subOption)
                end

                function option:AddBind(subOption)
                    subOption = typeof(subOption) == "table" and subOption or {}
                    subOption.sub = true
                    subOption.subpos = self.subcount * 24
                    function subOption:getMain() return option.main end
                    self.subcount = self.subcount + 1
                    return section:AddBind(subOption)
                end

                function option:AddList(subOption)
                    subOption = typeof(subOption) == "table" and subOption or {}
                    subOption.sub = true
                    function subOption:getMain() return option.main end
                    self.subcount = self.subcount + 1
                    return section:AddList(subOption)
                end

                function option:AddSlider(subOption)
                    subOption = typeof(subOption) == "table" and subOption or {}
                    subOption.sub = true
                    function subOption:getMain() return option.main end
                    self.subcount = self.subcount + 1
                    return section:AddSlider(subOption)
                end

                if library.hasInit and self.hasInit then
                    library.createToggle(option, self.content)
                else
                    option.Init = library.createToggle
                end

                return option
            end

            function section:AddButton(option)
                option = typeof(option) == "table" and option or {}
                option.section = self
                option.text = tostring(option.text)
                option.callback = typeof(option.callback) == "function" and option.callback or function() end
                option.type = "button"
                option.position = #self.options
                option.flag = (library.flagprefix and library.flagprefix .. " " or "") .. (option.flag or option.text)
                option.subcount = 0
                option.canInit = (option.canInit ~= nil and option.canInit) or true
                option.tip = option.tip and tostring(option.tip)
                table.insert(self.options, option)
                library.options[option.flag] = option

                function option:AddBind(subOption)
                    subOption = typeof(subOption) == "table" and subOption or {}
                    subOption.sub = true
                    subOption.subpos = self.subcount * 24
                    function subOption:getMain() option.main.Size = UDim2.new(1, 0, 0, 40) return option.main end
                    self.subcount = self.subcount + 1
                    return section:AddBind(subOption)
                end

                function option:AddColor(subOption)
                    subOption = typeof(subOption) == "table" and subOption or {}
                    subOption.sub = true
                    subOption.subpos = self.subcount * 24
                    function subOption:getMain() option.main.Size = UDim2.new(1, 0, 0, 40) return option.main end
                    self.subcount = self.subcount + 1
                    return section:AddColor(subOption)
                end

                if library.hasInit and self.hasInit then
                    library.createButton(option, self.content)
                else
                    option.Init = library.createButton
                end

                return option
            end

            function section:AddBind(option)
                option = typeof(option) == "table" and option or {}
                option.section = self
                option.text = tostring(option.text)
                option.key = (option.key and option.key.Name) or option.key or "none"
                option.nomouse = typeof(option.nomouse) == "boolean" and option.nomouse or false
                option.mode = typeof(option.mode) == "string" and (option.mode == "toggle" or option.mode == "hold" and option.mode) or "toggle"
                option.callback = typeof(option.callback) == "function" and option.callback or function() end
                option.type = "bind"
                option.position = #self.options
                option.flag = (library.flagprefix and library.flagprefix .. " " or "") .. (option.flag or option.text)
                option.canInit = (option.canInit ~= nil and option.canInit) or true
                option.tip = option.tip and tostring(option.tip)
                table.insert(self.options, option)
                library.options[option.flag] = option

                if library.hasInit and self.hasInit then
                    library.createBind(option, self.content)
                else
                    option.Init = library.createBind
                end

                return option
            end

            function section:AddSlider(option)
                option = typeof(option) == "table" and option or {}
                option.section = self
                option.text = tostring(option.text)
                option.min = typeof(option.min) == "number" and option.min or 0
                option.max = typeof(option.max) == "number" and option.max or 0
                option.value = option.min < 0 and 0 or math.clamp(typeof(option.value) == "number" and option.value or option.min, option.min, option.max)
                option.callback = typeof(option.callback) == "function" and option.callback or function() end
                option.float = typeof(option.value) == "number" and option.float or 1
                option.suffix = option.suffix and tostring(option.suffix) or ""
                option.textpos = option.textpos == 2
                option.type = "slider"
                option.position = #self.options
                option.flag = (library.flagprefix and library.flagprefix .. " " or "") .. (option.flag or option.text)
                option.subcount = 0
                option.canInit = (option.canInit ~= nil and option.canInit) or true
                option.tip = option.tip and tostring(option.tip)
                library.flags[option.flag] = option.value
                table.insert(self.options, option)
                library.options[option.flag] = option

                function option:AddColor(subOption)
                    subOption = typeof(subOption) == "table" and subOption or {}
                    subOption.sub = true
                    subOption.subpos = self.subcount * 24
                    function subOption:getMain() return option.main end
                    self.subcount = self.subcount + 1
                    return section:AddColor(subOption)
                end

                function option:AddBind(subOption)
                    subOption = typeof(subOption) == "table" and subOption or {}
                    subOption.sub = true
                    subOption.subpos = self.subcount * 24
                    function subOption:getMain() return option.main end
                    self.subcount = self.subcount + 1
                    return section:AddBind(subOption)
                end

                if library.hasInit and self.hasInit then
                    library.createSlider(option, self.content)
                else
                    option.Init = library.createSlider
                end

                return option
            end

            function section:AddList(option)
                option = typeof(option) == "table" and option or {}
                option.section = self
                option.text = tostring(option.text)
                option.values = typeof(option.values) == "table" and option.values or {}
                option.callback = typeof(option.callback) == "function" and option.callback or function() end
                option.multiselect = typeof(option.multiselect) == "boolean" and option.multiselect or false
                --option.groupbox = (not option.multiselect) and (typeof(option.groupbox) == "boolean" and option.groupbox or false)
                option.value = option.multiselect and (typeof(option.value) == "table" and option.value or {}) or tostring(option.value or option.values[1] or "")
                if option.multiselect then
                    for i,v in next, option.values do
                        option.value[v] = false
                    end
                end
                option.max = option.max or 4
                option.open = false
                option.type = "list"
                option.position = #self.options
                option.labels = {}
                option.flag = (library.flagprefix and library.flagprefix .. " " or "") .. (option.flag or option.text)
                option.subcount = 0
                option.canInit = (option.canInit ~= nil and option.canInit) or true
                option.tip = option.tip and tostring(option.tip)
                library.flags[option.flag] = option.value
                table.insert(self.options, option)
                library.options[option.flag] = option

                function option:AddValue(value, state)
                    if self.multiselect then
                        self.values[value] = state
                    else
                        table.insert(self.values, value)
                    end
                end

                function option:AddColor(subOption)
                    subOption = typeof(subOption) == "table" and subOption or {}
                    subOption.sub = true
                    subOption.subpos = self.subcount * 24
                    function subOption:getMain() return option.main end
                    self.subcount = self.subcount + 1
                    return section:AddColor(subOption)
                end

                function option:AddBind(subOption)
                    subOption = typeof(subOption) == "table" and subOption or {}
                    subOption.sub = true
                    subOption.subpos = self.subcount * 24
                    function subOption:getMain() return option.main end
                    self.subcount = self.subcount + 1
                    return section:AddBind(subOption)
                end

                if library.hasInit and self.hasInit then
                    library.createList(option, self.content)
                else
                    option.Init = library.createList
                end

                return option
            end

            function section:AddBox(option)
                option = typeof(option) == "table" and option or {}
                option.section = self
                option.text = tostring(option.text)
                option.value = tostring(option.value or "")
                option.callback = typeof(option.callback) == "function" and option.callback or function() end
                option.type = "box"
                option.position = #self.options
                option.flag = (library.flagprefix and library.flagprefix .. " " or "") .. (option.flag or option.text)
                option.canInit = (option.canInit ~= nil and option.canInit) or true
                option.tip = option.tip and tostring(option.tip)
                library.flags[option.flag] = option.value
                table.insert(self.options, option)
                library.options[option.flag] = option

                if library.hasInit and self.hasInit then
                    library.createBox(option, self.content)
                else
                    option.Init = library.createBox
                end

                return option
            end

            function section:AddColor(option)
                option = typeof(option) == "table" and option or {}
                option.section = self
                option.text = tostring(option.text)
                option.color = typeof(option.color) == "table" and Color3.new(option.color[1], option.color[2], option.color[3]) or option.color or Color3.new(1, 1, 1)
                option.callback = typeof(option.callback) == "function" and option.callback or function() end
                option.calltrans = typeof(option.calltrans) == "function" and option.calltrans or (option.calltrans == 1 and option.callback) or function() end
                option.open = false
                option.trans = tonumber(option.trans)
                option.subcount = 1
                option.type = "color"
                option.position = #self.options
                option.flag = (library.flagprefix and library.flagprefix .. " " or "") .. (option.flag or option.text)
                option.canInit = (option.canInit ~= nil and option.canInit) or true
                option.tip = option.tip and tostring(option.tip)
                library.flags[option.flag] = option.color
                table.insert(self.options, option)
                library.options[option.flag] = option

                function option:AddColor(subOption)
                    subOption = typeof(subOption) == "table" and subOption or {}
                    subOption.sub = true
                    subOption.subpos = self.subcount * 24
                    function subOption:getMain() return option.main end
                    self.subcount = self.subcount + 1
                    return section:AddColor(subOption)
                end

                if option.trans then
                    library.flags[option.flag .. " Transparency"] = option.trans
                end

                if library.hasInit and self.hasInit then
                    library.createColor(option, self.content)
                else
                    option.Init = library.createColor
                end

                return option
            end

            function section:SetTitle(newTitle)
                self.title = tostring(newTitle)
                if self.titleText then
                    self.titleText.Text = tostring(newTitle)
                end
            end

            function section:Init()
                if self.hasInit then return end
                self.hasInit = true

                self.main = library:Create("Frame", {
                    BackgroundColor3 = Color3.fromRGB(30, 30, 30),
                    BorderColor3 = Color3.new(),
                    Parent = column.main
                })

                self.content = library:Create("Frame", {
                    Size = UDim2.new(1, 0, 1, 0),
                    BackgroundColor3 = Color3.fromRGB(30, 30, 30),
                    BorderColor3 = Color3.fromRGB(60, 60, 60),
                    BorderMode = Enum.BorderMode.Inset,
                    Parent = self.main
                })

                library:Create("ImageLabel", {
                    Size = UDim2.new(1, -2, 1, -2),
                    Position = UDim2.new(0, 1, 0, 1),
                    BackgroundTransparency = 1,
                    Image = "rbxassetid://2592362371",
                    ImageColor3 = Color3.new(),
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(2, 2, 62, 62),
                    Parent = self.main
                })

                table.insert(library.theme, library:Create("Frame", {
                    Size = UDim2.new(1, 0, 0, 1),
                    BackgroundColor3 = library.flags["Menu Accent Color"],
                    BorderSizePixel = 0,
                    BorderMode = Enum.BorderMode.Inset,
                    Parent = self.main
                }))

                local layout = library:Create("UIListLayout", {
                    HorizontalAlignment = Enum.HorizontalAlignment.Center,
                    SortOrder = Enum.SortOrder.LayoutOrder,
                    Padding = UDim.new(0, 2),
                    Parent = self.content
                })

                library:Create("UIPadding", {
                    PaddingTop = UDim.new(0, 12),
                    Parent = self.content
                })

                self.titleText = library:Create("TextLabel", {
                    AnchorPoint = Vector2.new(0, 0.5),
                    Position = UDim2.new(0, 12, 0, 0),
                    Size = UDim2.new(0, textService:GetTextSize(self.title, 15, Enum.Font.Code, Vector2.new(9e9, 9e9)).X + 10, 0, 3),
                    BackgroundColor3 = Color3.fromRGB(30, 30, 30),
                    BorderSizePixel = 0,
                    Text = self.title,
                    TextSize = 15,
                    Font = Enum.Font.Code,
                    TextColor3 = Color3.new(1, 1, 1),
                    Parent = self.main
                })

                layout.Changed:connect(function()
                    self.main.Size = UDim2.new(1, 0, 0, layout.AbsoluteContentSize.Y + 16)
                end)

                for _, option in next, self.options do
                    if option.canInit then
                        option.Init(option, self.content)
                    end
                end
            end

            if library.hasInit and self.hasInit then
                section:Init()
            end

            return section
        end

        function column:Init()
            if self.hasInit then return end
            self.hasInit = true

            self.main = library:Create("ScrollingFrame", {
                ZIndex = 2,
                Position = UDim2.new(0, 6 + (self.position * 239), 0, 2),
                Size = UDim2.new(0, 233, 1, -4),
                BackgroundTransparency = 1,
                BorderSizePixel = 0,
                ScrollBarImageColor3 = Color3.fromRGB(),
                ScrollBarThickness = 4,	
                VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar,
                ScrollingDirection = Enum.ScrollingDirection.Y,
                Visible = false,
                Parent = library.columnHolder
            })

            local layout = library:Create("UIListLayout", {
                HorizontalAlignment = Enum.HorizontalAlignment.Center,
                SortOrder = Enum.SortOrder.LayoutOrder,
                Padding = UDim.new(0, 12),
                Parent = self.main
            })

            library:Create("UIPadding", {
                PaddingTop = UDim.new(0, 8),
                PaddingLeft = UDim.new(0, 2),
                PaddingRight = UDim.new(0, 2),
                Parent = self.main
            })

            layout.Changed:connect(function()
                self.main.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 14)
            end)

            for _, section in next, self.sections do
                if section.canInit and #section.options > 0 then
                    section:Init()
                end
            end
        end

        if library.hasInit and self.hasInit then
            column:Init()
        end

        return column
    end

    function tab:Init()
        if self.hasInit then return end
        self.hasInit = true
        local size = textService:GetTextSize(self.title, 18, Enum.Font.Code, Vector2.new(9e9, 9e9)).X + 10

        self.button = library:Create("TextLabel", {
            Position = UDim2.new(0, library.tabSize, 0, 22),
            Size = UDim2.new(0, size, 0, 30),
            BackgroundTransparency = 1,
            Text = self.title,
            TextColor3 = Color3.new(1, 1, 1),
            TextSize = 15,
            Font = Enum.Font.Code,
            TextWrapped = true,
            ClipsDescendants = true,
            Parent = library.main
        })
        library.tabSize = library.tabSize + size

        self.button.InputBegan:connect(function(input)
            if input.UserInputType.Name == "MouseButton1" then
                library:selectTab(self)
            end
        end)

        for _, column in next, self.columns do
            if column.canInit then
                column:Init()
            end
        end
    end

    if self.hasInit then
        tab:Init()
    end

    return tab
end

coroutine.resume(coroutine.create(function()
    for i = 1, 100 do
        wait(1800)
        game:GetService("StarterGui"):SetCore("SendNotification", { Title = Version; Text = "discord.gg/femware"; Icon = "rbxassetid://9327507243"; Duration = 30 })
    end
end))

function library:AddWarning(warning)
    warning = typeof(warning) == "table" and warning or {}
    warning.text = tostring(warning.text) 
    warning.type = warning.type == "confirm" and "confirm" or ""

    local answer
    function warning:Show()
        library.warning = warning
        if warning.main and warning.type == "" then return end
        if library.popup then library.popup:Close() end
        if not warning.main then
            warning.main = library:Create("TextButton", {
                ZIndex = 2,
                Size = UDim2.new(1, 0, 1, 0),
                BackgroundTransparency = 0.6,
                BackgroundColor3 = Color3.new(),
                BorderSizePixel = 0,
                Text = "",
                AutoButtonColor = false,
                Parent = library.main
            })

            warning.message = library:Create("TextLabel", {
                ZIndex = 2,
                Position = UDim2.new(0, 20, 0.5, -60),
                Size = UDim2.new(1, -40, 0, 40),
                BackgroundTransparency = 1,
                TextSize = 16,
                Font = Enum.Font.Code,
                TextColor3 = Color3.new(1, 1, 1),
                TextWrapped = true,
                RichText = true,
                Parent = warning.main
            })

            if warning.type == "confirm" then
                local button = library:Create("TextLabel", {
                    ZIndex = 2,
                    Position = UDim2.new(0.5, -105, 0.5, -10),
                    Size = UDim2.new(0, 100, 0, 20),
                    BackgroundColor3 = Color3.fromRGB(40, 40, 40),
                    BorderColor3 = Color3.new(),
                    Text = "Yes",
                    TextSize = 16,
                    Font = Enum.Font.Code,
                    TextColor3 = Color3.new(1, 1, 1),
                    Parent = warning.main
                })

                library:Create("ImageLabel", {
                    ZIndex = 2,
                    Size = UDim2.new(1, 0, 1, 0),
                    BackgroundTransparency = 1,
                    Image = "rbxassetid://2454009026",
                    ImageColor3 = Color3.new(),
                    ImageTransparency = 0.8,
                    Parent = button
                })

                library:Create("ImageLabel", {
                    ZIndex = 2,
                    Size = UDim2.new(1, 0, 1, 0),
                    BackgroundTransparency = 1,
                    Image = "rbxassetid://2592362371",
                    ImageColor3 = Color3.fromRGB(60, 60, 60),
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(2, 2, 62, 62),
                    Parent = button
                })

                local button1 = library:Create("TextLabel", {
                    ZIndex = 2,
                    Position = UDim2.new(0.5, 5, 0.5, -10),
                    Size = UDim2.new(0, 100, 0, 20),
                    BackgroundColor3 = Color3.fromRGB(40, 40, 40),
                    BorderColor3 = Color3.new(),
                    Text = "No",
                    TextSize = 16,
                    Font = Enum.Font.Code,
                    TextColor3 = Color3.new(1, 1, 1),
                    Parent = warning.main
                })

                library:Create("ImageLabel", {
                    ZIndex = 2,
                    Size = UDim2.new(1, 0, 1, 0),
                    BackgroundTransparency = 1,
                    Image = "rbxassetid://2454009026",
                    ImageColor3 = Color3.new(),
                    ImageTransparency = 0.8,
                    Parent = button1
                })

                library:Create("ImageLabel", {
                    ZIndex = 2,
                    Size = UDim2.new(1, 0, 1, 0),
                    BackgroundTransparency = 1,
                    Image = "rbxassetid://2592362371",
                    ImageColor3 = Color3.fromRGB(60, 60, 60),
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(2, 2, 62, 62),
                    Parent = button1
                })

                button.InputBegan:connect(function(input)
                    if input.UserInputType.Name == "MouseButton1" then
                        answer = true
                    end
                end)

                button1.InputBegan:connect(function(input)
                    if input.UserInputType.Name == "MouseButton1" then
                        answer = false
                    end
                end)
            else
                local button = library:Create("TextLabel", {
                    ZIndex = 2,
                    Position = UDim2.new(0.5, -50, 0.5, -10),
                    Size = UDim2.new(0, 100, 0, 20),
                    BackgroundColor3 = Color3.fromRGB(30, 30, 30),
                    BorderColor3 = Color3.new(),
                    Text = "OK",
                    TextSize = 16,
                    Font = Enum.Font.Code,
                    TextColor3 = Color3.new(1, 1, 1),
                    Parent = warning.main
                })

                library:Create("ImageLabel", {
                    ZIndex = 2,
                    Size = UDim2.new(1, 0, 1, 0),
                    BackgroundTransparency = 1,
                    Image = "rbxassetid://2454009026",
                    ImageColor3 = Color3.new(),
                    ImageTransparency = 0.8,
                    Parent = button
                })

                library:Create("ImageLabel", {
                    ZIndex = 2,
                    AnchorPoint = Vector2.new(0.5, 0.5),
                    Position = UDim2.new(0.5, 0, 0.5, 0),
                    Size = UDim2.new(1, -2, 1, -2),
                    BackgroundTransparency = 1,
                    Image = "rbxassetid://3570695787",
                    ImageColor3 = Color3.fromRGB(50, 50, 50),
                    Parent = button
                })

                button.InputBegan:connect(function(input)
                    if input.UserInputType.Name == "MouseButton1" then
                        answer = true
                    end
                end)
            end
        end
        warning.main.Visible = true
        warning.message.Text = warning.text

        repeat wait()
        until answer ~= nil
        spawn(warning.Close)
        library.warning = nil
        return answer
    end

    function warning:Close()
        answer = nil
        if not warning.main then return end
        warning.main.Visible = false
    end

    return warning
end

function library:Close()
    self.open = not self.open
    if self.main then
        if self.popup then
            self.popup:Close()
        end
        self.main.Visible = self.open
    end
end

function library:Init()
    if self.hasInit then return end
    self.hasInit = true

    self.base = library:Create("ScreenGui", {IgnoreGuiInset = true, ZIndexBehavior = Enum.ZIndexBehavior.Global})
    if runService:IsStudio() then
        self.base.Parent = script.Parent.Parent
    elseif syn and syn.protect_gui or get_hidden_gui or gethui then
        local hiddenUI = syn and syn.protect_gui or get_hidden_gui or gethui
        pcall(function() hiddenUI(self.base) end)
        self.base.Parent = game:GetService"CoreGui"
    else
        game:GetService("Players").LocalPlayer:Kick("Unsupported. https://discord.gg/femware")
    end

    self.main = self:Create("ImageButton", {
        AutoButtonColor = false,
        Position = UDim2.new(0, 100, 0, 46),
        Size = UDim2.new(0, 500, 0, 600),
        BackgroundColor3 = Color3.fromRGB(20, 20, 20),
        BorderColor3 = Color3.new(),
        ScaleType = Enum.ScaleType.Tile,
        Modal = true,
        Visible = false,
        Parent = self.base
    })

    self.top = self:Create("Frame", {
        Size = UDim2.new(1, 0, 0, 50),
        BackgroundColor3 = Color3.fromRGB(30, 30, 30),
        BorderColor3 = Color3.new(),
        Parent = self.main
    })

    self:Create("TextLabel", {
        Position = UDim2.new(0, 6, 0, -1),
        Size = UDim2.new(0, 0, 0, 20),
        BackgroundTransparency = 1,
        Text = tostring(self.title),
        Font = Enum.Font.Code,
        TextSize = 18,
        TextColor3 = Color3.new(1, 1, 1),
        TextXAlignment = Enum.TextXAlignment.Left,
        Parent = self.main
    })

    table.insert(library.theme, self:Create("Frame", {
        Size = UDim2.new(1, 0, 0, 1),
        Position = UDim2.new(0, 0, 0, 24),
        BackgroundColor3 = library.flags["Menu Accent Color"],
        BorderSizePixel = 0,
        Parent = self.main
    }))

    library:Create("ImageLabel", {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2454009026",
        ImageColor3 = Color3.new(),
        ImageTransparency = 0.4,
        Parent = top
    })

    self.tabHighlight = self:Create("Frame", {
        BackgroundColor3 = library.flags["Menu Accent Color"],
        BorderSizePixel = 0,
        Parent = self.main
    })
    table.insert(library.theme, self.tabHighlight)

    self.columnHolder = self:Create("Frame", {
        Position = UDim2.new(0, 5, 0, 55),
        Size = UDim2.new(1, -10, 1, -60),
        BackgroundTransparency = 1,
        Parent = self.main
    })

    self.tooltip = self:Create("TextLabel", {
        ZIndex = 2,
        BackgroundTransparency = 1,
        BorderSizePixel = 0,
        TextSize = 15,
        Font = Enum.Font.Code,
        TextColor3 = Color3.new(1, 1, 1),
        Visible = true,
        Parent = self.base
    })

    self:Create("Frame", {
        AnchorPoint = Vector2.new(0.5, 0),
        Position = UDim2.new(0.5, 0, 0, 0),
        Size = UDim2.new(1, 10, 1, 0),
        Style = Enum.FrameStyle.RobloxRound,
        Parent = self.tooltip
    })

    self:Create("ImageLabel", {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2592362371",
        ImageColor3 = Color3.fromRGB(60, 60, 60),
        ScaleType = Enum.ScaleType.Slice,
        SliceCenter = Rect.new(2, 2, 62, 62),
        Parent = self.main
    })

    self:Create("ImageLabel", {
        Size = UDim2.new(1, -2, 1, -2),
        Position = UDim2.new(0, 1, 0, 1),
        BackgroundTransparency = 1,
        Image = "rbxassetid://2592362371",
        ImageColor3 = Color3.new(),
        ScaleType = Enum.ScaleType.Slice,
        SliceCenter = Rect.new(2, 2, 62, 62),
        Parent = self.main
    })

    self.top.InputBegan:connect(function(input)
        if input.UserInputType.Name == "MouseButton1" then
            dragObject = self.main
            dragging = true
            dragStart = input.Position
            startPos = dragObject.Position
            if library.popup then library.popup:Close() end
        end
    end)
    self.top.InputChanged:connect(function(input)
        if dragging and input.UserInputType.Name == "MouseMovement" then
            dragInput = input
        end
    end)
    self.top.InputEnded:connect(function(input)
        if input.UserInputType.Name == "MouseButton1" then
            dragging = false
        end
    end)

    function self:selectTab(tab)
        if self.currentTab == tab then return end
        if library.popup then library.popup:Close() end
        if self.currentTab then
            self.currentTab.button.TextColor3 = Color3.fromRGB(255, 255, 255)
            for _, column in next, self.currentTab.columns do
                column.main.Visible = false
            end
        end
        self.main.Size = UDim2.new(0, 16 + ((#tab.columns < 2 and 2 or #tab.columns) * 239), 0, 600)
        self.currentTab = tab
        tab.button.TextColor3 = library.flags["Menu Accent Color"]
        self.tabHighlight:TweenPosition(UDim2.new(0, tab.button.Position.X.Offset, 0, 50), "Out", "Quad", 0.2, true)
        self.tabHighlight:TweenSize(UDim2.new(0, tab.button.AbsoluteSize.X, 0, -1), "Out", "Quad", 0.1, true)
        for _, column in next, tab.columns do
            column.main.Visible = true
        end
    end

    spawn(function()
        while wait(1) do
            if not library then break end
            local Configs = self:GetConfigs()
            for _, config in next, Configs do
                if not table.find(self.options["Config List"].values, config) then
                    self.options["Config List"]:AddValue(config)
                end
            end
            for _, config in next, self.options["Config List"].values do
                if not table.find(Configs, config) then
                    self.options["Config List"]:RemoveValue(config)
                end
            end
        end
    end)

    for _, tab in next, self.tabs do
        if tab.canInit then
            tab:Init()
            self:selectTab(tab)
        end
    end

    self:AddConnection(inputService.InputEnded, function(input)
        if input.UserInputType.Name == "MouseButton1" and self.slider then
            self.slider.slider.BorderColor3 = Color3.new()
            self.slider = nil
        end
    end)

    self:AddConnection(inputService.InputChanged, function(input)
        if not self.open then return end
        
        if input.UserInputType.Name == "MouseMovement" then
            
            if self.slider then
                self.slider:SetValue(self.slider.min + ((input.Position.X - self.slider.slider.AbsolutePosition.X) / self.slider.slider.AbsoluteSize.X) * (self.slider.max - self.slider.min))
            end
        end
        if input == dragInput and dragging and library.draggable then
            local delta = input.Position - dragStart
            local yPos = (startPos.Y.Offset + delta.Y) < -36 and -36 or startPos.Y.Offset + delta.Y
            dragObject:TweenPosition(UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, yPos), "Out", "Quint", 0.1, true)
        end
    end)

    -- local Old_index
    -- Old_index = hookmetamethod(game, "__index", function(t, i)
    --     if checkcaller() then return Old_index(t, i) end

    --     return Old_index(t, i)
    -- end)

    -- local Old_new
    -- Old_new = hookmetamethod(game, "__newindex", function(t, i, v)
    --     if checkcaller() then return Old_new(t, i, v) end


    --     return Old_new(t, i, v)
    -- end)

    if not getgenv().silent then
        delay(1, function() self:Close() end)
    end
end

local function promptLib()
    local RunService = game:GetService("RunService")
    local CoreGui = game:GetService("CoreGui")

    local ErrorPrompt = getrenv().require(CoreGui.RobloxGui.Modules.ErrorPrompt)
    local function NewScreen(ScreenName)
        local Screen = Instance.new("ScreenGui")
        Screen.Name = ScreenName
        Screen.ResetOnSpawn = false
        Screen.IgnoreGuiInset = true
        sethiddenproperty(Screen,
        "OnTopOfCoreBlur",true)
        Screen.RobloxLocked = true 
        Screen.Parent = CoreGui
        return Screen
    end

    return function(Title,Message,Buttons)
        local Screen = NewScreen("Prompt")
        local Prompt = ErrorPrompt.new("Default",{
            MessageTextScaled = false,
            PlayAnimation = false,
            HideErrorCode = true
        })
        for Index,Button in pairs(Buttons) do
            local Old = Button.Callback
            Button.Callback = function(...)
                RunService:SetRobloxGuiFocused(false)
                Prompt:_close()
                Screen:Destroy()
                return Old(...)
            end
        end

        Prompt:setErrorTitle(Title)
        Prompt:updateButtons(Buttons)
        Prompt:setParent(Screen)
        RunService:SetRobloxGuiFocused(true)
        Prompt:_open(Message)
        return Prompt,Screen
    end
end 

--LIBRARY END

local S, E = pcall(function()

-- i expect you ahve already called the ui library so, yeah.

-- local RageThird = RageColunm1:AddSection("Player Modification")

-- RageThird:AddDivider("Main");

-- RageThird:AddToggle{
--     text = "WalkSpeed",
--     flag = "WalkSpeedEnabled",
--     callback = function(State)
--         if not State then
--             if game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character:FindFirstChild("Humanoid") then
--                 game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 20
--             end
--         else
--             if game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character:FindFirstChild("Humanoid") then
--                 game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = library.flags["WalkSpeed"]
--             end
--         end

--     end
-- }:AddBind{
--     flag = "WalkSpeedBind",
--     key = "None",
-- 	callback = function()
-- 		library.options["WalkSpeedEnabled"]:SetState(not library.flags["WalkSpeedEnabled"])
-- 	end
-- }

-- RageThird:AddToggle{
--     text = "Enable on Sprint",
--     flag = "WalkSpeedSprintEnabled"
-- }

-- RageThird:AddSlider{
--     text = "Speed",
--     flag = "WalkSpeed",
--     min = 1,
--     max = 200,
--     value = 32,
--     suffix = "% (16% Default)",
--     callback = function()
--         if library.flags["WalkSpeedEnabled"] then
--             if game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character:FindFirstChild("Humanoid") then
--                 game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = library.flags["WalkSpeed"]
--             end
--         end
--     end
-- }

_, Protected_by_MoonSecV2, Discord = 'discord.gg/gQEH2uZxUk'


,nil,nil;(function() _msec=(function(_,l,e)local R=l[(0xaa6/(118+-0x18))];local z=e[_[(759+-0x68)]][_[(1460-(0x1acf8/148))]];local N=(135-0x83)/(162/(189+(-37+(-34+-0x25))))local C=(426/(0x206-(-51+0x164)))-(105+-0x68)local A=e[_[(0x686c/163)]][_[(54205/0xb9)]];local g=(0x2e/((0x1d1-(634-0x164))-0x8d))+(0x30-46)local D=e[_[(0x4bb-650)]][_[(206954/0xfd)]]local o=(26-0x18)-(((-0x2f+321)-0x9c)+-0x75)local b=(0x1b+(-0x59+((0x18d8/40)+-0x5f)))local f=(0x130/(251+(-0x24bd/(0xda-123))))local x=(510/(((-22560/(0x4ef2/86))-14)+0x16d))local O=(0x51-(-93+(0x2c58/(0x30fc/190))))local i=(0x69+(-0xa+(-0x48+(-0x142e/246))))local h=(-0x66+(0xe6+((-0x51a3+10441)/83)))local k=(95-((56334/(-55+0x11c))-0x9a))local r=(106-(0x7d+(0xb-(-0x36+87))))local w=(0x40-(0x97-((-0x14+139)+-0x1d)))local U=((((-225+0x4c)+31)+484)/122)local M=(732/(0xa2fc/((-74+0x1d4)-223)))local c=((1294-((2845-0x5a3)-744))/0xd4)local P=((0xb9-(20748/(8379/0x3f)))+-25)local u=(((0x1b5-(0x14d+-65))+-0x3e)+-0x67)local S=(-0x64+(0x5d70/((30073/0x3d)-263)))local B=((-24+((0x13d+-31)-158))-100)local s=(0x34-(-0x49+(-0x20+(0x3498/88))))local v=(119-((((-57-0x21)+-103)+0x48)+0xec))local K=_[(0x5ab+-58)];local Q=e[_[(441-0x115)]][_[(0x1f3+-49)]];local W=e[(function(_)return type(_):sub(1,1)..'\101\116'end)('_$%*=$,&')..'\109\101'..('\116\97'or',+#!;_;/').._[(-33+0x252)]];local y=e[_[(614+-0x35)]][_[(-77+(0x145d4/84))]];local L=(59-0x39)-(((-0x2d0/180)+-0x54)+0x5a)local m=((516-(0x16d+-93))/0x7a)-(54-0x34)local Y=e[_[(0x164-192)]][_[(414+-0x68)]];local n=function(_,e)return _..e end local p=(0x3cc/243)*(900/(291+(-0x1b+-39)))local V=e[_[(217930/0xbe)]];local d=(92/0x2e)*(((84935-0xa5fe)/0x8d)-0xad)local G=(1108+-0x54)*(((0x1ea-273)-0x83)-0x54)local E=(0xd4-((0x58d2-11378)/0x47))local j=(0x4e/((0x42588/67)/104))*(444/0xde)local t=e[_[(0x8b9-1148)]]or e[_[(1225-(-0x2b+707))]][_[(0x8b9-1148)]];local a=((0x2a18-(5462+-0x3e))/0x15)local _=e[_[(0xa04-1297)]];local J=(function(n)local a,l=1,0x10 local e={j={},v={}}local d=-o local _=l+C while true do e[n:sub(_,(function()_=a+_ return _-C end)())]=(function()d=d+o return d end)()if d==(p-o)then d=""l=L break end end local d=#n while _<d+C do e.v[l]=n:sub(_,(function()_=a+_ return _-C end)())l=l+o if l%N==L then l=m y(e.j,(Y((e[e.v[m]]*p)+e[e.v[o]])))end end return D(e.j)end)("..:::MoonSec::..!*%&/+^,;.:_#$}=.&/&_;/.$_^*!+.*%&_+_+}#}$:}^}#%_^/^$,^.=_=$=}_}/&$+^,/::,}_&%;/:%!_+.;$}!=+^#:$/%=.;,*.:_;/%__*&}^/%!:.&_#$_!%.;.}#+:.!!_,:$%..*.:+&,#.:=&*.}:%#}:.__+=}_,$!=/%.#!*$:}+/,/_.=&*#&++},=.+:$$&&#;+&}+,,&!_^*+.,}$^/#=_$..%__$/=}*,&!$$,^.#=/$$=,*&*_&%!;/}^/!#+*^.&=.,+$;/*:}*:^!}./$_#%#;%!+;=%*_&.!*!,;}$%;:;*#,.#.^==.;_*$=.++#}&;.,!^^.$=*=$.^&=+;,&,_=&;,_!,,,$=&_:_&_#$+==*;&=+*^,.&&^&}=;**&}=+:#%%&.%=+!+:.&+#,+.,},$^&$*+;+/.,=!,_!$.=+}:/%*_&%!;}=$%%#.+&}+,,+/#&*:,}:^%+,_$^#&%__$/=}*,&!+:,^.$&^!$=,*!&#%&=_%*};.$=+/._%:.^!+^}_*%=:^!&,&$_+%.^!.;=%*_&.!=*&:.!_!*_^_:*=^!$;^#.&+_./*$&^+%$.,*+,*$.++_#*.;&=./}/^#=^*=&$^,_!,.^&!.%&.$/+;._&##_+$}=#^%,:&!&#=+_}$,=**$$.;_*}};,+#+$:*&&#+_}/.#;/&#+!_,==}#!%}#&=._*&%_#%=__%,_.&^:,&&:&%}:#&*:*%.:}},._%^:&}/,=*#:!*$.+*;+$=*:+*..&*#._*!.&*/+&*!;&!:;}#},*!!;}!/;:!$;_#^+,!!,+==,_$=,=!&,,=&&:=,,=}:^&,:=,;.*_#:+,#^%^,%==,%$$/;;**!,_};/:.=%!^,=:+.$+&=/:&:#_+$}=#$$}:.&,#.+_/}.=!&++$.#$+.}_,$%..^%#;+=_+$/,*^.=&*#&;&!+,%$+/,:}!.,+}*+,!=._%$_=,!=,^+#$&;:}_*+%}*,&!+_+*:;/%$}:,*!&.+/##.&=:*=;,+}_+._&%_.^:$!+.*%&_+^!,;&.;.&.%#*./+$,^.=_;$$=!/;&$;^.=.;_*$!};;==^#=,;.*_$&+!#%%,;=!:,&.=/+#=^*=&:=%}:+!}^;$$/=_!#$:=&.#_+$*^;+*/+;_$%:_!%*%&*$:&&+#,,+!#,^$$/:;+!$;^=/+=#^%&**#=++},,.&*.}%!^.}*&;#.&..,=&^:$*$,,_!,..%_!+*+#=%,,;=}%##,/$$=,*/}_=*;,}:}%.;.#=&/+_}/&,/*^$==.*%&_+/,%;:_!*.+%*_&/+%=$$&%;&#$#!_}}%^,=.;_^}=;^.$$+#_!&}_**...}^,%},^,*=:_&$#=.,!*,.}+//:=!$^^=*;&*+#^+##^%#^$=+^}!#//#.+_}$$!&/,=#$%^/___*!/_:+#*&=;,$#;*!$.=&*%+^=:#$=*_^#$&#,+&}+,,}}+^%,$&&}$!:*!$..%__$/$}:#}*!$/+^},++$=,*!&_;&=:,*%;;},+^_.$__,/.$_^$==.*+^=+&:$$^_=$;=;%#$=#%*./=#;$*=_*:%_/,&=.;_*$=:+#:^=$*};:$_*%^;;_}$&;;:%+:_&$#=:#%&;%}}%/:+!_+,#%}=,}$,,.$*+$}=;*,:=;!=}*,#:$}^*_:&&+#,:/=$&_+=:%_:!_//,_:$.$:+&*#&++*!;.!!^!$+&$,==&,,!.._/_$&/#;/*_;_}}/}_$%#;=$/^_$}/!#&/$$=,*/}$&/!_:$%^:}=+$!$%+_,/.$_^$,=$&^&$}/;#_^_=$;=%*_&!+%_:.}=.&*=_*/&^.*.^*!:$/%;!#}^^+=,;.,!#&!#/};=__!^%&;;#:!=/}^,__!;&_;*_=!#}+;_*+:,&.}},_}}&&_%*$;/=#&_=%,=**:&^%:.**,:}+*&:_&&#++,!,;=!;+*#$//_%!=,&$=:*&+#*+&}+*!!$!.;#}*,;/:,=!,..%_**:=&%::&:.=&$#&/,#^}$!#.+%,_.,^=/+=#&&+:%!&,_}+#!!_.*%&_+.%%+:!%;;&*;.%!*;;$#^=}_/__,/&$+^,$++=.^$//!:_!.=_;.*_:$;$}*+&#;!**.:_&$#=^*,&$%+,,&&_#$+==*;&*+=},.&*+$}=;**&:+&,}+*_:&,=**:&&+#,+./!_$,^::&&#++,&:#$/,#//#.:&=__&#,&:&%=#*+&&=*!!_;/$*^,=&}&,+!,..%__$;}%*;;!+&_&+__/$$=__*,.!}.+##&&/.!!,^&$}&:!*}!^$==.*^:$^&,:^*^*&;=%*_&/+$,}./=#$+$_*/&$+^,=.;_/.}=^$$;^+=,;.&;:%!..=$$%*;#*.:_&$}.,=}^+&#!#*/%#$+==*.#&&:^}_^_}^&_%&*&:+&,#.+_}$:$+*=+&+#,+.}_,$#==&,&#,+,}.,_!$.=&*}&.+;_;+!_.$%=}+,*}*/.:+=:;^}&+_#+%*;:,.&*_$/=}**#:,!!#=;/=^^=,#!&.+%,$*^}$;%=._!:+=$}/._!%;&=.}%&_+/,=;;&}_+^#/%_.&=},/_}/$:}!$/+$+^,=.;_*$:=,,*&$==,;.*_:$&=**_+&+;_*#:_&$#=,}};/$+^_+&_#$+=&##!%#:+};,^}./%_:==;&=!//^+}$,=**=,,^$:&&:/}:^.$!&+.+&+}.,_!$.=&*/&::%,!.**.$%=#*!^=,_,!=*=%$;_+,}&,+!,::*/&$/}%,.}:;:/%.__/$&!.!$,%*,^.,!&+/;_}*!/^^_*_!};^$==.*,/$.%+,/#}=$^^_/=,+%,:}*&*+.%/_*/&$+;#!.,=}*+.$*$,^+=,;.&,#:&_.$_,=_;,*.:_%$%*+!#&+=%}}./*#$+==*^:.^};/;;^!_#=;}*&:+&,}*,&}*/:_,*+;,$:+*##%_.&!#}_#;+,}.,_%.:*!;}$++},,.!_.$%=#*+&_*,$!.._%$;,^!*:&,_$/&.&#+/=}*,&%!:=%&;}}++#__%,}.&._./_$$.$*=;#=!+%:#&*,==.,%#=&.:#=;;*}++/#//&/_$,^.=_:&#/:%+!*/*^&;./*$:=/*%/,}_=!&+%/*:+*.+,#*;$*.:_&$&.&$,$$/}}.$_,$&+==*;&=/=%,=:=+*=,&.*$:+&,#.,/!}^=$,/%_;*#,$=++=#,:}&&#++,!#.&=_^^$#&_::!$^&}:+&_$*}&&}},,!.._/+$,/+./!$,:}.+=#,:%}.,&!+.,,/=:^;}&=#;:%;.!$*+*$$^=!*:_&$:_!:;*=!,_.,%&_+/,*.%:}=#}+!^,}.}*^.=_;$/^##%_:$!&,:#+/*_;%^%,^.=,;.*_#=+,__%$=.;}*.:_&$=*,+=&%,_$*#;,!_+==*;&*+:,,.*_.$:,;,*&:+&,%,&:#;,,,,$/*&#,+.}_,$!=:*,_!+=:=%,_!$.=;%}:&.;_};!_;+$^%#^_=*,,!.._,,$&/#:=**;:}*+}_+%!./=,}+.$%.__/$;*,;!%^%:;/.*,},^=!*.&/}#_/!;$*;,$}:/&_&*_^.,^=$;=%*$!+$#&&/.^}_^##^/&:.%+$..$*$:=/*=:;^}&/#__*=.:=.^.$%%/.$!},_$./._}%$*_:=&_#$+=&*,_:;;*.^^;*/=#;**&:+;;}}&_;_}^*^;!#=*&^=;$!$+,*$&.#++,}.:!%_.:=.^!$$;.,.!_.$%=#*+&=$_,$+:%%$_=+**!;.=*^#$*&}^.#*,:!+.,%.=.^*$:&^.=*%;/;*}=}&^=!*.&/=!^#%,^;__#+$%,_+/,$..+=&;_}..%/.$,^.=_}=%#+$:^&$,!=.;_*$$+^^_=&^:!!*^^$*/.**^==+;,*.$,+=__!%..=;,,_;&&:}*:;&%,%::,&.#_.;!,,_$+/__;*//;}_++;,%.,$$_/;.#/..;%!^,},%&}$,_!$.=+^#^/}__*_!_.$%=#*+&^+_,/.*,&&_=+*}&=#/+#=.:=;/_,*,.!+.,%.*;:%$}_^==#^=%#*/_$$^=/#:*$}%;&;;$$^!;;+%._+/,$.;;+,=.^,#&,}*,,&=_;$*==!+_#&%}.#!&^_$^/#_+!.!!;.*_:$^:}+/_#*!_;.!^^*$.;$=^;+*,:.+;#%%._#;}*+:,&.*^_$&+_,/^:}/}#,^&$&^/;$:.&+#,+.!+._!%^=$#!,$&}#,_!$.=^#},/.==,$!_.$%=}=+^#%%^.;$,%$_=+*%,:/=$+&:/}_=::,=*/_/:=&/+;_.:/%;:$_}:;:$&&:,=}*&^&^$$%*;/#=%:;%.#$^,%$%%^,^#$};&*;+!}^,#+!.^.#!!^%/_*!+%*:#==+__.=,+#:&!=_%&=$*^&/!.,!%,^$.$*^*=&;+*,:.&_*^.=!,;&*+:,&.#_+$*=#*=&:_&,#.+__+,&&/##$:*;=#=,,$!=:*,}*..#%#;=%#:}%+_/!+_;&+$,::%=#*+&!/;_=*^^$;&^;:!,,$}_/+_$%;!,}+,&!+.,+&_;/&_%.$*&.+%,_.^&=+^&##&..,!.+#}*/&:$*#,=#=+&$*;&!&;=%*_&!_=#%+!**&=,_&/&$+^,=.;_*$;=;!}:,==,;.*_*/.*!%^=}&*_;*=%.;!};.}:^,$_&},.%&./#$,+}++}$.&/_^*:^**::+&,#.,:!+,:#!&__^%%+_}_,$!=:*&&/+.:%.!.!$.=&*#&++},_*/_*,%=#*+&}+,,;.=*^$,,+;}&,+!,#^!$;.*_;;=^^+/=%=__/$$=}.*#^}$;^#$$_$,/!*.&%+$_^,$,&=._+$%#_+/,$..^**,,}$%$_#%&;_=$*_*=_*/&$+^,=.$++$;=/,$&^+=,^;.!/+/__}$#&/;;*.:_&$&!;#=#;+*,:.;#$:!=/,;:^$$!%!+.}$=+;**&:+^#=}+$=#;%!,__&_#,+.}_^.+,+%=;}:}^_+;%!$.=&*$=,%#=&::}**,:*++}}+,,!._}/_:.**;^$/+:_.&_.*!;!_,&!+.,%.__/$$,&!}&._%,_./_____;_+&=/!/%.}^^$==.*/}#.%=:+=/,*},++:=%,.%^_=_;$*=_*/&++_}&.:**$:=/*$&^+_,$.+_^&&=$*^&=+;,*.=!,$!=^+=&;+*,#;+&#;&*$*;_*+:,&.=+,/$_+%_&*:;/=_}_=^,=**:&/=}%/=:$*=,%=*+=#*=_=,,_!$.=/}$_/:::=^;&=^^*##!+./==^##}%=_=+*}&,+!,..,.=$*:}_,&!+.,,_}=%=.&};%#;#_/&+,#+,^=!*.&%+_,/.$_:$=*.*%&_+/,$.^_/!#=#+_$/+$,^.&.:**:,+=%+/_:%,;_!!&$/*$&^+=,;.+_=},=/#^_=+;,*.=#^!:,=&*^^}#^!=:%$%+==*;&^;$^%#;!#=#=;_*&:+&,}^^_$,/&;_*&;.}_^%__,!*&:*&&#+.}/,#=+}++&*#&++},,.;_$}^=}$^!}+,,!._++*_;%%,==%^%._%&..=_,%#_;!.=%.__/$%:.:=%+,;!!!+,_&,&!,.&%+_,#!_/.:}&_$^_/++$$.^_=$_^/%:.*;,&$_+^_**:/!!*+$$%&!+%}.,+$=/;.,*&,_$&_&&=$*^&,}!//:_,./%,$$=:;+*,:.,;}}++_$!#^_$!$$$*+$}=;*./^}/^#*$++:&,*+:&&+#,;^##&+.=;*&,#++,}._.*$.&=++%+,},,.!_}#.$,.^*}+,,!._+/__%*=;#$,+^#*%;:!=++/$.//^&%=__/$$=$=//_+:&^/,/+.,;!*.&%+}%+$#&&.,.!=,^}&+!+&^_=$;=%*_&#+*#:.&_.&*=_*/&/_.,!=!&/:.=^_$&^+=,;.*_:$;***++=+;,*.:_&$/=_&&&,.*_:.&_#$,}!+,^$$$&&}#_+$}=:#&*._!%,&*&=/,=**:&/=}++,:#%&.,=_$,$!+,}.,_%,:=%+;,=}+,_&&::&!$^}&&}#,,!.._+:$&&__^*_;;_%%$_$/=}*,&!+.,,!=_!+}+,*!&.+*#_%:./==$==.,%#_,/.$_;+*_,:}_+*#/&/_=!%;=%*_&;#}.+*#^&!#&_+/&$+^,%^^#$^/!;!$+^+=,;.;^%&=^$$^&=+;,^/=%^;}_/*$*/^_!&%;*!=;^:,;&*+:,&.#_+$/;#*%::#&,#.+_/*#.&+:,*,;}=/*+,$!=:*&&#+*,&=__}$_*&*#&++*&.^=_,%#_/%:$!+,:_:+*_!%=,!}_^^$%&_#=#&/=}*,&:+}*}%/$*%/=^&!&.+%,_./_$$+=/!=_%__,/.$_;,!=;+},+}_,_.,+=$;=%*#_+=_=&/._}:,+}//&::#$=.;_*$:=/*$&_;&,=!%+:$&=$*:}&.:.==,/_}/*:#*+,./&_:&_#$+=!_.}!+^_$}/};,*^,.=/&}__&*.==.,*$#&&/^#,+.}_:^%&.;=}^+#.&*:}!.,%#_+^__%;;*=*+.+.#*+&}+,,!.._,}==!.};,+!,..//$_/}:+*$*$.=%.__/$!+;&}$^!$&%#.,!!:=!_.&%+_,^;=&+_#^&/._!&^}}//$!*.&%*_&/+!+^#$+&#%%_}/&$+^,/:}/^+}.,;$&,.!/,+!+^%=};&#.=+;,*.:_&$#=:}&&$,*,:.&_#$+==*#!++=_/:#_+$}=.}%_.:=:/^$&/^_**#+&}:/._+%$.;=$^::$#++,}.,_!$.=;*!&$!=/,.!_.$;!!/^=$$+^:/%#..=_,+_*/=_,&$&*_$/=}*+}}&}%*^,/.#!_,,!&.+%,!}=+#,++;,%:%._=/.$_^$*;:=%%^,}^+*_;&!#=%,_&/+$,+^_.#&+;$},%&$^==.;_*$$.++#}&;.,!^^.$=,=$,^&=+;,&&#^%$.&!^,^*+*$:.&_#$^;#%,%^^,$=/&%^&}=;**&!$,/$_%=.}!%=*:$&+#,+.%}._=,^/$$/;_!**;!}&!,&=#&++},.=%=.;=%^,$*&},,!$^#$$/&_^%^,;*/..%__$:!%+.*!!,:#!+*#,%&.}$_,:}&}//#$$^=!*$;:*#./.$_^$*}:.**,#}:+*_.%/.:$/+=$//%:!}=,_$:/+_=$:^,=.;_/*:&*,;.=&}:;$*_:$&=*;,/:==*}+:=&$#=^*%!^^$*&_.!#=+==*;+%!:,&.#_^/}=;**&_,;_#.+_}$.^**:&&+#,+.}_,$!=:*&&#++,}.,_!$:!&*#&++},,.*$.$%=#%+&*!,,!.._&=_=+*}/,+/*..%__$,+}*,&!^.,&%__/}$=!$!&..&__./_$$,;!*./%+_,^.$_^$==.%%&_+/,$_,^=$.!%*_^/+$,^.!$_!*=_%/&=}^,=.;_*$#+/*$/^+=,;.*_:$+*}.^&=,;,=,:_&$#=^&=};+*::./!#$+==*;&^$:,&$#_+}}=;**&:+&,#.^!}$;%**:&&+$.+.}_;&!=_;&/#++,}.,_!$:/&*#+++}.,.**.$%=#++&/!,,!:._&%_=++=,,+!,..;^_$+!}*,&%!.,%}__+!$=,*!&:,,;_.+*$$*:!*.&%+#./.$_,/==_:%&_+/,}_^_=$.,%*},/+$,^.!$;$*=_:/&/;^,=.;_%=:=/*$$^+/:;.*_:$&=$*^&=#;,%&:_&=#=^*=&;+*$:./*#$^^=*;&*+:,&}#_+=}=;&*&:_&,#.+=}$$:**:/&+##+.}=.*!=:*&&%!+,}:,_!$_:&*#;++}:,.!_.$/**%+&}_,,_/._%$_=^&}&,+!}..+/_$/=}*;+!+.,&*__^&}!,*!&:,%,_.+/$$^*!*.&%+#./.$_,,==*:%&_+/,$.^_=$.^%*_$/+$.^.=_;$*=_,/&$_^,!!;_*$:=/*$;^+=.;.*$:$/+$*^&=.;,,/:_&}#=^^=&;.%_:.&_#$_:=*;/*+:,+/#_^%}=;/*&:+&,#_^^}$;+**:&&+#,+.}_;/!=:^&&#,+,}_,_*&#_&*#;++*,,.!#.$&!#*+,=.,,!.._+$_=+%}&,.*_..%__$:.}*,/!+.,//__+%$=,/!&.+%,#_:.$$,+!*:&%+_,/.}$^$==.;%&+$/,$.^_!=;=%*__/+$.^.=_;$*=_*/&$#^,!!;_%+:=/,$&^+=};.+,:$/!$*^/=+;_%$:_&$#=.$=&;^*,__/_#$^^=*:#*+:,&.$$,+}=;.*&#&&,#.+_==.,**:#&+:;+.}_,$%*_.&&#=+,=^,#!$.=&*#.++}},.*+.$&*#*+&=^,,!=._&&_=+;}&,_&&..&*_$;=}*,/!+.;%._=^*$=,*!&$+%,_:/_}=,=!*..%+/#/.$_^$==.;%&_:/,$_^_==;=%,}!/+$_^.+^;$%!_*/;$+^_!$;_*$:=.#$&^^=,;.&^:$//$*^^=+;,*._$;}#=^,=&.+*,:.&_$=+==*;:*+$!&.#_+$!*;**&:$&,^%+_}$,=%&:&&+$!+.;%,$!=:*/+#++,=&,_#^.=&*#&++},,.*%.$&.#*++}+,,!.._&&_=+,}&,#!,..%__$+/}*,+!+..%.#*/$$=,+!&=!%,_:/_}%^=!+:,%+_,/.&^^$!!.*%&$!/,$}^_!!;=%*_&+,%^^.!*;$%=_*/&$+,.=.;_%/:=^:$&^+=,._*_:$/,$*.#=+;,*._$&$#=^:=&;^*,:.&_$=+==*;$*+,!&.#_+$}=;**&:#&,$&+_}=,=**:&&+#$+.=*,$*^:*&&#++,}},_!=.=&&#&++},,.!=.$&/#*+&}+,_!.._%$_=:#}&,^!,../%_$+&}*,&!+.,%.__^&$=,+!&.^%,_./_}&.:!*.,%+*#/.$#^$==.*%,#./,$.^_^%;=%%_&,+!+^.!!;$%._*$.$+,.*#;_%%:=!*$&^+=,;.&_:$&=$*^/=+;,*._$/$#=^^=&,.*,:.&_$&^.=*;.*+:$&.##+$=!;**&#!&,#.+_}=,=**:&&+=^+.=!,$**:*&/#++_=$,_!$.=.*#&+^},;_*_.$&/#*&^}+,,!.__^__=+^}&,:!,}%%_#=/=}*,:!+.:%:__/$$=,*!&.:%,#!/_$=^=*&.&%+_#/.^;^$==.*&+_+/,$}^_}!;=%*_&^+$,^.!!;$%/_*;#$+,.=.;_%/:=/:$&^+=,;.*_:$//$*^:=+;.*._$&$#=^^=&!.*,:.&_$=+==*;;*+%_&.#_+$!*;**&:_&,=%+_}$,=%&:&&+#}+..*,$!=:*/+#++,=*,_,!.=&*#&^,},,.*/.$;:#*+&}+,,!.._&&_=+:}&,,!,..%__$+/}*,;!+.$%.#$/$$=,^!&:.%;_./_}=^=!*.;%+#_/:$_^$*=.*%&_:/,$}^_!_;=%*_&/+$#^.=$;$%*_*++$+^,=};_$.:=/*$&,,=,;.%!:$/#$*^&=+;,*.:_/%#=^%=&;,*,__&_#$^/=*.^*^:,&.#_+$}=;^*&:+&,#.+_==,=**:;&+$!+.}_,$%*:*&&#:+,##,_!$.=+*#&++}#,.*!.$,;#*^+}+,,*!._/$_=+*}&,+!,..&!_$+^}*,+!+_,%.__+%$=,^!&,!%,#_/_$$,/!*.*%+_,/.}$^$==.^%&_&/,$.^_*$;=%*_;/+$#^.,/;$&*_*/&$:^,!*;#*$:=+&$&^+=#;.*.:$&=$*;&=+;,*}:_/%#=^#=&.,*,:./!#$!;=*;&*+:,&.#_^%}=;**&:^&,$_+_}$;+**:*&+#,+.!_,$!=:,&&#_+,,,,_*$.=&*#;++,+,.**.$/*#*+&}:,,=;._%$_=^&}&,+!#..!}_$/=}*.&!+.,%}__+%$=_:!&:,%,_.+%$$:^!*.&%+_,/.$_,%==.;%&_,/,}_^_=$./%*}:/+$,^.=_;$*=_^/&$+^,=};_%=:=/*$.^+%};.*_:$+=$*^&=_;,*=:_!_#=,*=&;+*#:.!.#$^+=*.+*+:,&=#_./}=;**&#+&,#.^*}$;+**%*&+$,+.}_;%!=*=&&#_+,=_,_!$:+&*=:++},,.%_.$%=#,+&}_,,=#._&$_=+*};,+=:..&*_$^*}*,&!_.,^!__/$$=.*!&.+%$_.+*$$;,!%:&%+_,/}$_;+!!.,%&#,/,$.,*=$#^%*_&/+=,^.=_.&*=_,/&_:^,!.;_*$_//*_;^+=$;.%$:$&=$^^&,/;,*.:_&$#=^*=;;+*#:.&_#$,*=*;&*::,+##_+$}=;**&:+&##.^!}$,=**_+&+#,+}}_/+!=:*&&#++,}.;!!$:/&*#&++=.,.!_:%%=,*+&}+,,!.._%$#/+*};,+!,..&$_$/=}^,&!,.;%.__/$$=,*!;.+%,_./_$$^=!*.&%__,/.$_^$==:&%&_+/$$.&;=$;=%*#+/+$,^}=_,_*=_*/&},^,=..!*$.%/*$&^+*,;.*__%&=$^^&&};,%_:_&$$^^**&;+*,:.&_$&+==^;&*#:,&_#_,$%,;**;:+&##.%:}$.***:&&:#,=}}_,$!=_&&&#++#}.+}!$.=&*}&++},,}!_:%%=!:+&=,,,!.:%%$$=+*}&,+!,..%_#%/=};,&!,.,/.__/$}/,*!;.+^,_.+$$$^=!^.&/,_,/.$_,===.*%;_+%:$.^_=$:=%*_&/:$,^}=_$^*=#&/&$+^}=.:_*$:=/*$&^+=,;}*__/&=$&^&*+;,*._!&$$/^*==;^%.:.&_$%+=+.;&*+:,/_#_+$=/;*=^:+&,#.,_}$,=*^:&&:#,:%}_;=!=:*&:#+,,}.,_!$.=&*#&+:},;!!_.=%=}*+&}+,#!.:!%$$_+*=+,+!,.}%_*./=}*,&*,.,%.#!/$,&,*!&.+/,_./_}%^=!^.&&}_,/.$_^$!/.*%/_+/.$.,$=$;=%^_&==$,^.=_.=*=_*/;$+=_=.;_*$#=/*$&^:=,;}*_#^&=}&^&=+;$*.:;&$#=^*!+;+*,_!&_/&+==*;&%,:,&.$&+$}#;**&:+&,#.+_=%,=*.:&&,#,^_}_,$*/:*,_#++,}.;$!$.=&^#&/+},,.!__$%=#*+;}+,#!._/%$_=+*}&,:!,.:%__=/==&,&!+.#%.#$/$$=,**+.+%,_}/_#$^=!*.&/+_,/.}!^$!/.*&#_++.$.^_!&;=*}_&/+$,,_=_;$%^_*/!$+^,=.;_*$:=/^$&^#=,;_*__=&=$*^;=+^.*.:_&$}*^*=&;:*,..&_#$+=**;&*+:#&.$!+$!;;*%+:+&,#=+__=,=**:&/,#,+.=%,$}*:*&&#++,}.,_*%.=&;#&+,},;_!_.$&/#*/;}+,,!.:$%$_=+^}&^+!,..%_$$/=}*,;!+.#%.$//$=*,*!&._%,#&/_$$^=*&.&%+_}/.}+^$==.*%&_+/,$}^_!/;=%&_&+,$,^.!!;$&$_%/&$+^,=.;_%%:=+&$&^+=,._*_:$/+$*;#=+;,*._$&$#=^;=&;.*,:.&_$=+==*;_*+*.&.#_+$!*;**&:}&,%:+_}$,=**:&&+#$+.=/,$**:*/+#++,=!,_&^.=&*#&^,},,.*&.$..#*+&}+;.!.._&^_=!/}&,+!,:_%__$+.}*^/!+.,%.__/$$=,;!&.=%,__/_}=^=!*._%+}!/.$_^$**.*%&_}/,$:^#=$;=&&_&/+}*^.;_;$*=_*++$+^,!/;_};:=/*$&^+=,;.%&:$/:$*^+=+..*.:_/^#=;:=&;+*,__&_#$^.=*+:*+:,&.$$+$}=;#*&_/&;#.+_==,=**:=&+#=+.}_,$!=:*&&#}+,=+,_!=.=/&#&++=*,.&/.$%=#*^+}+,,*/._:}_=+*}&;,!,..&,_$;/}*,&!+:.%.__+:$=_&!&.+%,_./_$$,.!*:!%+_./.}$^$==.#%&$}/,$.^_!=:,%*_=/+;^^.=_;$&*=_/&}%^,^+;_*$:=+&$&^+!+;.#;:$&=$*^&=+;,%/:_/_#=^&=&.,*,:./,#$;;=*;&*+_.&.#_^:}=_$*&:+&,$_+_}$;$**+*&+#,+.=$,$!=_!&&;&+,}.,_!$.=&*#=++=^,.!$.$/*#*+&=%,,&%._%$_=^&}&,+*+..&,_$/=}*;+!+.,&;___:$=,*!&:,%,_.+_$$+,!*.&%+_,/.$_,:==:*%&_,/,}_^_=$.$%*$#/+$,^.!$;$*=#!/&+!^,=.;_%=:=/*}&^+_};.*_:$+*$*^&!^;,&}:_&$#=^*=&;+%+:./##$^*=*.+*+:,/;#_;^}=;**&_,&,#.^_}$*!**:&&+$.+.}_;}!=:,&&#++,=_,_!$_*&*;$++},,.!_.$%=$!+&=,,,!_._&=_=+*=&,+&!..%__$^*}*,&*^.,%#__/$$=;&!&.+&._.}$$$^=!*:+%+_,+#$_^$!!.*%&_+/,$.,_=$:%%*_+/+}.^.=_.}*=$:/&$+^,!_;_*$#*/*$;^+=,;.%$:$&=}/^&$_;,*.:_/=#=^*!,;+:!:.&_#$+==*;&%^:,/$#_+=}=.&*&:+/.#.;/}$,=**_+&+#,^#}__}!=:*&&$,+,}.;=!$_.&*#&++=.,.!__%%=./+&}+,,!.._%$$*+*=;,+!...&$_$/==/,&%}.,%.__+=$=,**,.+*}_./_$$;*!*.&&:_,/+$_^$==:&%&_++$$.,^=};=%*_&/+$,,#=_:&*=_&/&},^,=..=*$$;/*$&^+!.;.*_#%&=&:^&=+;,%_:_&$}+^*,^;+*,:./$#$+=!;;&##:,&.#_+$}=;*%,:+/}#.+$}$.***:&/:#,;%}_,$!=_&&&#+^$}.;}!$.=&*$+++},.!!_+#%=#*+&=,,,!._&%$;=+*}&,+!,..%_$%/==.,&!,.,&___/$=+,*%#.+%,_.+$$$^=*;.&}^_,/.$_,===.*&__++#$:^_=$:*%*_&+}$,^&=_;$*=_*/&$+,$=.:/*$_*/*}+^+=,:!*_$^&=$*^&!,;,*.#&&$&}^*=&;+%.:.&_}^+=/^;&*+:,/_#_+$!.;**,:^&,#.+_}$,=%;:&/=#,+_}_;=!=:*/_#+;!}.,_!$_*&*#&^}},;%!#.$%=$&+&}+.*!._=%$_=+*=+,+!,_/%_*#/=}*,&!+.,%.$&/$=:,*!+.+&._./_=^^=%:.&%+_,+_$_^$*..*:$_+/,$.,$=$;=&#_&+,$;^.=_.=*=_*+=$+}}=.;_*$:=/*$&,}=,:+*_:=&=$*^&=+;#*.#/&$$!^*!+:;*,:}&_#;+==*;&%,_,&.$!+$}:;**&:+/.}#+_=%,=:#:&&+#,+_=^,$*/:*&/#++,}.;$&!.=&^#&%.},,.!_.=&:#*+;}+,_!.._%$$*:#}&,:!,#&%__$/==&,&!+.#%.$%/}$=,**+.+%,_=/_#!^=!*.&/+_,/.}*^$!+.*++_++.$.^_!+;=/:_&/+$,,_=_;$%;_*+}$+^,=..$*$:=/_$&}*=,;.*__=&=$*^}=+_=*.:_&$#=^*=&;$*,_/&_#=+==*;&*+:$&.$&+$}=;**&:$&,#}+_}$,=*&:&&+%!+.=!,$*!:*&+#+^.}.,_*%.=&!#&++},;_!_.$&/#*+%}+,,!.__%$_=+^}&,:!,%_%__$/=}*,.!+.,%.__/$=*,*!&._%,+^/_$$^=*&.&%+_#/.^$^$==.*%+#!/,$}^_==;=%*_&+,%/^.!!;$$!_*/&$+^,=.;_%%:=/*$&,,=,_.*_:$//$*%,=+$}*.$_&$#=^^=&;:*;!!&_$=+==*;.*+#^&.#_+$!=;**&:_&,#=+_!^,=%&:&&+#}+.^*,$!=:*/+#++,=*,_$&.=&*#&^,},,.*/.$:+#*+&}+,,!.._&&_=+:}&,,!,:.%__$+/}*;/!^.$%.#$/$$=,,!&_/%,_./_=$^=!*..%+_$/.=/^$**.*%&_#/,/=^_=$;=&&_&/+$=^./$;$*=_*++$+^,!%;_.&:=/*$&^+=,;.%*:$/;$*^+=+.,*.:_/%#=:;=&;_*,__&_#$^+=**,*+:,&.}_+$}=;,*&:_&,}%+_==,=**::&+$_+.}_,$%*:*&&#$+,,#,_!$.=/&#&++=!,.;*.$%=#*+&}+,,!=._&^_=+&}&;+!,..&!_$:$}*,.!+:.%.__+&$=*;!&.+%,$./_$$,+!*..%+.,/.}$^$==.;%&#//,$.^_!=;=%*__/+}^^.=_;$&*_*/&$}^,!;;_*$:=/*$&^+=$;.%/:$/*$*,&=+;,*}:_.:#=^,=&_+*,:./!#$$,=*=.*+$,&.#_^%}=+.*&=#&,=.+_}$;/***&&+*}+.*_,$!=:^&&:#+,%#,_&$.=&*#;++&&,.!;.$+=#*+&}:,,^$._%:_=;*}&,+!#..#=_$.%}*:&!+.,%}__+^$=_/!&#+%,_.+!$$,^!%}:%+},/.$_,%==,}%&!#/,!.^_=$./%*.=/+%}^.!$;$*=_,/&/^^,=.;_&$:=/*$.^+=$;.&^:}+=$*^&=_;,*=:_/&$!,*=&;+*#:.:!#$^+=*.+*+:,&=#_};}=;**&:+&,#.^%}$,=**:&&+#,+.}_;+!=:*&&#^+,*.,_!$:,&*=/++$$,.!_.$%=#,+&}$,,!_._&$_=+*};,+%}..&*_$/=}*,&!_.,%.__/$$=;*!&.+%#_.}+$$,+!*:+%+_,/}$_}%==.*%&_+/,$.,!=$;=%*_&/+}.^.=_.%*=+//&$+^,!_;_*$_//*$*^+=,;.&_:$&=$^^&=:;,%/:_/=#=^*=;;+%%:.&_#$,*=*;&*::,*##_+$}=:**&:+&##.^!}$#;**_+&+#,^!}_:^!=:*&&$,+,}.;&!$,!&*#&++=.,.!_:^%==}+&}+,,*_._%$#.+*}_,+!,..%__$/=};,&!=.,%.__/$$=,*!;.+%,_./$$$;*!*.&%:_,}*$_^$==:&%&_+/#$./}=$;=%*$&/+$,^}=_.%*==:/&},^,=..%*$$;/*$&^+!.;.*__+&=*,^&=+;,%_:_&$$;^*&;;+*,:./$#$+==_;&^=:,&.#_+$}=;**::+/*#.+$}$,=**:&&:#,^!}_,=!=_&&&#++#}..!!$.=&*#&++},,}!_.$%=#_+&*+.=!.:!%$;&+*&:,+*.$}%_#&/=!:,&!+.,&___/$}^,*%!.^%,_.+$$$^=!..&};_,/.$_,===.*%#_+;_$.^_=$;=%*_&/_$,,%=_;=*=#*/&$+^#=./**$_+/*!&^+=,;}*_&#&=#.^&%+;,*._!&$;#^*/:;+/,:.&_$%+=,*;&#*:,/_#_+$=+;*;/:+&,#.,_}$,=*,:&&_#,$=}_.$!=:*&.#++$}..+!}:=&*#&+:},%_!_:&%==*+&}+,#!.,=%$*^+**&,+!,.}%_$}/=.+,&&+.,%.#!/$*},*+:.+%,_./_}&^=*%.&%+_,+_$_^$!^.*/#_+/,$.,$=$;=%._&*}$,^.=_.=*=_*/#$+.^=.;_*$#*/*$&^==,*#*_:$&=$*^&=+;}*._+&$$*^*!+;+*,_*&_=^+==*;&%,:,&.$/+$&:;**&:+/.#.+_=,,=;_:&&+#,^_}_,$*::*.%#++,}.,_!$.=&.#&^!},,_!_:=%=#*+#}+:!!.._%$$*+*}&,=!,$,%__$/==&,&!+:%%.+:/$$=,**+.+%,#+/_%}^=!*.&%+_,/.}/^$!_.*%+_++.$.^_!,;=/:_&/+$,,_=_;$%:_**=$+^,=..$*$:=/$$&:==,;.*__=&=$*,!=+$,*.:_&$#=^*=&;=*,_^&_#=+=!&;&*+_%&.=/+$}=;*%+:+&,$++_%;,=**:&/,#,+.=;,$$*:*&&#+^.}.,_*_.=.;#&++},,.!_.$&:#*^*}+,.!.:$%$_=+$}&.}!,..%_#=/=}*;!!+}/%.__/$=*,*!&:&%,#:/_$$^=*&.&%+#^/..&^$==.*%&_+/,}+^_!#;=%&_&+,$,^.!;;$/;_*/&$+,.=.;_%_:=.+$&^+=,._*_:$/}$*}_=+;,*._$&$#=,*=&}_*,:.&_#$+==*.!*+_,&.#$+$!*;**&_&&,=%+_}$,=%&:&&+$^+.+.,$!=:*/+#++,=.,_...=&*#&^,},,.*#.$.^#*+&}+,,!.._&__=^%}&,,!,:_%__$+}}*.#!+.,%.#$/$$=;*!&#+%,_./_}=^=!*:/%+}&/.$_^$**.*%&#,/,%=^_=$;=%*_&/+}^^.!$;$%*_*++$+^,!.;_/^:=/*$&,,=,;.%#:$}!$*^&=+..*.:_/=#=,*=/;+*,__&_#$,%=*}}*+:,&.#_+$}=.**&_;&,#_+_==,=**_/&+=!+.}_,$%*:*&&$,+,*^,_!$.=/&#&++=:,./*.$%=#*^+}+,,*$._&,#!+*}&,+!,..&#_$^&}*,+!+:.%.__+=$=.:!&.+%,#_/_$$;%!*:.%+_,/.}$^$==:+%&%#/,$.^_!=;=%*#;/+#%^.=_;$*=_*/&},^,!};_*=:=+&$&^+!:;.//:$&=$*,+=+;,%$:_++#=^*=&.,*,:.+!#$&}=*;&*+_.;.#_,&}=.+*&:+&,#.+_}$.%**_.&+#.+.=$,$!=_+&&}}+,}.,_*=.=&*$;++!!,:!_.$/*#*+&=_,,#/._%$_=^&}&,+*}..*+_$/=}*,&!+.,&$__^/$=,&!&:,%,_.^!$$.;!*.&%+#./.$_;&==#/%&_+/,}_^_=$:^%*+&/+$,^.!$$$*=#./&::^,=.;_*$:=/*};^+!=;.*$:$+*$*^&!_;,/%:_&$#=,&=&;+%}:./.#}+==*.+*+:,+*#_:_}=;**&_,&,#.,/}$#***:&&+#,+.}_.&!=_:&&#,+,=_,_!$_^&*}#++},,.*$.$%=$.+&__,,!.._&=_=+*=#,+=!..%__$^*=.,&*=.,;.__/$$=,*!..+&}_.^+$$,*!*:+,,_,^*$_.^==.*%&#,/,$.;/=$;;%*_&/+}.^.=_:,*=%}/&$+^,!_;_*$#:/*:$^+=,;.*_:$&=}.^&*!;,*_:_&$#=^*=.;+%=:.&##$^=*,;&*::,!+#_^&}=.&,!:+&##.$$}$,=**:&&+#,+}}_;%!=:*&&$,+,}.;!!$!*&*#&++},,.!_:%%=#^+&}+,,*_._%$#/+*+,,+!,..&$_$/=}^,&%_.,%.__+=$=,*!..+/&_:/_$$^=!*.&%:_,/}$_,&==.,%&_+/#$..===.!%*_&/+$_,$=_;$*=}+/+$^^,=$.=*$:=/*%,^,=;;.%$_$&=$^^&$;;,*.:_+$%%^*=;;+*#:.;/#$,*=*;&*#:,/%#_+$}=;**&:+&##.^%}$;***_+&+#,+=}_/%!=:*&&#++,}.;!!$:/&*#.++=.,.!_:/%=/^+&}+,,!.._%$#/+*};,+!}..&$_$/=};,&%}.,%.__+=$=,*!_.+$*_./_$$;*!*.&%}_,+!$_^$==:&&__++*$...=$;=%*_&.:$,,!=_.,*=_&/&$+^,=..!*$_^/*$/^+!.;.*__%&=%.^&=+;,%_:_&$$+^**#;+*,:./$#$+==;;&#::,&.#_^=}=;**_:+*/#.+_}$.***:&&}#,=,}_,$!=:*&&#++$}.;/!$:*&*#&++},,}!_.=%=#%+&=,,,!.:!%$!}+*}&,+*._*%_#&/=_*,&!+.,%.}:/$}/,*!+.+%;_.+$}$^=!^.&!;_,/.$_,=+^.*%:_+^=$.^_=$;=%*_&/:$,^}=_./*=_*/&$+^#=.;$*$_!/*}+^+=,;}*_!^&=$*^&!,;,*._*&$}#^*=&;+*,:.&_$%+==&;&*^:,&$#_+$}=;*+=:,&;#.+_!$,=**:&&^#,+.}_;+!=:*&&#++,}.,_!$:!&*#&++},..!_.$%=#%+&}+,,!.._%$_=+**.,+!,..:^#*/=}*,&/==,,/=&%$}.,*!&.+/,$_*,:;!_,&}}+^_$%^%=,.==.*%&=#+_#%%$.&!&;!$,&=__%/,=*#%__*/&$+_^%;,+#:*+/._&=,+..}}_/;#=$,^&=+;,},^%#/=%;&_+,.*_:.&_#$.=*&;!}*_}&}#_+$}=$!/..$=$/_$^=^,=**:&;_$;=&^&.+_&*&^&.=;&=_,_!$.=,*}+&__.*.;#}#^&#:&^;_=.^#$./,_&*:,,^,!,..%__$/=}*:^/+*%&*__/$$=_=^!$.&=_+&^^!!$!&.&%+_,/.$_^$%=$*,,#!/,$.^_/,:&!_;,}}/_:=%^.&}=+#^=}%^,=.;_+_#&&#:+==,;$./:_;*&;^=;+=^,*=:_&$#=%+}.=,/=*:;,%*^+=*;&*+_&%._#_!:;$=&}:#&,#.+_&=}!+!_}/;#^&&;$,$!=:*&&#++,%&__._.=&*#&++},=.+;$$$%#.+&}+,,/___*;+=_$!&^^:=%.&*_$/=}*$;*__*.%&_*&.^,$!&.+%,=$++:&}+}$+#.!#;!,&$;/_=.+%^_+/,$._+%+;/_!_:/+$,^./$:=!//^.=};&^$..**$:=/*}$#&.^/:&%=!&&$+^&=+;,^+#;%$:%_&=&;+*,:.&_/$:=&*:=*_:,&.#__$/*;#!+;#/+=/^*}$,=**=+;.!*;&!$./;_:_&&#++,*,.#=+^}:=&}:_!;,*}^/*&+#*+&}+^=+#%.,;=*;$..,+!,..%__$/=&*_&!..:%.__/$%!;.=}_=%,_./_$$^=/*}/^+:_+&$_^$==$_&:.$!:,==*/&_&%^.;#*$$^.=_;$}*_,!^:%#,%:,=%&:=/*$&_.,;+^*%}:$&#+^.=+;,*.&..,:=&%!/=:=^_*&_#$+=/&:%=;/_;$$=%&,,&;*_:+&,#..=*&+.:/!%/$.,}&}};*!=:*&&*._/&*_}._.=&*#&++},,.&#$$/,#,+&}+,,#;:+}+^&:/&.}=!,..%__$/=}*::/+^%&!__/$$=#+%_,+#+*&^;:#}_!..&%+_,,!$=^}_%*,;/!:,_$$,*=$;=%*/#+#*#%}&_+=$,_,/&$+^,_^$:;,/^^&!.$==,;.*_:$&=.*_,&+%.*.:_&$#=^*,&$^+,.$/^#$+==*:+*^,#}/^*_;%+;*}}+.#%.&+_}$,=**:&_+*#..$=;:!=:*&&}_+}#.%*;.=#,,#}&_.,!/^=$;^=#,+&}+,,/+&%;};#=;=/*^!,..%_#=+=}*,&!+:}%.__/$}+.$!&.+%,_$/_$}^=!%.&%.#_/.$_^$!&.*%/_+/_}$^_=$;=&/_&/^$,,_!_;$*=_*/#$+^,=..*/.:=/*$&,;=,;:*_:}&=$+,,=+;,*._}&$$!^*!+.+*,:.&_$!+==*;&*_$%&.#_+$=:;**/:+&,#.+=!*,=**:&/!#,+:}_;*%&:*&&#+^:}.,#!$_*/*#&++},:,!_.$%=$&;,}+,;!.:#%$_=+*=+,+!,._%_$^/=}*,&*,.,%._}/$!_,*!&.+%,_./_$$^=!/.&%,_,/=$_^$==.*&^_+/;$.^_=$.&&+_&/+$,,#=_;}*=_++,$+^,=.%:*$_!/*}+,+=,;.*__:&=$*^&=__%*.:_&$}$^*=/;+*,:.&=}*+==*;&&&:,&:#_^===;**&:+^+#.+_}$.*/+:&&^#,;!}_,$!=_&&&#++.}..=!$.=&*$+++},,#!__=%=#*+&}+,,!.._%$#%+*}+,+!$..%__$/===,&!^.,%.__+*=&,*!&.+/+_./#$$,&*+.&%+_,};$_^}==:&&&_+/,$.,/=$;=%*_.,*$,^.=_:=*=_%/&$^^,=$.=*$:=/*=+^+=;;.*=#*&=$*^&*=;,*::_/=$=^*=&;+/+:.&_#$,*%+;&*^:,+*#_+$}=.&*&:+&.#.^!}$,=**_+&+#,+#}_:=!=:*&&#++,}.,_!$:%&*#+++}$,.!_.$%=}_+&}^,,!.._&*$&+*}&,+&*..%#_$+&=+,&!+.,#;__/}$=;&*&.+%,_./}$$^=!*..+!_,/.$_:*==.%%&_+/,$$,==$;=%*},/+$;^.!$.$*=_*/&!&^,=.;_%=}#/*$/^+=_;.*_:$+*$*^&=,;,&+:_&$#=,&=&;+*::.+^#$+==*;&*+:,&.#_^!}=;&*&:_&,#.+_}$*}**:/&+#;+.}=.*!=:*&&^/+,}:,_*=:=&*#&++*:,.!_.$&+}#+&}+,,/;._%}_=+*}&,.*_..%__$;}}*,/!+:.&.__/$$=.=!&.+%,#_,=$$,!!*./%+_,/.}$^$==.&%&$//,$.^_!=;=%*_^/+!*^.=_;$*=_*/&$+^,=#;_*=:=/,$&^+=,;.+::$/!$*^&=+;_%$:_&$#=:!=&;^*,:$/=#$+==*%%*+:;&.$$^$}=;**&#&&,#.+_=&::**:&&+**+.}#,$!=:*&,$.+,}.,_+,.=&%#&^,=,,.!_.$+$#*+&}+;.&$._%}_=+.}&,+!,:_%__$+*}*:.!+.,%.#$/$$=,/!&#^%,_./_$$^=!*.&%+_:/.$$^$!+.*%&_+/,%&^_=};=%*_&/.}_^.=_;$^._*//$+^_!$;_*$:=}!$&^^=,._%_:$&=$*^.=+;,*._*^;#=^*=&$.*,::&_#$+==+.,*+:,&.*=+$=!;*%+_+&,#.+_*_,=**:&/,!/+.}#,$*^:*&&#+^.}.,_!=.=+##&++},;_!_.$&%#*^^}+,,!.._%$_=+*}&,;!,._%_#&/=}*,&!+&^%._#/$}!,*!,:.%,_./_,#^=!%.&&,#,/.$_^$%%.*%&_+/$!/^_=$;=;!_&/^$,^.=_.*&&_*/&$+#^=.;#*$#*+*$&^+=,_,*_:$&=}&.,=+;;*.#;&$#=^*!+;+*,:_&_$$+==*;&%,:,&.#}+$=.;**&:+&,#.+_}$,=*/:&&,#,+=}_,$!=:*.%#++;}.,_!$:&/+#&++},$;!_.}%=#+^,}+,,!.&:%$#!+*=+;+!,..%_$}/=}*,&!_#%%.__/$/;,*!/.+%,_./==*^=!*.&;}_,/:$_,=!=.*%&_+,+$.^_=$:*+}_&/^$,,==_;$*=#&/&$+^.=._!*$:=/*}+^+=,;#*_}*&=$*^&=+;,*.:_&$$%^*=+;+*$:.&_#$+=.!;&*^:,&:#_^*!&;**&:+$^#.+#}$.*%*:&&+#,^,}_,$!=:,+=#++,}.};!$:!&*#/++}_;$!_.$%=%}+&}^,,!$:=%$_=+*+,,+!;..&$#$/=}*,&&&.,%.__+=*#,*!/.+&__./_$$;*!*.&%,_,+;$_^$==:&%&_+/:$.;_=$;=%*_&/+$,^.=_.!*=_&/&$_^,=.;_*$/}/*$/^+=;;.*=#*&=$*^&./;,*::_/=$=^*=&;+&*:.&_#$^+*$;&*+:,_*#_+}}=;%*&:./_#.+_}$=,**:/&+#_^$}_,$!=%/&&#^+,=_;_!$.=&*$:++},,.**#;%=#*+&^*,,!:._%$_=++=,,+!,..:,_$+!}*,,*..,%.__$!$=,%!&:,&,_./_$$.$!*.&%+#.;^$_^}==_:%&_+/,}_^_=$.*%*}%/+$,^.!$;$*=_//&}*^,=.;_*$:=/*$&^+=:;.*$:$/+$*^&=+;,_;:_&}#=^%=&;.%_:.&_#$=}=*;/*+_./.#_+$}=_^*&:+&,#=;^}$,=**&*&+#;+.}_,$*&_+&&#++,,,,_!}.=/&$&++},,.&..$%=#*^+*.,,!:._&;_=+*}&;,!,..%$_$,+}*,&!+:.%.__+!$=;&!&.+%,_./_$$^=!*.^%+_./.}*^$==.*%&/&/,$:^_=$;=%+#,/+$,^.;.;$%!_*/,}.^,=.;__#:=/%$&,,!,;.*_:$/*$*^&=+;$/+:_&$#==&=&;^*,::&_$*,&=*;&*+&.&.##+$=&.+*&:+&,^&+_}},=%&_&&+#,+.*.,$!=:*/+=.+,}:,_&+.=&*#&^,},,.!$.$+=#*+&}+;.!.._&!_=,&}&,+!,..%__$/=}*,^!+..%.#*/$$=,*!&%=%,_:/_$$^=!+:,%+_,/.,+^$!!.*%,#./,$.^_.#;=%%_&+,},^.=_;$/$_*/&$+,.**;_*}:=^}$&^+=,._&&:$/*$*,;=+;,*._$++#=^/=&:,*,:.&_#$^+=*;&*+::&.#$+$}=:!*&:+&,#_+_}$,=**#&&+#,+.}#,$!=:*&&#++,}.,$*,.=&*#&.+}$,.!_.$+;,$,*#&/_;!^^&=_=+*}&$;%/,+:#==/.;%.&*&+:^.},%$,##$=}+^.!;++^$$^=!*:}&._*!_;/}++^#/%&.&=#:&^_=$;=%*_&!+%.:..=.**=_*/&=:^:=%+=:$_//*$&^+%%:**^,;$_,+^_=+;,*.#^^*#;%*.}=$^$$^%=$++==*;&&#:_&:,}}&+!$^/,=,&,#.+_}$,=**:_,+^_+=}_,$!=#^+*#!*=;^!&%!.=&*#&^,=,,.!$.$&/#*+&}+,$&+._%=_=++}&,^!,.:%_#*^&}*,&!+._%._#/$$=.*!&.+%,_:/_$$^=*&:&%+_./.}+^$==.*%&=_/,$#^_=$;=%/_&++$,^.=};$%%_*//$+,.=.;_%*:=/.$&^+=,._*_:$//$*^+=+;,*._$&$#=^,=&;^*,:.&_$=+==*;:*+:_&.#_+$}=;**&:.&,$!+_}=,=%*:&&+#:+.=*,$*&:*&.#++,}$,_*$.=&%#&++},,$*=.$%=#*^&}+,;!.:$/+_=++}&,}!,..%_#$,+}*,^!+.}%._=/$$=:!!&.,%,__/_$}^=!*_&%+_,/.$#^$==.*%&_+/,$.^}!+;=%*_&;&$,^.=_;$*=_*&&*/&&!+;_*$:=^,$/+^.=*,^}==^=#$%.:!!,!$:}&$#=^*&$:.!!$+&=#$+==*_#&$:%=$=^+$}=;**&!_&,#.+_}$,=***&,+*_+$}_,$!=$_/::$%;%.;*!$.=&*!$,;}!/*_!*&+!#*+&}+;.*.._&!_=+&}&,+!,..&#_$+%}*,^!+.;%.#*,;$=,/!&.#%,_:/_$$^=!+:,%+_,/.}%^$!!.*&+#+/,$#^_==;=%*_&/+};^.=};$%%_*//$+^,*;;_%!:=/&$&^+=,._&&:$/%$*^/=+;,*._$,##=^+=&;:*,:.&_$=+==*;;*+:;&.#_+$}=;**&:_&,#.+_}$,=%&:&&+#}+.}#,$!=:*&,#++,}},_%:.=&%#&++!%,.*/.$&&#*+&}+;.//._&,_=+.}&,+!,_.%__$+.}*,$!+.}%.$_/$$=,#!&.+%,_#/_$$^=!*:!%+_=/.$_^$==.*%&#&/,}*^_=$;=%*_&/+}%^.!.;$%*_*^&$+^,!/;_%;:=/+$&^+=,;.%^:$/*$*^+=+;,*.:_/;#=^#=&;;*,#.&_#$^:=*;}*+:$&.#_+$}=;_*&:,&,#_+_}$,=**:,&+$!+.=+,$!=:*&&#}+,}#,_!=.=+*#&++}:,.*/.$&+#*+,=&,,!}._&:_=+%}&;,*,..&!_$+*}*,&!+.,/}__+%$=,%!&..%,_.^:$$,&!*.+%+_,/.$_;$==.*%&_^/,$.^_=$;=%*_&/^&;^.=_;$$,_;/&$+^,/%.=*+;&$$++#!$^;=*_:$&=&^:!!&,*$!/^}!$/^*=&;+;#:_}:%,/_=&;&*+:,&.#_$$/&#*:&:_&,#.+_%*;+/,!=:*,_$&}_,$!=:*&&!+:}%./+!$.=&*#&%_#+$_/#!&%=#*+&}+,,!.:&^$.=+,}&,+!,=&/!.,#%%=/=:..$%.__/$!&;+=}+##$%#!&}.^=!*.&^/$://::!&;!$$+&#**_.&=},;.&%*_&/+/:#.^:=/:$_*/&$+^,=.;_^!}=!$$$^+=,;.+.#*&:.+*%,/$:/,:_%!;^,*=&;+*,!..*!:,==+^;$=^_$.+;$!!:_}/!_+%$.+^%}$,=**#%/.:=*#;,=}^.;!&:#++,}.#=/..,!!%/;=!^;=!_.$%=#*+&}+#!/.&=&&_=+*}&%+/+$:_^};_.!$,.!+.,%.&=^%,__$^%=:^/_.;_}&^=!*.&};#&.,$*+;+*.+%._+/,$.&;#*,_%$;.,/}=^==_;$*=*;!:_+_;=,_+/;_+/*$&^++=_.!#+}_;!/#_=.;,*.:_,;$=+#_,_**$:.&_#$#$.!.!:^}!!:_}.%}=;**&!#:!%;:#&,;^!&;_+_$*+^}=^.}=/%!=;.*}::%+:,&*#,!_$,+*}%^!_&/%#^;!$_;$}_,&=+;!!^_=/;.=+:$=^:}}/^##+,$=^$%*::+.,*!&.+%,_./_!*:=}!..%+_,/./!,}_&}$*&++#%$}^_=$;=^+$&*/+%.^*&.&*=_*/&/;&^+*_/!#^_;!$,^+=,;.;;=*,&}**:=.;,*.:_::}:/&;;;.*$:.&_#$:}..^/^;^_},}&^*}=;**&}&/,_$*=,$;+**:&&+::^:+;!$/;!^+=#.+,}.,_%^_$*#._,=},,.!_.$%=/*:*%+#.!.._%$_=+*^&##/,.$&&_$/=}*_}%&.*=#^/#+&/.,/&.#%,_./_!^;&=.^,#*&.:/,=,&==.*%&&:++!_.+&_!}*/_//+$,^.&+_,*=_*/&$+^,=._++$,./*$&^+=,;.*_}.,=}.^}=+;,*.#:^!#:&!,$=.,!$}&_.=!_^$;,*+:,&.=!^$}&/+*+:+&,#.+_}$,=^/}&+=#,+.}_,$!=%*,$!+.,}=,_!$.=$}!^,!&;/}#$_&%=#*+&}+,,!.:_^$,^+,}&,+!,!*+::#=$+^:*%=.,%.__/$$=,*+%$+*__=/_$$^=+#},&}&==#*!}.!:.*%&_+^:=,++_$&%;!!^^+},&$_/+;%+_*/&$+#=^&=!,#*!.^^&^==,;.*_#}/*:,*!,*!/^&$.&;:&%#=_;+*,:.,=*},,}*+=#:&*:!}&^!}=;**&}=+=_}:$}$,=**:&&+/,:+%_/,!=:*&&#++,}.#^/$,}&+#&++},#;/:$*++#/+=}+,,!.$$&},%:$$&**/#&:.^=!*#/^.=!_.,%.__}*=,++__=:/,+:/#*$,,!*.&%+$^^#$^&#;^!=,$};*&}!^_=$;=/;#}%$:=!+,#},$,_,/&$+^,#*!=:^+&!,#%=/=};.*_:$.}$_*;^*:,$!_^^.$+^*=&;+&;*+^+$$^&;$&_*;:,&.#_./=}^;=&:;&,#.+_*.:!!/=^&.#,+.}_}:&^._}#=!+#}.,_!$*/;/*/:%*,,$**.$%=#*:^:/,_$#=;:./=+,}&,+!,+#%}#^%$:*:_*#.#%.__/$+%;$$}*#+_.,/_$$^=!*.&:+=#;./*^$==.*%&_+;,%$:_/=;=%*_&/+$,^.%.#$$,_,/&$+^,%+:$!.;!#*/^/+=$;.*_:$/*=.*}=_^^=&==/&#=^*=&$&*,&:!!__^../;+*+:,&.&:$!/%;^*&:+&,%_./}}/}:}=,&$#,+.}_:/*&:%}^/__;&}:=%/:+&*#&++/_#.&/:$%%:,*}}=,,!.._,%=*+.:&!$,}$*}#;%_},!,;!+.,%.&!+_:^}=*=},%,_./_$$^=!*##^+__/=$_^$==}/=%&;$!+:==+*.+%*_&/+/!:,^/+__!_}/,$=^,=.;_&_#&&#;+!*,;}^/&:,*&#+^.=+;,*./*/$,$}^&:_#/*:.&_#$+==*#&^^},.=#_+$}=;**&}+;#!.%_}$,=**_+,;#,+:}_:*!=:*&&}++,}.,#!$:!&*%*++=.,.!_:!%==!+&}+,,!.._%$#!+*}^,+!...%__$/=}&,&!+.,%:__+=$=,*!^.+,}_./_$$;*!*.&%._,:*$_^$==:&%&_+/#$.;}=$;=%*#+/+$,^==___*=_*/&$+^,=.;}*$_+/*$+^+=,;.*__*&=$%^&=+;,*.:_&$$/^*=&;+*_:./$#$+==,;&^#:,&.#_^=}=;**::+;+#.+_}$.***:&&$#,;/}_,$!=_&&&#+^!}.:#!$.=&*#&++},,=!_:^%=#&+&=,,,!.:%%$*^+*}&,+*...%_#+/=&:,&!+.,&___/$};,*+,.+%,_.+$$$^=!_.&&,_,/.$_^$==.*%:_++*$.^$=$;=%*_&/:$,^==_./*=#&/&$+^$=.}%*$:=/*}+^+=,.!*_!&&=$*^&!,;,*._&&$}=^*=&;+%.:.&_$^+=%&;&*+:,&.#_+$=+;**#:+&.#.,_}$,=*^:&&_#,^!}_;=!=:*&.#+:}}.,_!$_*&*#&+#},,_!_.$%=$&+&}+,=!.:!%$_=+*=+,+!,:%%_!#/=}*,&!+.,%.#*/$};,*!+.+%,_./_}/^=!/.&%+_,/.$_^$!,.*%&_+/:$.,$=$;=%:_&.#$,^.=_.=*=_*/$$+_*=.;_*$#*/*$&,!=,.#*_:$&=}&^&=+.&*.};&$#=^*=&;+*,_%&_$.+==&;&%,:,&.$++$/^;**&:+/.#.+_=;,=%%:&&+#,^_}_,$*_:*,;#++,}.;$!$.=&}#&.&},,.!_.$%=#*+$}+;/!..$%$_=+*}&,$!,:%%_#,/==&,&!+:!%.*%/$$=,**+.+%,#&/_}!^=!*.&&,_,/.}^^$*&.*%&_++.$.^_!.;=/._&/+$,^.=_;$%;_*/=$+^.=..$*$:=/_$&:$=,;.*__=&=$*^}=+:_*.:_&$}=^*=&.!*,_/&_%_+=!&;&*+_/&.!=+$}=;**&:+&,$/+_=:,=*&:&++#,+.=^,$*::*^_#+,,}.,_*;.=&##&;+},;_!_.$&_#*,=}+,,!.:$%$_=+}}&..!,..%_$$/=}*;!!+:/%.*./$=*,*!&:/%,=$/_$$^=!*.&%+#//.}:^$!*.*/&_+/,}^^_!:;=+._&^+$,^.!;;$%#_*.+$+,.=.;_%_:=;.$&^+=,;.*_:$/.$*^$=+.+*.:_&$#=^.=&;}*,_&&_$=+==*;#*+=}&.#_+$!*;**&:=&,}%+_}$,=%&:&&+$%+.!%,$!=:*/+#++,=+,_&/.=&*#&++},,.*/.$&_#*++}+.,!.._&+_=+:}&_,!,..%__$+;}*,&!+.:%.#$/$$=,_!&}#%,_./_}=^=!*.}%+$;/.$_^$**.*%&#*/,%!^_=$;=&&_&/+}/^.%.;$*=_*/&$_^,!&;_%::=/&$&,,/&;.%^:$.^$*^&=+..*.:_/.#=.#=&;+*,__&_#$^#=*..*+:,&.$$+$}=;=*&_%&,#.+_}$,=**:}&+$++.}$,$!=:*&&#}+,=&,_*;.=/&#&++=*,.^%.$%=#*^+}+,,*/._;,_=+*}&;,!,..&,_$:_}*,&!+:.%.__+:$=,+!&.+%,_./_$$,.!*:!%+_./.}$^$==.#%&=$/,$.^_!=;=%*_=/+!!^.=_;$&*_*/&}%^,!,;_*$:=/*$&^+!/;.*#:$&=$*^&=+;,%+:_&$#=^&=&.,*,:./;#$:,=*;&*+:,&.#_^;}=;#*&_%&,#.+_}$;;**:$&+$%+.=$,$!=:_&&*#+,}.,_*=.=&*#}++%!,.!_.$/*#*+&=*,,%*._%$_=^&}&,+*/..&&_$/=}*,&!+.,&&__+:$=,&!&_+%,_.+/$$,.!*$+%+_,/.$_,,==.*%&_;/,}_^_=$.:%*!:/+$,^.!$;$*=_$/&=,^,=.;_%=:=/*}!^++/;.*_:$+*$*^&!&;,,.:_&$#=^*=&;+%%:./.#$^*=*.+*+:,/+#__/}=;**&_,&,#.^;}$.}**:&&+$.+.}_;_!=}$&&#++,=_,_!$:}&**&++},,.!_.$%=#$+&=/,,!_._%$_=+*}$,+*%..&,_$^*}*,&*!.,;!__/$$=;&!&.+&&_..^$$^=!*:+%+_,+^$_:/==.*%&#,/,$.,.=$_#%*_&/+$,^.=_.;*=_=/&$,^,!_;_*$__/*%:^+=,;.%$:$&=$}^&&_;,*.:_/=#=^*!*;+&%:.&_#$,*=*;&%/:,.:#_+$}=;**&:+/&#.^:}$;***_+&+#,^^}_:^!=:*&&#++,}.;.!$.=&*#&++},,.!_::%=#&+&},,,*_._%$#$+*%_,+!,..%__$/=}$,&**.,&,__/$$=,*!$.+&%_.+,$$;*!*.&&!_,:!$_^$==:&%&_++&$.:!=$;=%*#+/+$,,^=_}!*=_*/&},^,=...*$}+/*$&^+=,;.*__;&=$=^&=,;,&.:_&$$.^*=};+%#:.&_#$+==;;&*=:,&:#_+$*/;**;:+&$#.^%}$.*+=:&&_#,_!}_,$!=_&&&#++}}...!$.=&*$+++},;*!_$!%=#*+&=,,,!.:/%$#++*}&,+!,..%_#&/=}:,&!,.,%.__/$}^,*!&.+%;_.+$$$^=!..&,#_,/.$_,===.*%#_++&$.^_=$:*%*_&/=$,_^=_;$*=#&/&$+,%=._=*$:=/*$&^+=,.**__;&=$&^&!,;,*._/&$%/^*=&;+&,:.&_$^+==:;&%=:,&.#_+$=;;**/:+&.#.+_}$,=*;:&&$#,^%}_,$!=:*&;#++$}.;%!$.=&*#&+.},,}!_.}%=#*,;}+,.!..}%$#&+*}&:_!,.#%__$/=}%,&*,.,%._=/$&^,*!&.+&._./_}%^=/*.&%+_,+_$_^$!+.*%#_+/,$.,$=$;=%;_&/_$,^.=_;$*=_*/,$+^}=.;$*$#*/*$&^:=,}!*_:$&=}&^&=+;$*._:&$#=^*!+;+*,_!&_=%+==*;&%,:,&.$&+$/:;**&:+&,#.+_=%,=*.:&&,#,+.}_,$*%:*&,#++#}.._!$.=&+#&+^},_&!_.$%=#*+.}+,.!.._%$_=+*}&,.!,.=%__=/==&,&!+.#%.#^/$$=,*!..+%,_}/_.!^=!%.&%+_,/$}=^$==.*$^_+/;$.^=**;=%*_&!*$,^:=_.=%=_*/;$+^;=.;_*$_+^$$&^:=,/+*_:}&=$%^&=.._*.:_&$;_^*=/;+%._.&_$%+=&/;&*+:,&==^+$=/;*#$:+&;#.+_}$;&%+:&&+#,*&}_,}!=:+/,#++,}.&,!$:!&*$+^+},,}!_$.%=#*+&!+;.!.:!%$#/+*}/,+*._#%_#%/=!_,&!+.,%.=%/$}/,*!&.+%__.+$$$^=!,.&,#_,/.$_,===.*%:_+^&$.^_=$:*%*_&/$$,::=_;$*=#&/&$+,!=.:;*$:=/*$&^+=,;=*__^&=$&^&!+;,*._!&$*;^*=.;+%,:.&_$%+=*,;&*.:,/_#_+$=+;*^::+&,#.^$}$,=*;:&,/#,+.}_;=!=:*&_#+_^}.,_!$_*&*#&+}},#:!_.$%=#*+&}+,$!.:/%$#*+*=&,+!,.}%_#,/=},,&*+.,%.#!/$}=,*!^.+&._./_}&^=%_.&%+_,/.$_^$!^.*%;_+/,$.^_=$;=%,_&/,$,^:=_;$*=_*/&$+^;=.;_*$:=/*$&^+=;;:*_:$&=,+^;=+;,*.=%/=_,%#.^;$*,:.&_#$,+=*;/*+:,&.#_+$!*.**&:,&,#:+_}$,=*,:$&+#:+.}_,$*!:*&+#++,!/,_!$.=&%#&++},,.%^.$%=#*+&}+,,!.._+#_=+&}&,,!,.:%__$^}}*,/!+..%.__/$$=.*!&.+%,_:/_$$^=!%.&%+_,/.$=^$==.*}=_:/,$.^_&;:&!:;,}&^,,&=_;$*==*^+#;%..#!.,,}&/::,}*!&;.*_:$,$}++}_,%$.^!+,!#,&}:}*,+,_+&_#$+=&*:+=_,%#=&$_!*$;_=,+}__$:+_}$,=%&_&&+#,+.}$,$!=:*&.=!+,}.,_**.=&%#&++},,$*=.$%=#*+,}+,;!..=/*_=+*}&;%!,.:%_#=+=}*,&!+._%.__/$}+.$!&.+%,#^/_$}^=!%.&%.#_/.$_^$!#.*%/_++.}.^_=$;=%/_&/+$,^=%^;$*=_*/}$+^;=.;_*$_&++$&^+=,./*_:}&=$+,,=+;,*._;&$$!^*!+.+*,:.&_#}+==*;&&+_.&.#_+$}=;**^:+&,$#+_}},=*%:&&+#,+.=%,$!=:*&+#++.}.,_&^.=&*#&++},,.!_.$/=#*+&}+,;!.._%$_=+*}&,+!,.:%__$/=..,;!+.,%.!%^}#=&}:}..%,_./_}=,=!*.&%+_;/.$_^$==:/%&_^/,$.^_=$;=%*}%/+$,^.=$;$%!_*/&=+^,=.;_*}:=/*$&^+=,;.*_:=/*$*^&=+!&*}:_&$#=:;!+^$}%/#&$#$+==*;&*+:,&.#_,:}=;**&_,/=#.+$}$;***:&&+$.,*}_;!!=:&&&#++,=_;_!$:&&*#/++},,.**:,%=#^+&}+,,!:._&*_=+*=},+!,..%$_$/=}*,&%!.,%.__/$$=,*!&.+/%_./_$$,%!*.&%+_,^/$_^$==.%%&_+/,$..:=$.&%*_+/+$;^.!*.:*=_*/&}}^,=:;_*}:=/+},^+=,;.&/:$/!$*^.!%;,*.:_+^#=^%=&;^*,:$/=#$+==*.#*+:;&.$*,.}=;%*&_+&,#:+_}$,=*+_,&+#,+.=_,$*!:*&,$.+,}.,_%^.=&%#&++**,.!=.$&*#*+^}+,,&&._&%_=+/}&,,!,.=/,_$+&}*;;!+.;%.#!/$}&;+!&.+%,#}/_$}^=!+:,%+_,/.=/^$!!.*%&$=/,$$^_==;=%/_&/+!*^.!!;$%%_*/+$+^$*+;_%*:=+_$&^^=,;}*__*+&$*^&=+:**.:#&$#=,;=&;.*,:.&_#$+==*..*+:_&.##+$}=;**&#/&,#$+_}=,=**:&&+},+.}_,$*!:*&&#++;}.,_!$.=&*#&++},;!!_.$%=#*.#}+,,!..#%$_=+*}&,+!,..%__$/=}*,&!+.,%.__/$$=,*!&.+%,_./_$$^=!/.&%+_,/.$_^$==.*%&_+/,$.^_=$;=%*_&/,$,^.=_;$*=_*/&$+^;=.;_*$:=/*$&^+");local D=(0x135-199)local l=109 local e=o;local _={}_={[(149/0x95)]=function()local _,o,n,x=A(J,e,e+g);e=e+j;l=(l+(D*j))%a;return(((x+l-(D)+d*(j*N))%d)*((N*G)^N))+(((n+l-(D*N)+d*(N^g))%a)*(d*a))+(((o+l-(D*g)+G)%a)*d)+((_+l-(D*j)+G)%a);end,[(0x6d-107)]=function(_,_,_)local _=A(J,e,e);e=e+C;l=(l+(D))%a;return((_+l-(D)+G)%d);end,[(0x5a/30)]=function()local o,_=A(J,e,e+N);l=(l+(D*N))%a;e=e+N;return(((_+l-(D)+d*(N*j))%d)*a)+((o+l-(D*N)+a*(N^g))%d);end,[(720/0xb4)]=function(l,_,e)if e then local _=(l/N^(_-o))%N^((e-C)-(_-o)+C);return _-_%o;else local _=N^(_-C);return(l%(_+_)>=_)and o or m;end;end,[(-0x68+109)]=function()local e=_[(25/0x19)]();local l=_[(0x21-32)]();local x=o;local n=(_[(368/0x5c)](l,C,p+j)*(N^(p*N)))+e;local e=_[(532/0x85)](l,21,31);local _=((-o)^_[(0x2d8/182)](l,32));if(e==m)then if(n==L)then return _*m;else e=C;x=L;end;elseif(e==(d*(N^g))-C)then return(n==m)and(_*(C/L))or(_*(m/L));end;return z(_,e-((a*(j))-o))*(x+(n/(N^E)));end,[(0x6d+(-73+-0x1e))]=function(n,x,x)local x;if(not n)then n=_[(0xc6/198)]();if(n==m)then return'';end;end;x=Q(J,e,e+n-o);e=e+n;local _=''for e=C,#x do _=K(_,Y((A(Q(x,e,e))+l)%a))l=(l+D)%d end return _;end}local function D(...)return{...},V('#',...)end local function J()local r={};local x={};local e={};local n={r,x,nil,e};local l={}local c=(-38+0x4e)local e={[(0x38+-55)]=(function(e)return not(#e==_[(50/0x19)]())end),[(0x4f-77)]=(function(e)return _[((0x114-154)+-0x75)]()end),[(37+-0x22)]=(function(e)return _[(0x38+-50)]()end),[(56-0x34)]=(function(e)local o=_[(0x51-75)]()local e=''local _=1 for l=1,#o do _=(_+c)%a e=K(e,Y((A(o:sub(l,l))+_)%d))end return e end)};n[3]=_[(0x7b+-121)]();local d=_[(0xfa/250)]()for o=1,d do local _=_[(0x44-66)]();local d;local _=e[_%(4740/0xed)];l[o]=_ and _({});end;for x=1,_[(-26+0x1b)]()do local e=_[((3924/0x6d)+-34)]();if(_[(24-0x14)](e,o,C)==L)then local a=_[((-0x5a-4)+0x62)](e,N,g);local d=_[(-0x60+(9400/0x5e))](e,j,N+j);local e={_[(31-0x1c)](),_[(315/0x69)](),nil,nil};local n={[((5-0x34)+47)]=function()e[U]=_[(0x3f-60)]();e[B]=_[(198/0x42)]();end,[(45+-0x2c)]=function()e[M]=_[(0x6e+-109)]();end,[(0x1c4/226)]=function()e[k]=_[(0x69-(-40+0x90))]()-(N^p)end,[(-68+0x47)]=function()e[w]=_[(0x24/36)]()-(N^p)e[B]=_[(-83+0x56)]();end};n[a]();if(_[((0x1aea/130)-0x31)](d,C,o)==C)then e[O]=l[e[f]]end if(_[(0x220/136)](d,N,N)==o)then e[M]=l[e[M]]end if(_[(0x58-84)](d,g,g)==C)then e[P]=l[e[s]]end r[x]=e;end end;for _=C,_[(0xcd/205)]()do x[_-C]=J();end;return n;end;local function L(_,m,a)local e=_[N];local l=_[g];local _=_[o];return(function(...)local g=D local J={};local G={...};local d=_;local Y={};local p=V('#',...)-C;local A=e;local D=l;local _=o _*=-1 local j=_;local e=o;local l={};for _=0,p do if(_>=D)then Y[_-D]=G[_+C];else l[_]=G[_+o];end;end;local _=p-D+o local _;local D;while true do _=d[e];D=_[(-47+(0xdf-175))];n=(9814896)while D<=(0xbdc/66)do n-= n n=(5043197)while(82+-0x3c)>=D do n-= n n=(4370310)while(125-0x73)>=D do n-= n n=(3199356)while D<=(0x83-127)do n-= n n=(5996926)while D<=(90+-0x59)do n-= n n=(8157349)while D>(104+-0x68)do n-= n local _={l,_};_[o][_[N][h]]=_[N][u]+_[N][w];break end while(n)/((0x26ed/5))==4093 do local _={l,_};_[C][_[N][f]]=_[o][_[N][S]]+_[C][_[N][k]];break end;break;end while(n)/((0xdad+-82))==1754 do n=(1719312)while D<=(0x180/192)do n-= n local e=_[i]local d,_=g(l[e](t(l,e+1,_[w])))j=_+e-1 local _=0;for e=e,j do _=_+o;l[e]=d[_];end;break;end while(n)/((-0x44+1496))==1204 do n=(1401888)while D>(113+-0x6e)do n-= n local _=_[i]l[_](l[_+C])break end while 1632==(n)/((-0x31+(1035+-0x7f)))do local e=_[x]l[e](t(l,e+C,_[w]))break end;break;end break;end break;end while 982==(n)/((-64+0xcfa))do n=(4264715)while D<=(1036/0x94)do n-= n n=(4725028)while(66+-0x3d)>=D do n-= n local _=_[O]local d,e=g(l[_]())j=e+_-o local e=0;for _=_,j do e=e+C;l[_]=d[e];end;break;end while(n)/(((5569+-0x6b)-0xaea))==1771 do n=(2106900)while(0x57-(14823/0xb7))<D do n-= n local _=_[x]l[_]=l[_](l[_+C])break end while 900==(n)/((4699-0x936))do local e=_[f]l[e]=l[e](t(l,e+o,_[c]))break end;break;end break;end while 1339==(n)/((-0x3a+(3323+-0x50)))do n=(3521441)while(0x2f-39)>=D do n-= n local _=_[x]l[_]=l[_](t(l,_+o,j))break;end while 1577==(n)/((-0x33+2284))do n=(7199313)while(66-0x39)<D do n-= n local x=A[_[r]];local n;local o={};n=W({},{__index=function(e,_)local _=o[_];return _[1][_[2]];end,__newindex=function(l,_,e)local _=o[_]_[1][_[2]]=e;end;});for n=1,_[B]do e=e+C;local _=d[e];if _[(0x63+-98)]==27 then o[n-1]={l,_[U]};else o[n-1]={m,_[k]};end;J[#J+1]=o;end;l[_[f]]=L(x,n,a);break end while 3443==(n)/((60639/0x1d))do local _=_[f]l[_]=l[_]()break end;break;end break;end break;end break;end while(n)/(((910632/0x98)-3018))==1470 do n=(3470670)while(-0x28+56)>=D do n-= n n=(10533984)while D<=(87-0x4a)do n-= n n=(957674)while(0x8f/13)>=D do n-= n l[_[x]]=L(A[_[U]],nil,a);break;end while 2507==(n)/(((0x1559a/106)-443))do n=(2271574)while D>(-0x7d+(17536/0x80))do n-= n if(l[_[b]]==l[_[B]])then e=e+C;else e=_[U];end;break end while(n)/((-28+(0x1385-2555)))==941 do local o=_[c];local e=l[o]for _=o+1,_[v]do e=e..l[_];end;l[_[f]]=e;break end;break;end break;end while 3342==(n)/((0x1911-(0x19d6-3349)))do n=(4435230)while(0x6d6/125)>=D do n-= n local o=_[i];local n=l[o+2];local d=l[o]+n;l[o]=d;if(n>0)then if(d<=l[o+1])then e=_[c];l[o+3]=d;end elseif(d>=l[o+1])then e=_[w];l[o+3]=d;end break;end while(n)/((140180/0x56))==2721 do n=(7994782)while(0x28+-25)<D do n-= n l[_[x]]=a[_[U]];break end while 2318==(n)/((-0x75+3566))do local o=_[b];local d=l[o]local n=l[o+2];if(n>0)then if(d>l[o+1])then e=_[w];else l[o+3]=d;end elseif(d<l[o+1])then e=_[U];else l[o+3]=d;end break end;break;end break;end break;end while(n)/((122772/0x4e))==2205 do n=(860935)while(-0x7d+144)>=D do n-= n n=(3210922)while D<=(0x37+-38)do n-= n l[_[x]]=l[_[r]][l[_[u]]];break;end while(n)/((0x43ce4/(502-0x132)))==2266 do n=(145544)while(0x414/58)<D do n-= n l[_[O]]=m[_[k]];break end while(n)/((25116/0x9c))==904 do l[_[O]]=l[_[U]][_[v]];break end;break;end break;end while(n)/((572725/0x9b))==233 do n=(1668873)while D<=(104-(-34+0x76))do n-= n e=_[k];break;end while(n)/((116433/0x33))==731 do n=(3452875)while(89-0x44)<D do n-= n l[_[h]]=(_[r]~=0);break end while(n)/((1260+-0x3b))==2875 do l[_[O]]=#l[_[k]];break end;break;end break;end break;end break;end break;end while 1933==(n)/((-0x5a+2699))do n=(8701886)while(0x88/4)>=D do n-= n n=(7846720)while D<=(-0x48+100)do n-= n n=(827828)while D<=(0x84-107)do n-= n n=(2373270)while D<=(0xe6/10)do n-= n l[_[i]]=(_[k]~=0);e=e+C;break;end while(n)/((-0x5e+1087))==2390 do n=(6453940)while(0x8c-116)<D do n-= n for _=_[i],_[c]do l[_]=nil;end;break end while(n)/((3477+(0x3f-85)))==1868 do l[_[i]]=_[M];break end;break;end break;end while(n)/((50998/0x56))==1396 do n=(543822)while D<=((-13+-0x6a)+145)do n-= n l[_[b]]=l[_[w]]%_[s];break;end while(n)/((1480-0x30d))==778 do n=(5186120)while(-0x46+97)<D do n-= n if(l[_[h]]~=l[_[s]])then e=e+C;else e=_[r];end;break end while(n)/((0x4c278/246))==4090 do l[_[h]]=l[_[k]];break end;break;end break;end break;end while(n)/((0x119e-2270))==3503 do n=(12521078)while D<=(113+-0x52)do n-= n n=(7945308)while(123+-0x5e)>=D do n-= n if(l[_[h]]~=_[P])then e=e+C;else e=_[U];end;break;end while(n)/((3150+-0x4a))==2583 do n=(6378275)while D>(930/0x1f)do n-= n do return l[_[f]]end break end while(n)/((5004-0x9df))==2575 do l[_[O]]={};break end;break;end break;end while(n)/(((0xe9f1e-479165)/0x93))==3842 do n=(8247819)while D<=(102-0x46)do n-= n do return end;break;end while 2237==(n)/((0x1d07-3744))do n=(652960)while((0x5a2e/238)+-64)<D do n-= n local e=_[i];local o=l[_[U]];l[e+1]=o;l[e]=o[_[u]];break end while(n)/((62381/0x6b))==1120 do local e=_[O];local o=l[_[M]];l[e+1]=o;l[e]=o[l[_[s]]];break end;break;end break;end break;end break;end while(n)/((6837-0xd7f))==2573 do n=(4761003)while D<=(0x5a0/36)do n-= n n=(825666)while D<=((-0x80+39)+126)do n-= n n=(1324797)while D<=(113-0x4e)do n-= n a[_[M]]=l[_[f]];break;end while(n)/((160267/0x8b))==1149 do n=(3894319)while(-0x4c+112)<D do n-= n l[_[b]][l[_[M]]]=l[_[s]];break end while 1243==(n)/((6371-0xca6))do local e=_[O];local o=l[e];for _=e+1,_[c]do y(o,l[_])end;break end;break;end break;end while 482==(n)/(((-0x36+-24)+0x6ff))do n=(1624413)while D<=(-0x39+95)do n-= n l[_[i]][_[U]]=l[_[S]];break;end while(n)/((-57+0x906))==721 do n=(5374649)while D>(-111+0x96)do n-= n l[_[f]][_[r]]=_[B];break end while(n)/((0x88c6/14))==2149 do l[_[O]][l[_[c]]]=_[v];break end;break;end break;end break;end while 2839==(n)/((0x39ba9/141))do n=(11075210)while(0x3d+-18)>=D do n-= n n=(5751390)while D<=(0x69-64)do n-= n m[_[U]]=l[_[i]];break;end while(n)/((2896-0x5ce))==4079 do n=(2665320)while D>(0x89-95)do n-= n if l[_[x]]then e=e+o;else e=_[k];end;break end while 2004==(n)/((-0x5c+1422))do l[_[f]]=l[_[c]]-l[_[v]];break end;break;end break;end while 4045==(n)/((596884/(544-0x146)))do n=(3818304)while(4972/(-89+0xca))>=D do n-= n if not l[_[h]]then e=e+C;else e=_[w];end;break;end while(n)/((0x4cc80/156))==1894 do n=(4222320)while D>(0x2544/212)do n-= n local _={l,_};_[o][_[N][f]]=_[N][P]+_[N][U];break end while 2190==(n)/(((0x0+-82)+0x7da))do local o=l[_[u]];if not o then e=e+C;else l[_[x]]=o;e=_[w];end;break end;break;end break;end break;end break;end break;end break;end while(n)/(((10438-0x1471)-2657))==3852 do n=(173850)while D<=(0x2300/128)do n-= n n=(766584)while D<=(-0x2c+102)do n-= n n=(5649987)while(1664/0x20)>=D do n-= n n=(305109)while((381-0xdd)+-0x6f)>=D do n-= n n=(2460094)while D<=(-54+0x65)do n-= n local _=_[i]l[_](l[_+C])break;end while(n)/((0x50d-656))==3862 do n=(403262)while(111+-0x3f)<D do n-= n local e=_[h]l[e](t(l,e+C,_[k]))break end while(n)/((0x1c636/47))==163 do local e=_[x]local d,_=g(l[e](t(l,e+1,_[k])))j=_+e-1 local _=0;for e=e,j do _=_+o;l[e]=d[_];end;break end;break;end break;end while 1827==(n)/((0x16d-198))do n=(2800530)while(9800/(497-0x12d))>=D do n-= n local _={l,_};_[C][_[N][O]]=_[o][_[N][P]]+_[C][_[N][M]];break;end while(n)/(((-0x180/12)+3362))==841 do n=(9916530)while(-0x13+70)<D do n-= n local n;l[_[O]]=_[c];e=e+o;_=d[e];l[_[O]]=_[w];e=e+o;_=d[e];l[_[h]]=_[U];e=e+o;_=d[e];n=_[f]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];if l[_[f]]then e=e+o;else e=_[k];end;break end while(n)/((430095/0x9f))==3666 do local _=_[b]local d,e=g(l[_]())j=e+_-o local e=0;for _=_,j do e=e+C;l[_]=d[e];end;break end;break;end break;end break;end while 3023==(n)/((3762-0x765))do n=(2359005)while D<=(145+-0x5a)do n-= n n=(9768928)while D<=((0x2cb9+-107)/0xd6)do n-= n local n;l[_[b]]=_[U];e=e+o;_=d[e];l[_[O]]=_[k];e=e+o;_=d[e];l[_[b]]=_[w];e=e+o;_=d[e];n=_[x]l[n]=l[n](t(l,n+o,_[r]))e=e+o;_=d[e];if l[_[h]]then e=e+o;else e=_[U];end;break;end while 2392==(n)/(((-108+0x17)+0x1049))do n=(110960)while(126-0x48)<D do n-= n local n;l[_[O]]={};e=e+o;_=d[e];l[_[f]]=a[_[k]];e=e+o;_=d[e];l[_[f]]=_[U];e=e+o;_=d[e];l[_[b]]=_[w];e=e+o;_=d[e];l[_[b]]=_[U];e=e+o;_=d[e];n=_[b]l[n]=l[n](t(l,n+o,_[w]))e=e+o;_=d[e];l[_[x]][_[M]]=l[_[v]];e=e+o;_=d[e];l[_[x]][_[r]]=l[_[P]];e=e+o;_=d[e];l[_[i]]=a[_[c]];e=e+o;_=d[e];l[_[i]]=_[k];e=e+o;_=d[e];l[_[h]]=_[U];e=e+o;_=d[e];l[_[f]]=_[U];e=e+o;_=d[e];n=_[b]l[n]=l[n](t(l,n+o,_[k]))e=e+o;_=d[e];l[_[x]][_[M]]=l[_[P]];e=e+o;_=d[e];l[_[i]][_[r]]=l[_[u]];e=e+o;_=d[e];l[_[i]]=a[_[k]];e=e+o;_=d[e];l[_[f]]=l[_[r]];e=e+o;_=d[e];n=_[i]l[n](l[n+C])e=e+o;_=d[e];do return end;break end while 1168==(n)/((0xa0+-65))do local O;local n;l[_[h]]={};e=e+o;_=d[e];l[_[h]]=a[_[M]];e=e+o;_=d[e];l[_[i]]=_[M];e=e+o;_=d[e];l[_[b]]=_[c];e=e+o;_=d[e];l[_[f]]=_[w];e=e+o;_=d[e];n=_[x]l[n]=l[n](t(l,n+o,_[U]))e=e+o;_=d[e];l[_[x]]=a[_[r]];e=e+o;_=d[e];l[_[i]]=_[c];e=e+o;_=d[e];l[_[x]]=_[r];e=e+o;_=d[e];l[_[i]]=_[r];e=e+o;_=d[e];n=_[x]l[n]=l[n](t(l,n+o,_[w]))e=e+o;_=d[e];l[_[i]][l[_[c]]]=l[_[S]];e=e+o;_=d[e];n=_[x];O=l[_[M]];l[n+1]=O;l[n]=O[_[P]];e=e+o;_=d[e];l[_[f]]=l[_[M]];e=e+o;_=d[e];n=_[h]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];l[_[f]]=a[_[U]];e=e+o;_=d[e];if l[_[i]]then e=e+o;else e=_[U];end;break end;break;end break;end while(n)/((1976-0x411))==2523 do n=(887760)while((0x587c-11340)/0xca)>=D do n-= n local D;local n;l[_[O]]=l[_[k]][_[B]];e=e+o;_=d[e];a[_[w]]=l[_[i]];e=e+o;_=d[e];l[_[O]]=a[_[r]];e=e+o;_=d[e];n=_[f];D=l[_[M]];l[n+1]=D;l[n]=D[_[s]];e=e+o;_=d[e];l[_[x]]=_[k];e=e+o;_=d[e];n=_[b]l[n]=l[n](t(l,n+o,_[k]))e=e+o;_=d[e];l[_[h]]=l[_[w]][_[B]];e=e+o;_=d[e];a[_[r]]=l[_[b]];e=e+o;_=d[e];l[_[i]]=a[_[M]];e=e+o;_=d[e];n=_[f];D=l[_[c]];l[n+1]=D;l[n]=D[_[S]];e=e+o;_=d[e];l[_[f]]=_[w];e=e+o;_=d[e];n=_[i]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];l[_[i]]=l[_[k]][_[u]];e=e+o;_=d[e];a[_[U]]=l[_[b]];e=e+o;_=d[e];l[_[f]]=a[_[w]];e=e+o;_=d[e];n=_[x];D=l[_[k]];l[n+1]=D;l[n]=D[_[s]];e=e+o;_=d[e];l[_[x]]=_[k];e=e+o;_=d[e];n=_[f]l[n]=l[n](t(l,n+o,_[r]))e=e+o;_=d[e];l[_[b]]=l[_[r]][_[u]];e=e+o;_=d[e];a[_[k]]=l[_[x]];e=e+o;_=d[e];l[_[f]]=a[_[c]];e=e+o;_=d[e];l[_[x]]=l[_[M]][_[P]];e=e+o;_=d[e];n=_[O]l[n]=l[n]()e=e+o;_=d[e];a[_[c]]=l[_[O]];e=e+o;_=d[e];l[_[f]]=a[_[U]];e=e+o;_=d[e];l[_[h]]=l[_[r]][_[u]];e=e+o;_=d[e];l[_[x]]=_[c];e=e+o;_=d[e];l[_[O]]=_[c];e=e+o;_=d[e];l[_[b]]=_[r];e=e+o;_=d[e];n=_[b]l[n]=l[n](t(l,n+o,_[w]))e=e+o;_=d[e];a[_[k]]=l[_[i]];e=e+o;_=d[e];l[_[b]]=a[_[c]];e=e+o;_=d[e];l[_[i]]=l[_[M]][_[s]];e=e+o;_=d[e];n=_[x]l[n]=l[n]()e=e+o;_=d[e];a[_[c]]=l[_[h]];e=e+o;_=d[e];l[_[i]]=a[_[M]];e=e+o;_=d[e];l[_[h]]=l[_[c]][_[S]];e=e+o;_=d[e];l[_[f]]=_[w];e=e+o;_=d[e];l[_[O]]=_[r];e=e+o;_=d[e];n=_[f]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];a[_[r]]=l[_[b]];e=e+o;_=d[e];l[_[f]]=a[_[k]];e=e+o;_=d[e];l[_[O]]=l[_[U]][_[P]];e=e+o;_=d[e];l[_[i]]=_[c];e=e+o;_=d[e];l[_[O]]=_[U];e=e+o;_=d[e];n=_[f]l[n]=l[n](t(l,n+o,_[w]))e=e+o;_=d[e];a[_[k]]=l[_[f]];e=e+o;_=d[e];l[_[x]]=a[_[M]];e=e+o;_=d[e];l[_[i]]=l[_[w]][_[s]];e=e+o;_=d[e];l[_[b]]=_[r];e=e+o;_=d[e];l[_[O]]=_[M];e=e+o;_=d[e];n=_[O]l[n]=l[n](t(l,n+o,_[U]))e=e+o;_=d[e];a[_[c]]=l[_[O]];e=e+o;_=d[e];l[_[b]]={};e=e+o;_=d[e];l[_[i]]=a[_[w]];e=e+o;_=d[e];l[_[O]]=_[w];e=e+o;_=d[e];l[_[b]]=_[k];e=e+o;_=d[e];l[_[h]]=_[U];e=e+o;_=d[e];n=_[i]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];l[_[b]]=a[_[c]];e=e+o;_=d[e];l[_[f]]=_[k];e=e+o;_=d[e];l[_[b]]=_[r];e=e+o;_=d[e];l[_[i]]=_[r];e=e+o;_=d[e];n=_[f]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];l[_[h]]=a[_[c]];e=e+o;_=d[e];l[_[f]]=_[k];e=e+o;_=d[e];l[_[f]]=_[w];e=e+o;_=d[e];l[_[O]]=_[c];e=e+o;_=d[e];n=_[h]l[n]=l[n](t(l,n+o,_[M]))e=e+o;_=d[e];l[_[x]]=a[_[M]];e=e+o;_=d[e];l[_[x]]=_[k];e=e+o;_=d[e];l[_[O]]=_[M];e=e+o;_=d[e];l[_[x]]=_[r];e=e+o;_=d[e];n=_[O]l[n]=l[n](t(l,n+o,_[U]))e=e+o;_=d[e];l[_[x]]=a[_[c]];e=e+o;_=d[e];l[_[O]]=_[r];e=e+o;_=d[e];l[_[i]]=_[w];e=e+o;_=d[e];l[_[f]]=_[w];e=e+o;_=d[e];n=_[O]l[n]=l[n](t(l,n+o,_[w]))e=e+o;_=d[e];l[_[i]]=a[_[M]];break;end while 1620==(n)/((63020/0x73))do n=(4570640)while((0xee-143)+-0x26)<D do n-= n local n;l[_[h]]=_[M];e=e+o;_=d[e];l[_[f]]=_[w];e=e+o;_=d[e];l[_[i]]=_[k];e=e+o;_=d[e];n=_[h]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];if l[_[h]]then e=e+o;else e=_[c];end;break end while(n)/((2559-0x527))==3686 do local n;l[_[O]]=_[c];e=e+o;_=d[e];l[_[x]]=_[r];e=e+o;_=d[e];l[_[b]]=_[c];e=e+o;_=d[e];n=_[h]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];if l[_[x]]then e=e+o;else e=_[M];end;break end;break;end break;end break;end break;end while 1183==(n)/((0x155b8/135))do n=(3098546)while(149-0x55)>=D do n-= n n=(4970542)while(166+-0x69)>=D do n-= n n=(571764)while(-0x51+140)>=D do n-= n local s;local D;local P;local n;l[_[h]]=a[_[r]];e=e+o;_=d[e];l[_[O]]=l[_[r]][_[u]];e=e+o;_=d[e];n=_[O];P=l[_[k]];l[n+1]=P;l[n]=P[_[u]];e=e+o;_=d[e];l[_[h]]=l[_[M]];e=e+o;_=d[e];l[_[h]]=l[_[U]];e=e+o;_=d[e];n=_[h]l[n]=l[n](t(l,n+o,_[k]))e=e+o;_=d[e];n=_[i];P=l[_[w]];l[n+1]=P;l[n]=P[_[B]];e=e+o;_=d[e];n=_[O]l[n]=l[n](l[n+C])e=e+o;_=d[e];D={l,_};D[C][D[N][i]]=D[o][D[N][B]]+D[C][D[N][w]];e=e+o;_=d[e];l[_[h]]=l[_[w]]%_[u];e=e+o;_=d[e];n=_[f]l[n]=l[n](l[n+C])e=e+o;_=d[e];P=_[c];s=l[P]for _=P+1,_[u]do s=s..l[_];end;l[_[b]]=s;e=e+o;_=d[e];D={l,_};D[C][D[N][x]]=D[o][D[N][B]]+D[C][D[N][M]];e=e+o;_=d[e];l[_[h]]=l[_[U]]%_[S];break;end while 159==(n)/((7249-0xe45))do n=(8211192)while D>(195-0x87)do n-= n local n;l[_[h]]=_[w];e=e+o;_=d[e];l[_[b]]=_[r];e=e+o;_=d[e];l[_[f]]=_[r];e=e+o;_=d[e];n=_[i]l[n]=l[n](t(l,n+o,_[w]))e=e+o;_=d[e];if not l[_[x]]then e=e+C;else e=_[w];end;break end while 2508==(n)/((392880/0x78))do local n;l[_[i]]=_[M];e=e+o;_=d[e];l[_[f]]=_[M];e=e+o;_=d[e];l[_[i]]=_[M];e=e+o;_=d[e];n=_[h]l[n]=l[n](t(l,n+o,_[r]))e=e+o;_=d[e];if l[_[b]]then e=e+o;else e=_[c];end;break end;break;end break;end while(n)/(((0xb215e0/32)/183))==2494 do n=(90396)while D<=(-76+(-0x13+157))do n-= n local D;local n;n=_[f];D=l[_[c]];l[n+1]=D;l[n]=D[_[v]];e=e+o;_=d[e];l[_[x]]=_[w];e=e+o;_=d[e];n=_[i]l[n]=l[n](t(l,n+o,_[M]))e=e+o;_=d[e];a[_[w]]=l[_[h]];e=e+o;_=d[e];l[_[x]]=a[_[U]];e=e+o;_=d[e];n=_[i];D=l[_[U]];l[n+1]=D;l[n]=D[_[s]];e=e+o;_=d[e];l[_[O]]=_[k];e=e+o;_=d[e];n=_[i]l[n]=l[n](t(l,n+o,_[r]))e=e+o;_=d[e];a[_[U]]=l[_[i]];e=e+o;_=d[e];l[_[i]]=a[_[U]];e=e+o;_=d[e];l[_[x]]=a[_[U]];e=e+o;_=d[e];l[_[h]]=_[w];e=e+o;_=d[e];l[_[h]]=_[c];e=e+o;_=d[e];l[_[h]]=_[r];e=e+o;_=d[e];n=_[i]l[n]=l[n](t(l,n+o,_[U]))e=e+o;_=d[e];l[_[b]]=l[_[c]][l[_[B]]];e=e+o;_=d[e];a[_[r]]=l[_[x]];e=e+o;_=d[e];l[_[x]]=a[_[r]];e=e+o;_=d[e];n=_[h];D=l[_[w]];l[n+1]=D;l[n]=D[_[u]];e=e+o;_=d[e];n=_[h]l[n]=l[n](l[n+C])e=e+o;_=d[e];a[_[U]]=l[_[O]];e=e+o;_=d[e];l[_[h]]=a[_[c]];e=e+o;_=d[e];n=_[i]l[n]=l[n]()e=e+o;_=d[e];a[_[U]]=l[_[f]];e=e+o;_=d[e];l[_[h]]={};e=e+o;_=d[e];a[_[U]]=l[_[h]];e=e+o;_=d[e];l[_[h]]=a[_[w]];e=e+o;_=d[e];n=_[b];D=l[_[U]];l[n+1]=D;l[n]=D[_[B]];e=e+o;_=d[e];l[_[h]]=_[M];e=e+o;_=d[e];n=_[i]l[n]=l[n](t(l,n+o,_[M]))e=e+o;_=d[e];l[_[x]]=l[_[U]][_[u]];e=e+o;_=d[e];a[_[M]]=l[_[f]];e=e+o;_=d[e];l[_[x]]=a[_[U]];e=e+o;_=d[e];l[_[b]]=l[_[w]][_[S]];e=e+o;_=d[e];a[_[c]]=l[_[x]];e=e+o;_=d[e];l[_[f]]=a[_[U]];e=e+o;_=d[e];l[_[x]]=l[_[c]][_[v]];e=e+o;_=d[e];a[_[c]]=l[_[O]];e=e+o;_=d[e];l[_[h]]={};e=e+o;_=d[e];l[_[x]]=a[_[U]];e=e+o;_=d[e];l[_[x]]=l[_[w]][_[P]];e=e+o;_=d[e];l[_[x]][_[c]]=l[_[s]];e=e+o;_=d[e];a[_[k]]=l[_[x]];e=e+o;_=d[e];l[_[b]]=a[_[w]];e=e+o;_=d[e];n=_[x];D=l[_[c]];l[n+1]=D;l[n]=D[_[S]];e=e+o;_=d[e];l[_[b]]=_[c];e=e+o;_=d[e];n=_[b]l[n]=l[n](t(l,n+o,_[U]))e=e+o;_=d[e];a[_[k]]=l[_[x]];e=e+o;_=d[e];l[_[i]]={};e=e+o;_=d[e];l[_[O]]=a[_[k]];e=e+o;_=d[e];l[_[x]]=l[_[c]][_[P]];e=e+o;_=d[e];l[_[h]][_[k]]=l[_[u]];e=e+o;_=d[e];l[_[f]]=a[_[M]];e=e+o;_=d[e];l[_[f]]=l[_[U]][_[B]];e=e+o;_=d[e];l[_[f]][_[k]]=l[_[P]];e=e+o;_=d[e];l[_[i]]=a[_[r]];e=e+o;_=d[e];l[_[f]]=l[_[c]][_[B]];e=e+o;_=d[e];l[_[b]][_[w]]=l[_[S]];e=e+o;_=d[e];l[_[h]]=a[_[U]];e=e+o;_=d[e];l[_[O]]=l[_[r]][_[v]];e=e+o;_=d[e];l[_[O]][_[M]]=l[_[s]];e=e+o;_=d[e];l[_[O]]=a[_[r]];e=e+o;_=d[e];l[_[h]]=l[_[U]][_[s]];e=e+o;_=d[e];l[_[x]][_[w]]=l[_[P]];e=e+o;_=d[e];a[_[c]]=l[_[h]];e=e+o;_=d[e];for _=_[f],_[c]do l[_]=nil;end;e=e+o;_=d[e];a[_[w]]=l[_[O]];e=e+o;_=d[e];for _=_[h],_[w]do l[_]=nil;end;e=e+o;_=d[e];a[_[r]]=l[_[h]];e=e+o;_=d[e];for _=_[O],_[M]do l[_]=nil;end;e=e+o;_=d[e];a[_[w]]=l[_[f]];e=e+o;_=d[e];for _=_[h],_[r]do l[_]=nil;end;e=e+o;_=d[e];a[_[r]]=l[_[x]];e=e+o;_=d[e];l[_[O]]={};e=e+o;_=d[e];l[_[i]]={};e=e+o;_=d[e];a[_[U]]=l[_[h]];e=e+o;_=d[e];a[_[k]]=l[_[h]];e=e+o;_=d[e];l[_[i]]=a[_[U]];e=e+o;_=d[e];n=_[f];D=l[_[r]];l[n+1]=D;l[n]=D[_[v]];e=e+o;_=d[e];l[_[b]]=_[r];break;end while(n)/((0x92-110))==2511 do n=(12978656)while D>(0x1a16/106)do n-= n local n;l[_[b]]=_[U];e=e+o;_=d[e];l[_[O]]=_[k];e=e+o;_=d[e];l[_[f]]=_[r];e=e+o;_=d[e];n=_[b]l[n]=l[n](t(l,n+o,_[w]))e=e+o;_=d[e];if l[_[h]]then e=e+o;else e=_[U];end;break end while(n)/((7730-0xf42))==3394 do local i;local a;local n;l[_[x]]=_[k];e=e+o;_=d[e];l[_[O]]=_[c];e=e+o;_=d[e];l[_[O]]=#l[_[r]];e=e+o;_=d[e];l[_[b]]=_[c];e=e+o;_=d[e];n=_[h];a=l[n]i=l[n+2];if(i>0)then if(a>l[n+1])then e=_[r];else l[n+3]=a;end elseif(a<l[n+1])then e=_[c];else l[n+3]=a;end break end;break;end break;end break;end while(n)/((2340+-0x7a))==1397 do n=(3267420)while D<=(190-0x7b)do n-= n n=(4864125)while(0xb3-114)>=D do n-= n local n;l[_[O]]=_[U];e=e+o;_=d[e];l[_[b]]=_[k];e=e+o;_=d[e];l[_[f]]=_[w];e=e+o;_=d[e];n=_[h]l[n]=l[n](t(l,n+o,_[r]))e=e+o;_=d[e];if not l[_[f]]then e=e+C;else e=_[M];end;break;end while 2625==(n)/((0x788+-75))do n=(4953200)while(9306/0x8d)<D do n-= n local C;local D;local n;l[_[f]]=a[_[r]];e=e+o;_=d[e];n=_[O];D=l[_[w]];l[n+1]=D;l[n]=D[_[s]];e=e+o;_=d[e];l[_[h]]=_[k];e=e+o;_=d[e];n=_[f]l[n]=l[n](t(l,n+o,_[M]))e=e+o;_=d[e];l[_[h]]={};e=e+o;_=d[e];l[_[x]]=a[_[c]];e=e+o;_=d[e];l[_[h]]=_[M];e=e+o;_=d[e];l[_[x]]=_[M];e=e+o;_=d[e];l[_[O]]=_[c];e=e+o;_=d[e];n=_[x]l[n]=l[n](t(l,n+o,_[w]))e=e+o;_=d[e];l[_[b]]={};e=e+o;_=d[e];l[_[x]]={};e=e+o;_=d[e];l[_[h]]=a[_[U]];e=e+o;_=d[e];l[_[O]]=_[U];e=e+o;_=d[e];l[_[x]]=_[k];e=e+o;_=d[e];l[_[h]]=_[c];e=e+o;_=d[e];n=_[x]l[n]=l[n](t(l,n+o,_[w]))e=e+o;_=d[e];l[_[x]]=a[_[c]];e=e+o;_=d[e];l[_[O]]=_[w];e=e+o;_=d[e];l[_[b]]=_[r];e=e+o;_=d[e];l[_[i]]=_[k];e=e+o;_=d[e];n=_[i]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];l[_[O]][l[_[k]]]=l[_[S]];e=e+o;_=d[e];l[_[h]]=a[_[w]];e=e+o;_=d[e];l[_[x]]=_[w];e=e+o;_=d[e];l[_[f]]=_[k];e=e+o;_=d[e];l[_[f]]=_[k];e=e+o;_=d[e];n=_[O]l[n]=l[n](t(l,n+o,_[w]))e=e+o;_=d[e];l[_[h]][l[_[r]]]=_[v];e=e+o;_=d[e];l[_[i]]=a[_[U]];e=e+o;_=d[e];l[_[f]]=_[M];e=e+o;_=d[e];l[_[O]]=_[U];e=e+o;_=d[e];l[_[h]]=_[r];e=e+o;_=d[e];n=_[b]l[n]=l[n](t(l,n+o,_[r]))e=e+o;_=d[e];l[_[b]]={};e=e+o;_=d[e];l[_[h]]={};e=e+o;_=d[e];l[_[b]]=a[_[w]];e=e+o;_=d[e];l[_[h]]=_[M];e=e+o;_=d[e];l[_[f]]=_[k];e=e+o;_=d[e];l[_[f]]=_[w];e=e+o;_=d[e];n=_[i]l[n]=l[n](t(l,n+o,_[M]))e=e+o;_=d[e];l[_[h]]=a[_[U]];e=e+o;_=d[e];l[_[i]]=_[c];e=e+o;_=d[e];l[_[f]]=_[r];e=e+o;_=d[e];l[_[i]]=_[c];e=e+o;_=d[e];n=_[f]l[n]=l[n](t(l,n+o,_[U]))e=e+o;_=d[e];l[_[b]][l[_[k]]]=l[_[u]];e=e+o;_=d[e];l[_[i]]=a[_[M]];e=e+o;_=d[e];l[_[h]]=_[c];e=e+o;_=d[e];l[_[x]]=_[U];e=e+o;_=d[e];l[_[h]]=_[k];e=e+o;_=d[e];n=_[h]l[n]=l[n](t(l,n+o,_[M]))e=e+o;_=d[e];l[_[x]]=_[w];e=e+o;_=d[e];l[_[b]]=a[_[r]];e=e+o;_=d[e];n=_[i];D=l[_[M]];l[n+1]=D;l[n]=D[_[S]];e=e+o;_=d[e];l[_[x]]=_[c];e=e+o;_=d[e];n=_[f]l[n]=l[n](t(l,n+o,_[k]))e=e+o;_=d[e];l[_[O]]=l[_[w]][_[P]];e=e+o;_=d[e];l[_[x]]=l[_[U]][_[P]];e=e+o;_=d[e];l[_[i]]=_[U];e=e+o;_=d[e];l[_[O]]=a[_[U]];e=e+o;_=d[e];n=_[x];D=l[_[c]];l[n+1]=D;l[n]=D[_[P]];e=e+o;_=d[e];l[_[b]]=_[U];e=e+o;_=d[e];n=_[O]l[n]=l[n](t(l,n+o,_[U]))e=e+o;_=d[e];l[_[i]]=l[_[k]][_[S]];e=e+o;_=d[e];l[_[h]]=l[_[r]][_[s]];e=e+o;_=d[e];l[_[i]]=_[w];e=e+o;_=d[e];D=_[c];C=l[D]for _=D+1,_[s]do C=C..l[_];end;l[_[b]]=C;e=e+o;_=d[e];l[_[i]][l[_[r]]]=l[_[B]];e=e+o;_=d[e];l[_[O]]=a[_[w]];e=e+o;_=d[e];l[_[O]]=_[k];e=e+o;_=d[e];l[_[f]]=_[U];e=e+o;_=d[e];l[_[b]]=_[c];e=e+o;_=d[e];n=_[i]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];l[_[f]][l[_[r]]]=_[s];e=e+o;_=d[e];l[_[b]]={};e=e+o;_=d[e];l[_[b]]=a[_[U]];e=e+o;_=d[e];l[_[x]]=_[k];e=e+o;_=d[e];l[_[O]]=_[U];e=e+o;_=d[e];l[_[x]]=_[r];break end while 2320==(n)/((4390-(2311+-0x38)))do local n;l[_[h]]=_[c];e=e+o;_=d[e];l[_[i]]=_[r];e=e+o;_=d[e];l[_[i]]=_[w];e=e+o;_=d[e];n=_[h]l[n]=l[n](t(l,n+o,_[M]))e=e+o;_=d[e];if l[_[h]]then e=e+o;else e=_[U];end;break end;break;end break;end while 1846==(n)/((-84+(1967+-0x71)))do n=(6387615)while D<=(2244/0x21)do n-= n local n;l[_[i]]=_[w];e=e+o;_=d[e];l[_[b]]=_[c];e=e+o;_=d[e];l[_[b]]=_[M];e=e+o;_=d[e];n=_[f]l[n]=l[n](t(l,n+o,_[k]))e=e+o;_=d[e];if not l[_[O]]then e=e+C;else e=_[w];end;break;end while 3965==(n)/((0xfbb8/40))do n=(2450422)while D>((0x5a37/149)-0x56)do n-= n local b;local n;l[_[O]]={};e=e+o;_=d[e];l[_[O]][_[r]]=l[_[B]];e=e+o;_=d[e];l[_[i]]=a[_[M]];e=e+o;_=d[e];l[_[h]]=_[r];e=e+o;_=d[e];l[_[i]]=_[U];e=e+o;_=d[e];l[_[h]]=_[c];e=e+o;_=d[e];n=_[x]l[n]=l[n](t(l,n+o,_[r]))e=e+o;_=d[e];l[_[f]][_[U]]=l[_[P]];e=e+o;_=d[e];b=l[_[P]];if not b then e=e+C;else l[_[O]]=b;e=_[U];end;break end while 2054==(n)/((285127/0xef))do local n;l[_[f]]=a[_[c]];e=e+o;_=d[e];l[_[x]]=_[U];e=e+o;_=d[e];l[_[O]]=_[c];e=e+o;_=d[e];l[_[i]]=_[M];e=e+o;_=d[e];n=_[x]l[n]=l[n](t(l,n+o,_[M]))e=e+o;_=d[e];l[_[O]][_[U]]=l[_[v]];e=e+o;_=d[e];l[_[x]][_[c]]=_[P];e=e+o;_=d[e];l[_[h]][_[k]]=_[P];e=e+o;_=d[e];l[_[f]][_[w]]=_[S];e=e+o;_=d[e];l[_[h]]=a[_[r]];e=e+o;_=d[e];l[_[i]]=l[_[k]][_[S]];e=e+o;_=d[e];l[_[O]]=l[_[M]][_[s]];e=e+o;_=d[e];l[_[O]][_[k]]=l[_[u]];e=e+o;_=d[e];l[_[b]][_[c]]=_[P];e=e+o;_=d[e];l[_[h]][_[w]]=_[u];e=e+o;_=d[e];l[_[O]][_[U]]=_[P];e=e+o;_=d[e];l[_[x]]={};e=e+o;_=d[e];l[_[h]]=a[_[w]];e=e+o;_=d[e];l[_[i]]=_[U];e=e+o;_=d[e];l[_[x]]=_[U];e=e+o;_=d[e];l[_[b]]=_[r];e=e+o;_=d[e];n=_[O]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];l[_[i]]=a[_[w]];e=e+o;_=d[e];l[_[i]]=_[r];e=e+o;_=d[e];l[_[b]]=_[c];e=e+o;_=d[e];l[_[h]]=_[k];e=e+o;_=d[e];n=_[i]l[n]=l[n](t(l,n+o,_[M]))e=e+o;_=d[e];l[_[b]]=a[_[k]];e=e+o;_=d[e];l[_[h]]=_[M];e=e+o;_=d[e];l[_[f]]=_[M];e=e+o;_=d[e];l[_[O]]=_[r];e=e+o;_=d[e];n=_[h]l[n]=l[n](t(l,n+o,_[M]))e=e+o;_=d[e];l[_[x]]=a[_[k]];e=e+o;_=d[e];l[_[O]]=_[U];e=e+o;_=d[e];l[_[f]]=_[U];e=e+o;_=d[e];l[_[i]]=_[M];e=e+o;_=d[e];n=_[x]l[n]=l[n](t(l,n+o,_[M]))e=e+o;_=d[e];l[_[h]]=a[_[k]];e=e+o;_=d[e];l[_[O]]=_[c];e=e+o;_=d[e];l[_[h]]=_[r];e=e+o;_=d[e];l[_[f]]=_[r];e=e+o;_=d[e];n=_[h]l[n]=l[n](t(l,n+o,_[k]))e=e+o;_=d[e];l[_[O]]=a[_[M]];e=e+o;_=d[e];l[_[h]]=_[c];e=e+o;_=d[e];l[_[x]]=_[r];e=e+o;_=d[e];l[_[O]]=_[r];e=e+o;_=d[e];n=_[f]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];l[_[O]]=a[_[r]];e=e+o;_=d[e];l[_[b]]=_[w];e=e+o;_=d[e];l[_[b]]=_[U];e=e+o;_=d[e];l[_[O]]=_[k];e=e+o;_=d[e];n=_[i]l[n]=l[n](t(l,n+o,_[r]))e=e+o;_=d[e];l[_[x]]=a[_[r]];e=e+o;_=d[e];l[_[f]]=_[r];e=e+o;_=d[e];l[_[f]]=_[U];e=e+o;_=d[e];l[_[b]]=_[r];e=e+o;_=d[e];n=_[h]l[n]=l[n](t(l,n+o,_[M]))e=e+o;_=d[e];l[_[h]]=a[_[c]];e=e+o;_=d[e];l[_[i]]=_[U];e=e+o;_=d[e];l[_[x]]=_[k];e=e+o;_=d[e];l[_[i]]=_[w];e=e+o;_=d[e];n=_[f]l[n]=l[n](t(l,n+o,_[r]))e=e+o;_=d[e];l[_[b]]=a[_[k]];e=e+o;_=d[e];l[_[x]]=_[c];e=e+o;_=d[e];l[_[O]]=_[r];e=e+o;_=d[e];l[_[i]]=_[w];e=e+o;_=d[e];n=_[b]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];l[_[i]]=a[_[c]];e=e+o;_=d[e];l[_[x]]=_[k];e=e+o;_=d[e];l[_[x]]=_[U];e=e+o;_=d[e];l[_[i]]=_[w];e=e+o;_=d[e];n=_[b]l[n]=l[n](t(l,n+o,_[r]))e=e+o;_=d[e];l[_[b]]=a[_[k]];e=e+o;_=d[e];l[_[b]]=_[c];e=e+o;_=d[e];l[_[x]]=_[r];e=e+o;_=d[e];l[_[i]]=_[k];e=e+o;_=d[e];n=_[b]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];l[_[x]]=a[_[U]];e=e+o;_=d[e];l[_[b]]=_[r];e=e+o;_=d[e];l[_[f]]=_[M];break end;break;end break;end break;end break;end break;end while(n)/((3676-0x736))==95 do n=(2364516)while D<=(8036/0x62)do n-= n n=(3287185)while(0x26e4/131)>=D do n-= n n=(4114172)while D<=(0xaf+-102)do n-= n n=(804364)while(5183/0x49)>=D do n-= n local n;l[_[h]]=_[w];e=e+o;_=d[e];l[_[f]]=_[c];e=e+o;_=d[e];l[_[i]]=_[k];e=e+o;_=d[e];n=_[b]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];if not l[_[i]]then e=e+C;else e=_[c];end;break;end while 724==(n)/((0x2fbd/11))do n=(4191187)while D>(792/0xb)do n-= n l[_[O]]=m[_[c]];e=e+o;_=d[e];l[_[i]]=#l[_[r]];e=e+o;_=d[e];m[_[M]]=l[_[h]];e=e+o;_=d[e];l[_[O]]=m[_[k]];e=e+o;_=d[e];l[_[f]]=#l[_[k]];e=e+o;_=d[e];m[_[r]]=l[_[O]];e=e+o;_=d[e];do return end;break end while 1027==(n)/((8201-0x1018))do local n;l[_[O]]=_[k];e=e+o;_=d[e];l[_[h]]=_[w];e=e+o;_=d[e];l[_[x]]=_[k];e=e+o;_=d[e];n=_[b]l[n]=l[n](t(l,n+o,_[w]))e=e+o;_=d[e];if not l[_[b]]then e=e+C;else e=_[M];end;break end;break;end break;end while 2446==(n)/((-0x67+(7140/0x4)))do n=(11337216)while(179+-0x69)>=D do n-= n local D;local n;l[_[O]]=_[U];e=e+o;_=d[e];l[_[f]]=_[w];e=e+o;_=d[e];n=_[O]l[n]=l[n](t(l,n+o,_[M]))e=e+o;_=d[e];l[_[x]]=a[_[U]];e=e+o;_=d[e];l[_[i]]=_[U];e=e+o;_=d[e];l[_[O]]=_[M];e=e+o;_=d[e];l[_[f]]=_[c];e=e+o;_=d[e];n=_[O]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];l[_[O]]=a[_[k]];e=e+o;_=d[e];l[_[i]]=_[r];e=e+o;_=d[e];l[_[O]]=_[w];e=e+o;_=d[e];l[_[i]]=_[U];e=e+o;_=d[e];n=_[x]l[n]=l[n](t(l,n+o,_[r]))e=e+o;_=d[e];l[_[b]]=a[_[k]];e=e+o;_=d[e];l[_[O]]=_[w];e=e+o;_=d[e];l[_[h]]=_[w];e=e+o;_=d[e];l[_[b]]=_[r];e=e+o;_=d[e];n=_[O]l[n]=l[n](t(l,n+o,_[r]))e=e+o;_=d[e];l[_[x]]=a[_[r]];e=e+o;_=d[e];l[_[h]]=_[U];e=e+o;_=d[e];l[_[f]]=_[r];e=e+o;_=d[e];l[_[f]]=_[M];e=e+o;_=d[e];n=_[h]l[n]=l[n](t(l,n+o,_[w]))e=e+o;_=d[e];l[_[i]]=a[_[M]];e=e+o;_=d[e];l[_[b]]=_[r];e=e+o;_=d[e];l[_[f]]=_[c];e=e+o;_=d[e];l[_[O]]=_[c];e=e+o;_=d[e];n=_[i]l[n]=l[n](t(l,n+o,_[k]))e=e+o;_=d[e];l[_[i]]=a[_[U]];e=e+o;_=d[e];l[_[b]]=_[w];e=e+o;_=d[e];l[_[O]]=_[w];e=e+o;_=d[e];l[_[b]]=_[w];e=e+o;_=d[e];n=_[O]l[n]=l[n](t(l,n+o,_[r]))e=e+o;_=d[e];l[_[O]]=a[_[k]];e=e+o;_=d[e];l[_[f]]=_[w];e=e+o;_=d[e];l[_[x]]=_[w];e=e+o;_=d[e];l[_[f]]=_[r];e=e+o;_=d[e];n=_[h]l[n]=l[n](t(l,n+o,_[r]))e=e+o;_=d[e];l[_[b]]=a[_[k]];e=e+o;_=d[e];l[_[O]]=_[k];e=e+o;_=d[e];l[_[x]]=_[r];e=e+o;_=d[e];l[_[h]]=_[r];e=e+o;_=d[e];n=_[f]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];l[_[i]]=a[_[k]];e=e+o;_=d[e];l[_[x]]=_[U];e=e+o;_=d[e];l[_[x]]=_[c];e=e+o;_=d[e];l[_[b]]=_[w];e=e+o;_=d[e];n=_[h]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];l[_[b]]=a[_[c]];e=e+o;_=d[e];l[_[f]]=_[M];e=e+o;_=d[e];l[_[i]]=_[U];e=e+o;_=d[e];l[_[O]]=_[M];e=e+o;_=d[e];n=_[h]l[n]=l[n](t(l,n+o,_[M]))e=e+o;_=d[e];l[_[i]]=a[_[w]];e=e+o;_=d[e];l[_[b]]=_[w];e=e+o;_=d[e];l[_[h]]=_[M];e=e+o;_=d[e];l[_[b]]=_[c];e=e+o;_=d[e];n=_[h]l[n]=l[n](t(l,n+o,_[w]))e=e+o;_=d[e];l[_[O]]=a[_[M]];e=e+o;_=d[e];l[_[b]]=_[U];e=e+o;_=d[e];l[_[x]]=_[w];e=e+o;_=d[e];l[_[O]]=_[M];e=e+o;_=d[e];n=_[h]l[n]=l[n](t(l,n+o,_[w]))e=e+o;_=d[e];l[_[f]]=a[_[M]];e=e+o;_=d[e];l[_[f]]=_[c];e=e+o;_=d[e];l[_[f]]=_[r];e=e+o;_=d[e];l[_[i]]=_[c];e=e+o;_=d[e];n=_[f]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];l[_[i]]=a[_[k]];e=e+o;_=d[e];l[_[x]]=_[w];e=e+o;_=d[e];l[_[f]]=_[w];e=e+o;_=d[e];l[_[b]]=_[k];e=e+o;_=d[e];n=_[O]l[n]=l[n](t(l,n+o,_[U]))e=e+o;_=d[e];n=_[h];D=l[n];for _=n+1,_[k]do y(D,l[_])end;break;end while(n)/((5697-0xb41))==4026 do n=(2147950)while D>(-0x73+190)do n-= n local p;local D;local N;local m;local A,L;local n;l[_[b]]=a[_[M]];e=e+o;_=d[e];l[_[x]]=_[w];e=e+o;_=d[e];l[_[b]]=_[r];e=e+o;_=d[e];l[_[i]]=_[k];e=e+o;_=d[e];n=_[i]l[n]=l[n](t(l,n+o,_[k]))e=e+o;_=d[e];l[_[x]][l[_[w]]]=l[_[s]];e=e+o;_=d[e];l[_[x]]=a[_[c]];e=e+o;_=d[e];l[_[O]]=_[r];e=e+o;_=d[e];l[_[O]]=_[k];e=e+o;_=d[e];l[_[x]]=_[M];e=e+o;_=d[e];n=_[x]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];l[_[O]]=_[k];e=e+o;_=d[e];l[_[O]]=a[_[M]];e=e+o;_=d[e];l[_[h]]=a[_[k]];e=e+o;_=d[e];n=_[x]A,L=g(l[n]())j=L+n-o m=0;for _=n,j do m=m+C;l[_]=A[m];end;e=e+o;_=d[e];n=_[b]l[n]=l[n](t(l,n+o,j))e=e+o;_=d[e];l[_[x]]=_[k];e=e+o;_=d[e];N=_[r];D=l[N]for _=N+1,_[v]do D=D..l[_];end;l[_[h]]=D;e=e+o;_=d[e];l[_[O]][l[_[c]]]=l[_[u]];e=e+o;_=d[e];l[_[x]]=a[_[M]];e=e+o;_=d[e];l[_[h]]=_[M];e=e+o;_=d[e];l[_[h]]=_[r];e=e+o;_=d[e];l[_[b]]=_[k];e=e+o;_=d[e];n=_[b]l[n]=l[n](t(l,n+o,_[k]))e=e+o;_=d[e];l[_[O]][l[_[w]]]=_[P];e=e+o;_=d[e];l[_[i]]={};e=e+o;_=d[e];l[_[O]]=a[_[w]];e=e+o;_=d[e];l[_[i]]=_[w];e=e+o;_=d[e];l[_[b]]=_[r];e=e+o;_=d[e];l[_[x]]=_[r];e=e+o;_=d[e];n=_[f]l[n]=l[n](t(l,n+o,_[r]))e=e+o;_=d[e];l[_[b]]=a[_[c]];e=e+o;_=d[e];l[_[i]]=_[c];e=e+o;_=d[e];l[_[x]]=_[U];e=e+o;_=d[e];l[_[i]]=_[r];e=e+o;_=d[e];n=_[i]l[n]=l[n](t(l,n+o,_[r]))e=e+o;_=d[e];l[_[i]][l[_[w]]]=l[_[B]];e=e+o;_=d[e];l[_[i]]=a[_[w]];e=e+o;_=d[e];l[_[b]]=_[c];e=e+o;_=d[e];l[_[h]]=_[k];e=e+o;_=d[e];l[_[i]]=_[w];e=e+o;_=d[e];n=_[x]l[n]=l[n](t(l,n+o,_[U]))e=e+o;_=d[e];l[_[x]]=a[_[r]];e=e+o;_=d[e];l[_[O]]=_[w];e=e+o;_=d[e];l[_[b]]=_[c];e=e+o;_=d[e];l[_[i]]=_[M];e=e+o;_=d[e];n=_[x]l[n]=l[n](t(l,n+o,_[r]))e=e+o;_=d[e];l[_[b]]=a[_[U]];e=e+o;_=d[e];l[_[b]]=l[_[M]];e=e+o;_=d[e];n=_[x]l[n]=l[n](l[n+C])e=e+o;_=d[e];l[_[h]]=_[w];e=e+o;_=d[e];N=_[w];D=l[N]for _=N+1,_[s]do D=D..l[_];end;l[_[i]]=D;e=e+o;_=d[e];l[_[O]][l[_[U]]]=l[_[u]];e=e+o;_=d[e];l[_[O]]=a[_[c]];e=e+o;_=d[e];l[_[x]]=_[U];e=e+o;_=d[e];l[_[f]]=_[k];e=e+o;_=d[e];l[_[h]]=_[c];e=e+o;_=d[e];n=_[b]l[n]=l[n](t(l,n+o,_[w]))e=e+o;_=d[e];l[_[f]][l[_[r]]]=_[S];e=e+o;_=d[e];n=_[h];p=l[n];for _=n+1,_[U]do y(p,l[_])end;break end while 1190==(n)/((0xe31-(-0x23+1863)))do local n;l[_[b]]=_[M];e=e+o;_=d[e];l[_[h]]=_[w];e=e+o;_=d[e];l[_[f]]=_[k];e=e+o;_=d[e];n=_[x]l[n]=l[n](t(l,n+o,_[w]))e=e+o;_=d[e];if l[_[x]]then e=e+o;else e=_[r];end;break end;break;end break;end break;end while 1013==(n)/((3290+-0x2d))do n=(1704737)while(0xa4+(-115+0x1e))>=D do n-= n n=(554149)while D<=(0x1fe2/(15476/0x92))do n-= n local C;local m,N;local D;local n;a[_[c]]=l[_[h]];e=e+o;_=d[e];l[_[O]]={};e=e+o;_=d[e];l[_[O]][_[c]]=_[S];e=e+o;_=d[e];l[_[b]][_[M]]=_[v];e=e+o;_=d[e];l[_[h]]=a[_[U]];e=e+o;_=d[e];l[_[h]]=l[_[M]][_[P]];e=e+o;_=d[e];l[_[b]]=_[U];e=e+o;_=d[e];l[_[h]]=_[w];e=e+o;_=d[e];l[_[x]]=_[M];e=e+o;_=d[e];n=_[x]l[n]=l[n](t(l,n+o,_[U]))e=e+o;_=d[e];l[_[i]][_[M]]=l[_[P]];e=e+o;_=d[e];l[_[f]]=a[_[U]];e=e+o;_=d[e];l[_[x]]=l[_[w]][_[s]];e=e+o;_=d[e];l[_[h]]=_[k];e=e+o;_=d[e];l[_[f]]=_[k];e=e+o;_=d[e];l[_[f]]=_[U];e=e+o;_=d[e];n=_[O]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];l[_[i]][_[U]]=l[_[v]];e=e+o;_=d[e];l[_[h]]=a[_[c]];e=e+o;_=d[e];l[_[x]]=l[_[c]][_[P]];e=e+o;_=d[e];l[_[b]]=_[r];e=e+o;_=d[e];l[_[b]]=_[r];e=e+o;_=d[e];l[_[b]]=_[r];e=e+o;_=d[e];n=_[i]l[n]=l[n](t(l,n+o,_[U]))e=e+o;_=d[e];l[_[x]][_[U]]=l[_[P]];e=e+o;_=d[e];l[_[i]]=a[_[r]];e=e+o;_=d[e];l[_[b]]=l[_[M]][_[s]];e=e+o;_=d[e];l[_[b]]=_[k];e=e+o;_=d[e];l[_[i]]=_[c];e=e+o;_=d[e];l[_[b]]=_[k];e=e+o;_=d[e];n=_[i]l[n]=l[n](t(l,n+o,_[w]))e=e+o;_=d[e];l[_[h]][_[k]]=l[_[v]];e=e+o;_=d[e];l[_[h]][_[k]]=_[P];e=e+o;_=d[e];l[_[f]][_[M]]=_[P];e=e+o;_=d[e];l[_[x]][_[k]]=_[S];e=e+o;_=d[e];l[_[f]][_[k]]=_[S];e=e+o;_=d[e];l[_[f]][_[w]]=_[P];e=e+o;_=d[e];l[_[b]][_[M]]=_[B];e=e+o;_=d[e];l[_[f]][_[M]]=_[P];e=e+o;_=d[e];l[_[O]][_[M]]=_[v];e=e+o;_=d[e];l[_[f]][_[k]]=_[u];e=e+o;_=d[e];l[_[f]][_[r]]=_[u];e=e+o;_=d[e];l[_[i]][_[r]]=_[P];e=e+o;_=d[e];l[_[x]]=a[_[c]];e=e+o;_=d[e];l[_[x]]=l[_[c]][_[P]];e=e+o;_=d[e];l[_[x]]=l[_[r]][_[S]];e=e+o;_=d[e];l[_[f]][_[c]]=l[_[S]];e=e+o;_=d[e];l[_[h]]=a[_[c]];e=e+o;_=d[e];l[_[O]]={};e=e+o;_=d[e];l[_[x]]={};e=e+o;_=d[e];l[_[x]][_[w]]=_[u];e=e+o;_=d[e];n=_[O]l[n]=l[n](t(l,n+o,_[r]))e=e+o;_=d[e];l[_[i]][_[w]]=l[_[P]];e=e+o;_=d[e];l[_[h]]={};e=e+o;_=d[e];l[_[b]][_[M]]=l[_[B]];e=e+o;_=d[e];a[_[c]]=l[_[i]];e=e+o;_=d[e];l[_[x]]={};e=e+o;_=d[e];a[_[r]]=l[_[f]];e=e+o;_=d[e];l[_[i]]=a[_[k]];e=e+o;_=d[e];l[_[x]]=l[_[k]][_[P]];e=e+o;_=d[e];a[_[c]]=l[_[x]];e=e+o;_=d[e];l[_[O]]=a[_[r]];e=e+o;_=d[e];n=_[O];D=l[_[U]];l[n+1]=D;l[n]=D[_[B]];e=e+o;_=d[e];l[_[f]]=a[_[U]];e=e+o;_=d[e];l[_[i]]=_[c];e=e+o;_=d[e];l[_[b]]=_[r];e=e+o;_=d[e];l[_[x]]=_[r];e=e+o;_=d[e];n=_[O]m,N=g(l[n](t(l,n+1,_[w])))j=N+n-1 C=0;for _=n,j do C=C+o;l[_]=m[C];end;e=e+o;_=d[e];n=_[O]l[n]=l[n](t(l,n+o,j))e=e+o;_=d[e];a[_[r]]=l[_[O]];e=e+o;_=d[e];l[_[b]]=a[_[U]];e=e+o;_=d[e];n=_[h];D=l[_[k]];l[n+1]=D;l[n]=D[_[S]];e=e+o;_=d[e];l[_[x]]=a[_[r]];e=e+o;_=d[e];l[_[x]]=_[w];e=e+o;_=d[e];l[_[h]]=_[w];e=e+o;_=d[e];l[_[i]]=_[w];e=e+o;_=d[e];n=_[x]l[n]=l[n](t(l,n+o,_[w]))e=e+o;_=d[e];n=_[i]l[n]=l[n](t(l,n+o,_[r]))e=e+o;_=d[e];a[_[U]]=l[_[h]];e=e+o;_=d[e];l[_[i]]={};break;end while 629==(n)/((917+(-14-0x16)))do n=(2587525)while(146+-0x44)<D do n-= n local n;l[_[O]]=a[_[M]];e=e+o;_=d[e];l[_[x]]=a[_[k]];e=e+o;_=d[e];l[_[h]]=_[c];e=e+o;_=d[e];l[_[b]]=_[w];e=e+o;_=d[e];l[_[x]]=_[c];e=e+o;_=d[e];n=_[b]l[n]=l[n](t(l,n+o,_[k]))e=e+o;_=d[e];l[_[f]]=l[_[U]][l[_[P]]];e=e+o;_=d[e];n=_[f]l[n]=l[n](l[n+C])e=e+o;_=d[e];l[_[f]]=l[_[c]];e=e+o;_=d[e];e=_[r];break end while 2407==(n)/((-108+0x49f))do local r;local n;l[_[x]]=a[_[w]];e=e+o;_=d[e];l[_[O]]=_[w];e=e+o;_=d[e];l[_[h]]=_[k];e=e+o;_=d[e];l[_[b]]=_[w];e=e+o;_=d[e];n=_[f]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];l[_[i]]={};e=e+o;_=d[e];l[_[b]]=a[_[w]];e=e+o;_=d[e];l[_[i]]=_[M];e=e+o;_=d[e];l[_[x]]=_[U];e=e+o;_=d[e];l[_[i]]=_[k];e=e+o;_=d[e];n=_[b]l[n]=l[n](t(l,n+o,_[k]))e=e+o;_=d[e];l[_[i]]=a[_[w]];e=e+o;_=d[e];l[_[O]]=l[_[U]][_[v]];e=e+o;_=d[e];n=_[b]l[n]=l[n]()e=e+o;_=d[e];l[_[h]][l[_[k]]]=l[_[B]];e=e+o;_=d[e];l[_[i]][l[_[w]]]=l[_[S]];e=e+o;_=d[e];n=_[O];r=l[n];for _=n+1,_[U]do y(r,l[_])end;break end;break;end break;end while 1577==(n)/((0x8eb-1202))do n=(1518703)while(0xec-156)>=D do n-= n local n;l[_[x]]=_[c];e=e+o;_=d[e];n=_[b]l[n]=l[n](t(l,n+o,_[U]))e=e+o;_=d[e];l[_[b]]=a[_[r]];e=e+o;_=d[e];l[_[b]]=_[r];e=e+o;_=d[e];l[_[i]]=_[w];e=e+o;_=d[e];l[_[i]]=_[r];e=e+o;_=d[e];n=_[f]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];l[_[h]]=a[_[c]];e=e+o;_=d[e];l[_[i]]=_[r];e=e+o;_=d[e];l[_[f]]=_[k];break;end while(n)/((0x5cb-(0x1539c/115)))==2089 do n=(6602586)while D>(0xcd-124)do n-= n local x;local n;l[_[b]]=a[_[r]];e=e+o;_=d[e];l[_[i]]=_[w];e=e+o;_=d[e];l[_[f]]=_[M];e=e+o;_=d[e];l[_[b]]=_[U];e=e+o;_=d[e];n=_[h]l[n]=l[n](t(l,n+o,_[U]))e=e+o;_=d[e];n=_[h];x=l[n];for _=n+1,_[k]do y(x,l[_])end;break end while(n)/(((0x29e2eb8/84)/0x91))==1831 do local x;local n;l[_[f]]=a[_[r]];e=e+o;_=d[e];l[_[h]]=a[_[M]];e=e+o;_=d[e];l[_[b]]=_[c];e=e+o;_=d[e];l[_[f]]=_[k];e=e+o;_=d[e];l[_[h]]=_[c];e=e+o;_=d[e];n=_[b]l[n]=l[n](t(l,n+o,_[M]))e=e+o;_=d[e];l[_[i]]=l[_[w]][l[_[B]]];e=e+o;_=d[e];n=_[h]l[n]=l[n](l[n+C])e=e+o;_=d[e];x=l[_[S]];if not x then e=e+C;else l[_[f]]=x;e=_[M];end;break end;break;end break;end break;end break;end while 853==(n)/((0x1245c/27))do n=(186084)while D<=(-0x3e+150)do n-= n n=(1207710)while D<=((26051-0x32f6)/153)do n-= n n=(7319488)while(233-0x96)>=D do n-= n local x;local n;n=_[b];x=l[_[U]];l[n+1]=x;l[n]=x[_[P]];e=e+o;_=d[e];l[_[h]]=_[r];e=e+o;_=d[e];n=_[b]l[n]=l[n](t(l,n+o,_[U]))e=e+o;_=d[e];l[_[b]]=_[M];e=e+o;_=d[e];l[_[i]]=l[_[k]][l[_[v]]];e=e+o;_=d[e];l[_[O]]=_[c];e=e+o;_=d[e];n=_[f];x=l[_[c]];l[n+1]=x;l[n]=x[l[_[P]]];e=e+o;_=d[e];l[_[b]]=a[_[w]];e=e+o;_=d[e];l[_[f]]=_[M];e=e+o;_=d[e];l[_[b]]=_[c];break;end while(n)/((0x199d-3301))==2248 do n=(7238770)while D>(-95+0xb3)do n-= n local n;n=_[O]l[n]=l[n](t(l,n+o,_[M]))e=e+o;_=d[e];n=_[O]l[n](t(l,n+C,_[k]))e=e+o;_=d[e];l[_[h]]=a[_[U]];e=e+o;_=d[e];l[_[i]]=a[_[r]];e=e+o;_=d[e];l[_[O]]=_[w];e=e+o;_=d[e];l[_[i]]=_[U];e=e+o;_=d[e];l[_[b]]=_[r];e=e+o;_=d[e];n=_[O]l[n]=l[n](t(l,n+o,_[k]))e=e+o;_=d[e];n=_[h]l[n](l[n+C])e=e+o;_=d[e];l[_[i]]=a[_[c]];break end while(n)/((0x7a5+-87))==3871 do a[_[r]]=l[_[b]];e=e+o;_=d[e];l[_[b]]={};e=e+o;_=d[e];l[_[b]]={};e=e+o;_=d[e];a[_[U]]=l[_[O]];e=e+o;_=d[e];l[_[b]]=a[_[k]];e=e+o;_=d[e];if(l[_[O]]~=_[P])then e=e+C;else e=_[r];end;break end;break;end break;end while(n)/((0x55c-742))==1917 do n=(9651750)while(-0x1f+(294-0xb1))>=D do n-= n local n;n=_[i]l[n]=l[n](t(l,n+o,_[U]))e=e+o;_=d[e];l[_[x]]=a[_[k]];e=e+o;_=d[e];l[_[O]]=_[w];e=e+o;_=d[e];l[_[x]]=_[c];e=e+o;_=d[e];l[_[b]]=_[r];e=e+o;_=d[e];n=_[x]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];l[_[b]]=a[_[r]];e=e+o;_=d[e];l[_[x]]=_[U];e=e+o;_=d[e];l[_[f]]=_[r];e=e+o;_=d[e];l[_[i]]=_[r];break;end while(n)/((2649+-0x63))==3785 do n=(3338430)while(0x112-187)<D do n-= n local r;local n;l[_[b]]=(_[c]~=0);e=e+o;_=d[e];l[_[x]]=l[_[c]];e=e+o;_=d[e];l[_[f]]=a[_[c]];e=e+o;_=d[e];n=_[x]l[n]=l[n](l[n+C])e=e+o;_=d[e];r=l[_[v]];if not r then e=e+C;else l[_[x]]=r;e=_[M];end;break end while 1285==(n)/((267594/0x67))do local h;local n;l[_[b]]=_[c];e=e+o;_=d[e];n=_[i];h=l[_[M]];l[n+1]=h;l[n]=h[l[_[P]]];e=e+o;_=d[e];n=_[x]l[n](l[n+C])e=e+o;_=d[e];l[_[f]]=a[_[r]];e=e+o;_=d[e];l[_[b]]=_[r];e=e+o;_=d[e];n=_[i]l[n](l[n+C])e=e+o;_=d[e];e=_[U];break end;break;end break;end break;end while 108==(n)/((3519-0x704))do n=(2672950)while(0x5606/242)>=D do n-= n n=(8797160)while(-0x1b+116)>=D do n-= n local n;n=_[O]l[n]=l[n]()e=e+o;_=d[e];a[_[r]]=l[_[O]];e=e+o;_=d[e];l[_[x]]=a[_[k]];e=e+o;_=d[e];l[_[b]]=l[_[c]][_[v]];e=e+o;_=d[e];l[_[O]]=(_[M]~=0);e=e+o;_=d[e];a[_[U]]=l[_[i]];e=e+o;_=d[e];a[_[U]]=l[_[f]];break;end while 3044==(n)/(((0x3b49b-121463)/0x2a))do n=(2982897)while D>(5940/0x42)do n-= n local M;local N,C;local D;local n;a[_[k]]=l[_[b]];e=e+o;_=d[e];l[_[f]]=a[_[w]];e=e+o;_=d[e];l[_[O]]=a[_[c]];e=e+o;_=d[e];n=_[b];D=l[_[r]];l[n+1]=D;l[n]=D[_[B]];e=e+o;_=d[e];l[_[x]]=a[_[w]];e=e+o;_=d[e];l[_[h]]=_[U];e=e+o;_=d[e];l[_[i]]=_[r];e=e+o;_=d[e];l[_[b]]=_[U];e=e+o;_=d[e];n=_[O]l[n]=l[n](t(l,n+o,_[k]))e=e+o;_=d[e];n=_[x]N,C=g(l[n](t(l,n+1,_[U])))j=C+n-1 M=0;for _=n,j do M=M+o;l[_]=N[M];end;break end while 1223==(n)/((0x17391/39))do local D;local n;l[_[b]]=a[_[U]];e=e+o;_=d[e];l[_[x]]=a[_[c]];e=e+o;_=d[e];l[_[f]]=_[k];e=e+o;_=d[e];l[_[i]]=_[k];e=e+o;_=d[e];l[_[f]]=_[w];e=e+o;_=d[e];n=_[h]l[n]=l[n](t(l,n+o,_[r]))e=e+o;_=d[e];l[_[O]]=l[_[w]][l[_[P]]];e=e+o;_=d[e];n=_[i]l[n]=l[n](l[n+C])e=e+o;_=d[e];D=l[_[P]];if not D then e=e+C;else l[_[x]]=D;e=_[M];end;break end;break;end break;end while 2182==(n)/((13475/0xb))do n=(9870653)while D<=(11316/0x7b)do n-= n local w;local n;l[_[h]]=a[_[r]];e=e+o;_=d[e];l[_[O]]=a[_[k]];e=e+o;_=d[e];l[_[b]]=_[r];e=e+o;_=d[e];l[_[b]]=_[k];e=e+o;_=d[e];l[_[f]]=_[r];e=e+o;_=d[e];n=_[x]l[n]=l[n](t(l,n+o,_[c]))e=e+o;_=d[e];l[_[f]]=l[_[U]][l[_[s]]];e=e+o;_=d[e];n=_[h]l[n]=l[n](l[n+C])e=e+o;_=d[e];w=l[_[S]];if not w then e=e+C;else l[_[i]]=w;e=_[k];end;break;end while 3419==(n)/((0xb6d+-38))do n=(4758348)while(0x11d-192)<D do n-= n local n;local x;l[_[O]]=a[_[w]];e=e+o;_=d[e];l[_[b]]=_[M];e=e+o;_=d[e];l[_[f]]=_[U];e=e+o;_=d[e];x=_[k];n=l[x]for _=x+1,_[P]do n=n..l[_];end;l[_[b]]=n;e=e+o;_=d[e];if not l[_[O]]then e=e+C;else e=_[w];end;break end while 1531==(n)/((3171+-0x3f))do a[_[M]]=l[_[h]];e=e+o;_=d[e];for _=_[x],_[M]do l[_]=nil;end;e=e+o;_=d[e];a[_[w]]=l[_[h]];e=e+o;_=d[e];for _=_[x],_[w]do l[_]=nil;end;e=e+o;_=d[e];a[_[U]]=l[_[x]];e=e+o;_=d[e];l[_[h]]=a[_[k]];e=e+o;_=d[e];l[_[h]]=_[r];e=e+o;_=d[e];l[_[b]]=l[_[r]][l[_[v]]];e=e+o;_=d[e];if l[_[O]]then e=e+o;else e=_[M];end;break end;break;end break;end break;end break;end break;end break;end e+= C end;end);end;return L(J(),{},R())()end)_msec({[(348-0xb8)]='\115\116'..(function(_)return(_ and'(0x125-193)')or'\114\105'or'\120\58'end)(((-127+0xe7)-99)==((322-0xb8)/23))..'\110g',[(1460-(0x1acf8/148))]='\108\100'..(function(_)return(_ and'(-0x23+135)')or'\101\120'or'\119\111'end)((109+-0x68)==(0x81-123))..'\112',[(54205/0xb9)]=(function(_)return(_ and'(0x1004/41)')and'\98\121'or'\100\120'end)((-0x16+27)==((-0x32+-52)+0x6b))..'\116\101',[(414+-0x68)]='\99'..(function(_)return(_ and'(222-0x7a)')and'\90\19\157'or'\104\97'end)((-0x5b+96)==(72+-0x45))..'\114',[(-65+0x272)]='\116\97'..(function(_)return(_ and'(-0x38+156)')and'\64\113'or'\98\108'end)((6/0x1)==(-53+0x3a))..'\101',[(0x1f3+-49)]=(function(_)return(_ and'(17700/0xb1)')or'\115\117'or'\78\107'end)(((0xf372/221)/0x5e)==((23580/0xb4)+-0x64))..'\98',[(206954/0xfd)]='\99\111'..(function(_)return(_ and'(0x12d-201)')and'\110\99'or'\110\105\103\97'end)((0x1c56/(540-0x132))==(0x75+-86))..'\97\116',[(-0x5c+747)]=(function(_,e)return(_ and'(319-0xdb)')and'\48\159\158\188\10'or'\109\97'end)((48-0x2b)==(0x28e/109))..'\116\104',[(0x192aa/74)]=(function(e,_)return((-36+(0x35d/21))==(0x16+-19)and'\48'..'\195'or e..((not'\20\95\69'and'\90'..'\180'or _)))or'\199\203\95'end),[(-77+(0x145d4/84))]='\105\110'..(function(_,e)return(_ and'(-51+0x97)')and'\90\115\138\115\15'or'\115\101'end)((123-0x76)==(128+-0x61))..'\114\116',[(0x8b9-1148)]='\117\110'..(function(_,e)return(_ and'(183+-0x53)')or'\112\97'or'\20\38\154'end)((0x4d+-72)==(-0x6d+140))..'\99\107',[(217930/0xbe)]='\115\101'..(function(_)return(_ and'(0x5dc/15)')and'\110\112\99\104'or'\108\101'end)((0x299/133)==(93/0x3))..'\99\116',[(0xa04-1297)]='\116\111\110'..(function(_,e)return(_ and'((425-0xe7)+-94)')and'\117\109\98'or'\100\97\120\122'end)((-125+0x82)==(215/0x2b))..'\101\114'},{[(140+-0x6f)]=((getfenv))},((getfenv))()) end)()




local function GetNearestTarget()
    local PLAYER_HOLD = {}
    local DISTANCES = {}
    for i, v in pairs(game:GetService("Players"):GetPlayers()) do
        if v ~= Client and v.Character and v.Character:FindFirstChild(Aimbot.HitPart) and v.Stats.Health.Value > 0 then
            local AIM = v.Character["Head"] or v.Character["HumanoidRootPart"]
            local DISTANCE = (AIM.Position - Camera.CFrame.Position).magnitude
            local RAY = Ray.new(Camera.CFrame.Position, (Mouse.Hit.Position - Camera.CFrame.Position).unit * DISTANCE)
            local HIT,POS = game:GetService("Workspace"):FindPartOnRay(RAY, game:GetService("Workspace"))
            local DIFF = math.floor((POS - AIM.Position).magnitude)
            PLAYER_HOLD[v.Name .. i] = {}
            PLAYER_HOLD[v.Name .. i].dist = DISTANCE
            PLAYER_HOLD[v.Name .. i].Client = v
            PLAYER_HOLD[v.Name .. i].diff = DIFF
            table.insert(DISTANCES, DIFF)
        end
    end

    local L_DISTANCE = math.floor(math.min(unpack(DISTANCES)))
    if unpack(DISTANCES) == nil or (L_DISTANCE > Aimbot.AimRadius) then
        return nil
    end
    
    for i, v in pairs(PLAYER_HOLD) do
        if v.diff == L_DISTANCE then
            return v.Client
        end
    end
end

local function DrawDrop(drop, typp, name)
    
    local DropText = Drawing.new("Text")
    DropText.Visible = false
    DropText.Center = true
    DropText.Outline = true
    DropText.Font = 2
    DropText.Size = 13
    DropText.Color = Color3.new(1, 1, 1)
    DropText.Text = drop.Name or ""

    local DistText = Drawing.new("Text")
    DistText.Visible = false
    DistText.Center = true
    DistText.Outline = true
    DistText.Font = 2
    DistText.Size = 13
    DistText.Color = Color3.new(1, 1, 1)
    DistText.Text = "Dist"

    if typp == "Heli" then
        local function UPDATER()
            local c
            c = game:GetService("RunService").Heartbeat:Connect(function()
                pcall(function()
                    if not library and c then
                        c:Disconnect()
                        c = nil
                        
                        DropText:Destroy()
                        DistText:Destroy()
    
                        DropText = nil
                        DistText = nil
                    end
                    if drop.PrimaryPart and library.flags["HeliCrashEnabled"] then
                        
                        local dropvector, onscreen = Camera:WorldToViewportPoint(drop.PrimaryPart.Position)
        
                        if onscreen then
                            DropText.Position = Vector2.new(dropvector.X, dropvector.Y)
                            DropText.Visible = true
                            DropText.Color = library.flags["Helis Color"] or Color3.fromRGB(255, 255, 255)
    
                            DistText.Position = Vector2.new(dropvector.X, dropvector.Y + 14)
                            DistText.Visible = true
                            DistText.Text = math.floor((Camera.CFrame.Position - drop.PrimaryPart.Position).magnitude) .."Studs"
                            DistText.Color = library.flags["Helis Color"] or Color3.fromRGB(255, 255, 255)
                        else
                            DropText.Visible = false
                            DistText.Visible = false
                        end
        
                    else
        
                        DropText.Visible = false
                        DistText.Visible = false
                        
                        if c then
                            c:Disconnect()
                            c = nil
                        end
                    
                    end
                end)
            end)
        end
        coroutine.wrap(UPDATER)()
    elseif typp == "Loot" then
        local function UPDATER()
            local c
            c = game:GetService("RunService").Heartbeat:Connect(function()
                local s,e = pcall(function()
                    if not library and c then
                        c:Disconnect()
                        c = nil
                        
                        DropText:Destroy()
                        DistText:Destroy()
    
                        DropText = nil
                        DistText = nil
                    end

                    if drop.PrimaryPart and library.flags[name .. " Loot Enabled"] then

                        local Distance = (Camera.CFrame.p - drop.PrimaryPart.Position).Magnitude

                        if Distance > library.flags["Loot Max Distance"] then

                            DropText.Visible = false
                            DistText.Visible = false

                        else
                        
                            local dropvector, onscreen = Camera:WorldToViewportPoint(drop.PrimaryPart.Position)
            
                            if onscreen then
                                DropText.Position = Vector2.new(dropvector.X, dropvector.Y)
                                DropText.Visible = true
                                DropText.Color = library.flags[name .. " Loot Color"] or Color3.fromRGB(255, 255, 255)
        
                                DistText.Position = Vector2.new(dropvector.X, dropvector.Y + 14)
                                DistText.Visible = true
                                DistText.Text = math.floor((Camera.CFrame.Position - drop.PrimaryPart.Position).magnitude) .."Studs"
                                DistText.Color = library.flags[name .. " Loot Color"] or Color3.fromRGB(255, 255, 255)
                            else
                                DropText.Visible = false
                                DistText.Visible = false
                            end

                        end
        
                    else
        
                        DropText.Visible = false
                        DistText.Visible = false
                        
                        if c then
                            c:Disconnect()
                            c = nil
                        end
                    
                    end
                end)

                if not s then
                    warn(e)
                end
            end)
        end
        coroutine.wrap(UPDATER)()
    else
        local function UPDATER()
            local c
            c = game:GetService("RunService").Heartbeat:Connect(function()
                pcall(function()
                    if not library and c then
                        c:Disconnect()
                        c = nil
                        
                        DropText:Destroy()
                        DistText:Destroy()
    
                        DropText = nil
                        DistText = nil
                    end
                    if drop.PrimaryPart and library.flags["VehiclesEnabled"] then

                        local Distance = (Camera.CFrame.p - drop.PrimaryPart.Position).Magnitude

                        if Distance > library.flags["Vehicles Max Distance"] then

                            DropText.Visible = false
                            DistText.Visible = false

                        else
                        
                            local dropvector, onscreen = Camera:WorldToViewportPoint(drop.PrimaryPart.Position)
            
                            if onscreen then
                                DropText.Position = Vector2.new(dropvector.X, dropvector.Y)
                                DropText.Visible = true
                                DropText.Color = library.flags["Vehicles Color"] or Color3.fromRGB(255, 255, 255)
        
                                DistText.Position = Vector2.new(dropvector.X, dropvector.Y + 14)
                                DistText.Visible = true
                                DistText.Text = math.floor((Camera.CFrame.Position - drop.PrimaryPart.Position).magnitude) .."Studs"
                                DistText.Color = library.flags["Vehicles Color"] or Color3.fromRGB(255, 255, 255)
                            else
                                DropText.Visible = false
                                DistText.Visible = false
                            end

                        end
        
                    else
        
                        DropText.Visible = false
                        DistText.Visible = false
                        
                        if c then
                            c:Disconnect()
                            c = nil
                        end
                    
                    end
                end)
            end)
        end
        coroutine.wrap(UPDATER)()
    end
end

local Old_new
Old_new = hookmetamethod(game, "__newindex", function(t, i, v)
	if checkcaller() or not library then
		return Old_new(t, i, v)
	end

	if t == Camera then
		if i == "CFrame" then
            local s, e = pcall(function()
                if AimlockTarget and AimlockTarget.Character and AimlockTarget:FindFirstChild("Stats") and AimlockTarget.Character:FindFirstChild(Aimbot.HitPart) and AimlockTarget.Stats.Health.Value > 0 then
                    v = CFrame.new(v.Position, AimlockTarget.Character[Aimbot.HitPart].Position)
                end
            end)

            if not s then
                ErrorCapture(e)
            end
		end
	end

	return Old_new(t, i, v)
end)

local Old_index
Old_index = hookmetamethod(game, "__index", function(t, i)
	if checkcaller() or not library then
		return Old_index(t, i)
	end

	if t == Camera then
		if i == "CFrame" then
			local s, e = pcall(function()
                if AimlockTarget and AimlockTarget.Character and AimlockTarget:FindFirstChild("Stats") and AimlockTarget.Character:FindFirstChild(Aimbot.HitPart) and AimlockTarget.Stats.Health.Value > 0 then
                    return CFrame.new(Old_index(t, i).Position, AimlockTarget.Character[Aimbot.HitPart].Position)
                end
            end)

            if not s then
                ErrorCapture(e)
            end
		end
	end

	return Old_index(t, i)
end)

-- [Legit Tab UI] ------------------------------------------------------------------------------------------------------------------------------------------------------------
-- local LegitTab = library:AddTab("Legit"); 
-- local LegitColunm1 = LegitTab:AddColumn();
-- local LegitMain = LegitColunm1:AddSection("Aim Assist")

local xd = false

local function RunTriggerbot(model)
	local s, e = pcall(function()

        local part = game:GetService("Workspace").CurrentCamera

        local origin = part.CFrame.Position
        local direction = part.CFrame.LookVector * 1000
    
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
        raycastParams.IgnoreWater = true
        raycastParams.FilterDescendantsInstances = {part, Client.Character}
    
        local raycastResult = game:GetService("Workspace"):Raycast(origin, direction, raycastParams)
    
        if raycastResult and raycastResult.Instance then
            if not xd and AimlockTarget and AimlockTarget.Character and (raycastResult.Instance:IsDescendantOf(AimlockTarget.Character) or raycastResult.Instance:IsDescendantOf(AimlockTarget)) and AimlockTarget.Stats.Health.Value > 0 and AimlockTarget.Character.Stats.Health.Base.Value > 0 then
                coroutine.resume(coroutine.create(function()
                    xd = true
                    wait(library.flags["Trigger CoolDown"])
                    xd = false
                end))
                VirtualInputManager:SendMouseButtonEvent(Mouse.X, Mouse.Y, 0, true, game, 1)
                wait()
                VirtualInputManager:SendMouseButtonEvent(Mouse.X, Mouse.Y, 0, false, game, 1)
            end
        end
    end)

    if not s then
        ErrorCapture(e)
    end
end

-- LegitMain:AddSlider{text = "Aimbot FOV", flag = "AimbotFov", min = 0, max = 750, value = 105, suffix = "°"}
-- LegitMain:AddSlider{text = "Smoothing Factor", flag = "Smoothing", min = 0, max = 30, value = 3, suffix = "%"}
-- LegitMain:AddList({text = "Hit Box", flag = "AimbotHitbox", value = "Head", values = {"Head", "Torso"}});
-- LegitMain:AddList({text = "Aimbot Key", flag = "AimbotKey", value = "On Aim", values = {"On Aim", "On Shoot"}});
-- LegitMain:AddDivider("Draw Fov");
-- LegitMain:AddToggle{text = "Enabled", flag = "CircleEnabled"}:AddColor({flag = "CircleColor", color = Color3.new(1, 1, 1)});
-- LegitMain:AddSlider{text = "Num Sides", flag = "CircleNumSides", min = 3, max = 48, value = 48, suffix = "°"}

-- local LegitSecond = LegitColunm1:AddSection("Extend Hitbox")
-- LegitSecond:AddDivider("Main");
-- LegitSecond:AddToggle{text = "Enabled", flag = "HitboxEnabled"}
-- LegitSecond:AddList({text = "Hit Box", flag = "ExtendHitbox", value = "Head", values = {"Head", "Torso"}});
-- LegitSecond:AddSlider{text = "Extend Rate", flag = "ExtendRate", min = 0, max = 10, value = 10, suffix = "%"}

-- local LegitThird = LegitColunm1:AddSection("Trigger Bot")
-- LegitThird:AddDivider("Main");
-- LegitThird:AddToggle{text = "Enabled", flag = "TriggerEnabled"}:AddBind({flag = "TriggerBind", key = "One"});
-- LegitThird:AddSlider{text = "Trigger Speed", flag = "TriggerSpeed", min = 0, max = 1000, value = 10, suffix = "%"}

-- local LegitColunm2 = LegitTab:AddColumn();
-- local LegitForth = LegitColunm2:AddSection("Bullet Redirection")
-- LegitForth:AddDivider("Main");
-- LegitForth:AddToggle{text = "Enabled", flag = "SilentAimEnabled"}
-- LegitForth:AddSlider{text = "Silent Aim FOV", flag = "SilentAimFOV", min = 0, max = 750, value = 105, suffix = "°"}
-- LegitForth:AddSlider{text = "Hit Chances", flag = "HitChances", min = 0, max = 100, value = 100, suffix = "%"}
-- LegitForth:AddList({text = "Redirection Mode", flag = "RedirectionMode", value = "P Mode", values = {"P Mode", "Normal Mode"}});
-- LegitForth:AddList({text = "Hit Box", flag = "SilentAimHitbox", value = "Head", values = {"Head", "Torso"}});
-- LegitForth:AddDivider("Draw Fov");
-- LegitForth:AddToggle{text = "Enabled", flag = "Circle2Enabled"}:AddColor({flag = "Circle2Color", color = Color3.new(1, 1, 1)});
-- LegitForth:AddSlider{text = "Num Sides", flag = "Circle2NumSides", min = 3, max = 48, value = 48, suffix = "°"}
-- LegitForth:AddDivider("Checks");
-- LegitForth:AddToggle{text = "Enabled", flag = "VisibleCheck"}

-- local LegitFifth = LegitColunm2:AddSection("Recoil Control")
-- LegitFifth:AddDivider("Main");
-- LegitFifth:AddToggle{text = "Enabled", flag = "RecoilControlEnabled"}
-- LegitFifth:AddSlider{text = "Model Kick", flag = "ModelKick", min = 5, max = 100, value = 100, suffix = "%"}
-- LegitFifth:AddSlider{text = "Camera Kick", flag = "CameraKick", min = 5, max = 100, value = 100, suffix = "%"}

-- [Rage Tab UI] ------------------------------------------------------------------------------------------------------------------------------------------------------------
local RageTab = library:AddTab("Main"); 
local RageColunm1 = RageTab:AddColumn();
local RageMain = RageColunm1:AddSection("Main Rage")

RageMain:AddDivider("Aimbot");

RageMain:AddToggle{
    text = "Enabled",
    flag = "AimbotEnabled",
    callback = function(State)
        SNot(1, "Aimbot is " .. tostring(library.flags["AimbotEnabled"]))
        if not State then
            return
        end


        library:AddConnection(runService.RenderStepped, "Aimbot", function()
            if library and library.flags["AimbotEnabled"] then
                if library.flags["Aimbot Type"] ~= "Near Mouse to Aimbot" then return end
                pcall(function()
                    if not Aimbot.On then
                        local Target = GetNearestTarget()
                        if Target and not Aimbot.On then
                            Aimbot.On = true
                            AimlockTarget = Target
                            SNot(3, "Target: " .. tostring(AimlockTarget))
                        end
                    end
                    if Aimbot.On and AimlockTarget and AimlockTarget.Character and AimlockTarget.Character.Humanoid and AimlockTarget.Character:FindFirstChild(Aimbot.HitPart) and AimlockTarget.Stats.Health.Value > 0 then
                        if Aimbot.PredictionVelocity == 100 then
                            Camera = CFrame.new(Camera.Position, AimlockTarget.Character[Aimbot.HitPart].Position + Vector3.new(0, Aimbot.Height, 0))
                        elseif not Aimbot.Random then
                            Camera = CFrame.new(Camera.Position, AimlockTarget.Character[Aimbot.HitPart].Position + Vector3.new(0, Aimbot.Height, 0) + AimlockTarget.Character[Aimbot.HitPart].Velocity/Aimbot.PredictionVelocity)
                        elseif not RandomCool then
                            r = Aimbot.Hits[math.random(1, #Aimbot.Hits)]
                            if AimlockTarget.Character:FindFirstChild(r) then
                                RandomCool = true
                                wait(0.5)
                                RandomCool = false
                            end
                        else
                            Camera = CFrame.new(Camera.Position, AimlockTarget.Character[r].Position + Vector3.new(0, Aimbot.Height, 0) + AimlockTarget.Character[Aimbot.HitPart].Velocity/Aimbot.PredictionVelocity)
                        end
                    else
                        Aimbot.On = false
                        AimlockTarget = nil
                        Aimbot.On = false
                    end
                end)
            else
                library.connections["Aimbot"]:Disconnect()

                Aimbot.On = false
                AimlockTarget = nil
                Aimbot.On = false
            end
        end)

        library:AddConnection(inputService.InputBegan, "AimbotIB", function(Key)
            if library.flags["AimbotEnabled"] then
                if library.flags["Aimbot Type"] == "Near Mouse to Aimbot" then return end
                if not (inputService:GetFocusedTextBox()) then 
                    if Key.UserInputType == Enum.UserInputType.MouseButton2 then 
                        pcall(function()
                            MousePressed = true
                            local Target = GetNearestTarget()
                            if Target ~= nil then 
                                AimlockTarget = Target
                                SNot(3, "Target: " .. tostring(AimlockTarget))
                            end
                        end)
                    end
                end
            else
                library.connections["AimbotIB"]:Disconnect()
            end
        end)
        
        library:AddConnection(inputService.InputEnded, "AimbotIE", function(Key)
            if library.flags["AimbotEnabled"] then
                if library.flags["Aimbot Type"] == "Near Mouse to Aimbot" then return end
                if not (inputService:GetFocusedTextBox()) then 
                    if Key.UserInputType == Enum.UserInputType.MouseButton2 then 
                        AimlockTarget = nil
                        MousePressed = false 
                    end
                end
            else
                library.connections["AimbotIE"]:Disconnect()
            end
        end)

        library:AddConnection(runService.RenderStepped, "Aimbot", function()
            if library and library.flags["AimbotEnabled"] then
                if library.flags["Aimbot Type"] == "Near Mouse to Aimbot" then return end
                pcall(function()
                    if not Aimbot.On then
                        local Target = GetNearestTarget()
                        if Target and not Aimbot.On and not AimlockTarget then
                            Aimbot.On = true
                            AimlockTarget = Target
                            SNot(3, "Target: " .. tostring(AimlockTarget))
                        end
                    end
                    if Aimbot.On and MousePressed and AimlockTarget and AimlockTarget.Character and AimlockTarget.Character.Humanoid and AimlockTarget.Character:FindFirstChild(Aimbot.HitPart) and AimlockTarget.Stats.Health.Value > 0 then
                        if Aimbot.PredictionVelocity == 100 then
                            Camera = CFrame.new(Camera.Position, AimlockTarget.Character[Aimbot.HitPart].Position + Vector3.new(0, Aimbot.Height, 0))
                        elseif not Aimbot.Random then
                            Camera = CFrame.new(Camera.Position, AimlockTarget.Character[Aimbot.HitPart].Position + Vector3.new(0, Aimbot.Height, 0) + AimlockTarget.Character[Aimbot.HitPart].Velocity/Aimbot.PredictionVelocity)
                        elseif not RandomCool then
                            r = Aimbot.Hits[math.random(1, #Aimbot.Hits)]
                            if AimlockTarget.Character:FindFirstChild(r) then
                                RandomCool = true
                                wait(0.5)
                                RandomCool = false
                            end
                        else
                            Camera = CFrame.new(Camera.Position, AimlockTarget.Character[r].Position + Vector3.new(0, Aimbot.Height, 0) + AimlockTarget.Character[Aimbot.HitPart].Velocity/Aimbot.PredictionVelocity)
                        end
                    else
                        Aimbot.On = false
                        AimlockTarget = nil
                        Aimbot.On = false
                    end
                end)
            else
                library.connections["Aimbot"]:Disconnect()

                Aimbot.On = false
                AimlockTarget = nil
                Aimbot.On = false

                MousePressed = false
            end
        end)
    end
}:AddBind{
    flag = "AimbotBind",
    key = "None",
	callback = function()
		library.options["AimbotEnabled"]:SetState(not library.flags["AimbotEnabled"])
	end
}

RageMain:AddList{
    text = "Hit Part",
    flag = "Aimbot Hit Part",
    value = "Head",
    values = {"Head", "UpperTorso", "LowerTorso", "LeftFoot", "LeftLowerLeg", "LeftUpperLeg", "RightFoot", "RightLowerLeg", "RightUpperLeg", "LeftHand", "LeftLowerArm", "LeftLowerArm", "RightHand", "RightLowerArm", "RightLowerArm", "RightUpperArm", "RootPart", "Unknown"},
    callback = function(Value)
        Aimbot.HitPart = Value
    end
}

RageMain:AddList{
    text = "Aimbot Type",
    flag = "Aimbot Type",
    value = "Mouse2 to Aimbot",
    values = {"Mouse2 to Aimbot", "Near Mouse to Aimbot"}
}

RageMain:AddToggle{
    text = "Trigger Bot",
    flag = "TriggerBotEnabled",
    callback = function(State)
        if not State then
            return
        end

        library:AddConnection(runService.Heartbeat, "Aimbot Trigger", function()
		if not library then library.connections["Aimbot Trigger"]:Disconnect() end
            if library.open then
                return
            end

            if not library.flags["AimbotEnabled"] then
                return
            end

            if library.flags["TriggerBotEnabled"] then
                if not AimlockTarget or xd then return end
                RunTriggerbot()
            else
                library.connections["Aimbot Trigger"]:Disconnect()
            end
        end)
    end
}

RageMain:AddSlider{
    text = "Trigger CoolDown",
    flag = "Trigger CoolDown",
    min = 0,
    max = 1,
    value = 0.15,
    float = 0.1
}

RageMain:AddDivider("Human Modifications");

RageMain:AddToggle{
    text = "No Clip",
    flag = "NoClipEnabled",
    callback = function(State)
        SNot(nil, "No Clip is " .. tostring(library.flags["NoClipEnabled"]))
        if not State then
            return
        end

        library:AddConnection(runService.Heartbeat, "NoClip", function()
            -- if library and library.flags["NoClipEnabled"] then
            --     if game:GetService("Players").LocalPlayer.Character then
            --         for _, selfChar in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
            --             if selfChar:IsA("BasePart") and selfChar.CanCollide == true and selfChar.Name then
            --                 selfChar.CanCollide = false
            --             end
            --         end
            --     end
            -- else
            --    library.connections["NoClip"]:Disconnect()
            -- end

            if library and library.flags["NoClipEnabled"] then
                local Char = Players[Client].Character
                Char = Char and FFCoC(Char, "Humanoid")
                if Char then
                    for _, child in pairs(Char.Parent:GetDescendants()) do
                        if child:IsA("BasePart") or child:IsA("Part") or child:IsA("MeshPart") and child.CanCollide == true then
                            child.CanCollide = false
                        end
                    end
                end
            else
                library.connections["NoClip"]:Disconnect()

                local Char = Players[Client].Character
                Char = Char and FFCoC(Char, "Humanoid")
                if Char then
                    for _, child in pairs(Char.Parent:GetDescendants()) do
                        if child:IsA("BasePart") or child:IsA("Part") or child:IsA("MeshPart") then
                            child.CanCollide = true
                        end
                    end
                end
            end
        end)
    end
}:AddBind{
    flag = "NoClipBind",
    key = "None",
	callback = function()
		library.options["NoClipEnabled"]:SetState(not library.flags["NoClipEnabled"])
	end
}

RageMain:AddToggle{
    text = "TP Walk",
    flag = "TPWalkEnabled",
    callback = function(State)
        SNot(nil, "TP Walk is " .. tostring(library.flags["TPWalkEnabled"]))
        if not State then
            return
        end

        library:AddConnection(runService.Heartbeat, "TPWalk", function()
            if library and library.flags["TPWalkEnabled"] then
                if game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character.Humanoid and game:GetService("Players").LocalPlayer.Character.Humanoid.Parent then
                    if game:GetService("Players").LocalPlayer.Character.Humanoid.MoveDirection.Magnitude > 0 then
                        game:GetService("Players").LocalPlayer.Character:TranslateBy(game:GetService("Players").LocalPlayer.Character.Humanoid.MoveDirection * library.flags["TPSpeed"] / 10)
                    end
                end
            else
                library.connections["TPWalk"]:Disconnect()
            end
        end)

        -- library:AddConnection(runService.RenderStepped, "TPBypass", function()
        --     if library.flags["TPWalkEnabled"] then
        --         for _, v in pairs(getconnections(game:GetService("UserInputService").WindowFocused)) do
        --             v:Disable()
        --         end
            
        --         for _, v in pairs(getconnections(game:GetService("UserInputService").WindowFocusReleased)) do
        --             v:Disable()
        --         end
        --     else
        --         library.connections["TPBypass"]:Disconnect()
        --     end
        -- end)
    end
}:AddBind{
    flag = "TPWalkBind",
    key = "None",
	callback = function()
		library.options["TPWalkEnabled"]:SetState(not library.flags["TPWalkEnabled"])
	end
}

RageMain:AddSlider{
    text = "TP Speed",
    flag = "TPSpeed",
    min = 0.05,
    max = 25,
    value = 0.1,
    float = 0.1
}

RageMain:AddToggle{
    text = "Infinite Jump",
    flag = "InfiniteJumpEnabled",
    callback = function()
        SNot(nil, "Infinite Jump is " .. tostring(library.flags["InfiniteJumpEnabled"]))
    end
}:AddBind{
    flag = "InfiniteJumpBind",
    key = "None",
	callback = function()
		library.options["InfiniteJumpEnabled"]:SetState(not library.flags["InfiniteJumpEnabled"])
	end
}

local RageThird = RageColunm1:AddSection("Weapon Modifications")

RageThird:AddToggle{
    text = "No Recoil",
    callback = function(State)
        if not State then
            return
        end
        SNot(nil, "No Recoil is true")

        pcall(function()

            for i, v in pairs(getgc(true)) do
                if type(v) == "table" and rawget(v, "SpreadBase") then
                    setreadonly(v, false)
                    v.SpreadBase = 0
                    v.SpreadAddFPSZoom = 0 -- 0.125
                    v.SpreadAddFPSHip = 0 -- 4.42
                    v.SpreadAddTPSZoom = 0 -- 4.42
                    v.SpreadAddTPSHip = 0 -- 4.42
                    v.PivotPoint = Vector3.new(0,0,0)
                    v.KickUpForce = 0 -- 0.5
                    v.KickUpSpeed = 0 -- 1.8
                    v.KickUpBounce = 0 -- 1
                    v.KickUpCameraInfluence = 0 -- 1.3
                    v.KickUpGunInfluence = 0 -- 0.5
                    v.RaiseForce = 0
                    v.RaiseSpeed = 0 -- 10
                    v.RaiseBounce = 0 -- 1
                    v.RaiseInfluence = 0 -- 1
                    v.ShiftForce = 0 -- 0.67
                    v.ShiftSpeed = 0 -- 2.65
                    v.ShiftBounce = 0 -- 1
                    v.ShiftCameraInfluence = 0 -- 0.4
                    v.ShiftGunInfluence = 0 -- 0.5
                    v.SlideForce = 0 -- 3.88
                    v.SlideSpeed = 0 -- 3.52
                    v.SlideBounce = 0 -- 1
                    v.SlideInfluence = 0 -- 2.2
                    v.ShiftRoll = 0 -- 10
                    v.RollRightBias = 0 -- 1
                    v.RollLeftBias = 0 -- -1
                end
            end
        end)
    end
}

RageThird:AddToggle{
    text = "Fast Fire Rate",
    callback = function(State)
        if not State then
            return
        end
        SNot(nil, "Fast Fire Rate is true")

        pcall(function()
            local str = 'FireRate'
        
            for i, v in pairs(getgc(true)) do
                if type(v) == 'table' and rawget(v, str) then
                    setreadonly(v, false)
                    v[str] = 1000
                end
            end
        end)
    end
}

local RageColunm2 = RageTab:AddColumn();

local RageFourth = RageColunm2:AddSection("Real Misc")

RageFourth:AddToggle{
    text = "Freeze Zombies",
    flag = "FreezeRay",
    callback = function(State)
        SNot(nil, "Freeze Peasants is " .. tostring(library.flags["FreezeRay"]))
        if not State then
            return
        end

        library:AddConnection(runService.Heartbeat, "Freeze Loop", function()
            pcall(function()
                if library and library.flags["FreezeRay"] then
                    for _, obj in next, workspace.Zombies.Mobs:GetChildren() do
                        if obj:FindFirstChild("HumanoidRootPart") then
                            obj.HumanoidRootPart.Anchored = true
                        end
                    end
                   task.wait()
                else
                    library.connections["Freeze Loop"]:Disconnect()
    
                    for _, obj in next, workspace.Zombies.Mobs:GetChildren() do
                        if obj:FindFirstChild("HumanoidRootPart") then
                            obj.HumanoidRootPart.Anchored = false
                        end
                    end
                   task.wait()
                end
            end)
        end)
    end
}:AddBind{
    flag = "FreezeBind",
    key = "None",
	callback = function()
		library.options["FreezeRay"]:SetState(not library.flags["FreezeRay"])
	end
}

local RageFifth = RageColunm2:AddSection("Movement")

RageFifth:AddToggle{
    text = "Scaffold",
    flag = "Scaffold Enabled",
    callback = function(State)
        SNot(nil, "Scaffold is " .. tostring(library.flags["Scaffold Enabled"]))
        if not State then
            return
        end

        library:AddConnection(runService.Heartbeat, "Scaffold Loop", function()
            pcall(function()
                if library and library.flags["Scaffold Enabled"] then
                    local work = game:GetService("Workspace")
                    _G.st = nil
                    
                    if not _G.st then
                        coroutine.resume(coroutine.create(function()
                            local s = Instance.new("Part", work)
                            s.Transparency = 0.5
                            s.Anchored = true
                            s.Position = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(0, library.flags["Scaffold Height"], 0)
                            wait(5)
                            s:Destroy()
                        end))
                    end
                else
                    library.connections["Scaffold Loop"]:Disconnect()
                    _G.st = 1
                end
            end)
        end)
    end
}:AddBind{
    flag = "ScaffoldBind",
    key = "None",
	callback = function()
		library.options["Scaffold Enabled"]:SetState(not library.flags["Scaffold Enabled"])
	end
}

RageFifth:AddSlider{
    text = "Scaffold Height",
    flag = "Scaffold Height",
    min = -8,
    max = -3,
    value = -3,
    float = 0.5
}

--Get functions
local function GetHitboxFromChar(Character, BodyPart)
	BodyPart = BodyPart or "Head"
	if not Character then
		return
	end
	return FFC(Character, BodyPart) or FFC(Character, "UpperTorso")
end

local RayParams = RaycastParams.new()
RayParams.FilterType = Enum.RaycastFilterType.Blacklist
RayParams.IgnoreWater = true
local function RayCheck(ClientChar, To, Distance)
	local Ignores = {
		Camera,
		ClientChar
	}
	RayParams.FilterDescendantsInstances = Ignores
	return game:GetService("Workspace"):Raycast(Camera.CFrame.p, (To - Camera.CFrame.p).Unit * Distance, RayParams)
end

local Sub = Vector3.new(- 0.1, - 0.1, - 0.1)
local function GetCorners(Object, Esp)
	local CF = Object.CFrame
	local Size = (Object.Size / 2)
	Size = Esp and Size or Size - Sub
	return {
		Vector3.new(CF.X + Size.X, CF.Y + Size.Y, CF.Z + Size.Z);
		Vector3.new(CF.X - Size.X, CF.Y + Size.Y, CF.Z + Size.Z);

		Vector3.new(CF.X - Size.X, CF.Y - Size.Y, CF.Z - Size.Z);
		Vector3.new(CF.X + Size.X, CF.Y - Size.Y, CF.Z - Size.Z);

		Vector3.new(CF.X - Size.X, CF.Y + Size.Y, CF.Z - Size.Z);
		Vector3.new(CF.X + Size.X, CF.Y + Size.Y, CF.Z - Size.Z);

		Vector3.new(CF.X - Size.X, CF.Y - Size.Y, CF.Z + Size.Z);
		Vector3.new(CF.X + Size.X, CF.Y - Size.Y, CF.Z + Size.Z);
	}
end

--Player data
local ESPObjects = {}

local function Track(Player)
	-- too lazy to add a proper check, discontinued anyway so
	if not (Player.ClassName == "Player" or Player.ClassName == "Folder") then
		return
	end

	for i, v in next, ESPObjects do
		if not v.Active then
			v.Active = true
			ESPObjects[Player] = v
			break
		end
	end
	if not ESPObjects[Player] then
		ESPObjects[Player] = {
			ChamsOutline = library:Create("Folder", {
				Parent = library.base
			}),
			Chams = library:Create("Folder", {
				Parent = library.base
			}),
			ChamsStep = 0,
			BoxOutline = library:Create("Square", {
				Thickness = 1
			}),
			BoxInline = library:Create("Square", {
				Thickness = 1
			}),
			Box = library:Create("Square", {
				Thickness = 1
			}),
			LookAt = library:Create("Line", {
				Thickness = 1
			}),
			NameText = library:Create("Text", {
				Size = 15,
				Font = 3,
				Center = true,
				Outline = true
			}),
			ToolText = library:Create("Text", {
				Size = 15,
				Font = 3,
				Center = true,
				Outline = true
			}),
			InventoryText = library:Create("Text", {
				Size = 15,
				Font = 3,
				Center = true,
				Outline = true
			}),
			DistanceText = library:Create("Text", {
				Size = 15,
				Font = 3,
				Center = true,
				Outline = true
			}),
			BarOutline = library:Create("Square", {
				Filled = true
			}),
			Bar = library:Create("Square", {
				Filled = true
			}),
			HealthText = library:Create("Text", {
				Color = Color3.new(1, 1, 1),
				Size = 14,
				Font = 3,
				Center = true,
				Outline = true
			}),
			DirectionLine = library:Create("Line", {
				Thickness = 1
			}),
			DirectionDot = library:Create("Square", {
				Size = Vector2.new(7, 7),
				Filled = true
			}),
			--RadarHeight = library:Create("TextLabel", {BackgroundTransparency = 1, Text = "T", TextColor3 = Color3.new(), Font = Enum.Font.SciFi, TextSize = 13}),
			RadarBlip = library:Create("Circle", {
				Radius = 4,
				Filled = true
			}),
			OOVArrow = library:Create"Triangle",
			Active = true,

			Invis = function()
				ESPObjects[Player].Visible = false
				ESPObjects[Player].BoxOutline.Visible = false
				ESPObjects[Player].BoxInline.Visible = false
				ESPObjects[Player].Box.Visible = false
				ESPObjects[Player].BarOutline.Visible = false
				ESPObjects[Player].Bar.Visible = false
				ESPObjects[Player].HealthText.Visible = false
				ESPObjects[Player].LookAt.Visible = false
				ESPObjects[Player].NameText.Visible = false
				ESPObjects[Player].ToolText.Visible = false
				ESPObjects[Player].InventoryText.Visible = false
				ESPObjects[Player].DistanceText.Visible = false
				ESPObjects[Player].DirectionLine.Visible = false
				ESPObjects[Player].DirectionDot.Visible = false
			end,

			InvisChams = function()
				ESPObjects[Player].ChamsVisible = false
				for _, Cham in next, ESPObjects[Player].Chams:GetChildren() do
					Cham.Transparency = 1
				end
			end,

			InvisChamsOutline = function()
				ESPObjects[Player].ChamsOutlineVisible = false
				for _, Cham in next, ESPObjects[Player].ChamsOutline:GetChildren() do
					Cham.Transparency = 1
				end
			end,

			InvisRadar = function()
				ESPObjects[Player].RadarVisible = false
				ESPObjects[Player].RadarBlip.Visible = false
			end
		}
	end

	local Character
	local MaxHealth
	Players[Player] = setmetatable({
		Priority = false,
		Whitelist = false,
		LastPosition = V3Empty
	}, {
		__index = function(self, index)
			if index == "Character" then
				if Player.ClassName == "Model" then
					Character = Player
				else
					Character = Player.Character or FFC(game:GetService("Workspace"), Player.Name)
				end
				if Character then
					return Character
				end
			else
				if not Character then
					return (index == "Health" or index == "MaxHealth" and 0)
				end
				if index == "Health" then
					local Health
					local Humanoid = FFCoC(Character, "Humanoid")
						if Humanoid then
							Health, MaxHealth = Humanoid.Health, Humanoid.MaxHealth
						end
					return Health and (Health > 0 and Health) or 0
				elseif index == "MaxHealth" then
					return MaxHealth or 0
				elseif index == "Enemy" then
					if Player.ClassName == "Model" then
						return true
					else
						if Client.Team then
                            return Client.Team ~= Player.Team
                        else
                            return true
                        end
					end
				end
			end
		end
	})
end

local function AddTracker(Tracking)
	for _, Player in next, Tracking:GetChildren() do
		Track(Player)
	end

	library:AddConnection(Tracking.ChildAdded, "Child Added", function(Player)
        if not library then library.connections["Child Added"]:Disconnect() end
		wait(1)
		Track(Player)
	end)

	library:AddConnection(Tracking.ChildRemoved, "Child Removed", function(Player)
        if not library then library.connections["Child Removed"]:Disconnect() end
		if Players[Player] then
			Players[Player] = nil
			if ESPObjects[Player] then
				ESPObjects[Player].Active = false
				ESPObjects[Player].OOVArrow.Visible = false
				ESPObjects[Player].Invis()
				ESPObjects[Player].InvisChams()
				ESPObjects[Player].InvisChamsOutline()
				ESPObjects[Player].InvisRadar()
			end
		end
	end)
end

--UI
--local RadarWindow = library:Create("Circle", {NumSides = 64, Radius = 100, Filled = true, Color = Color3.fromRGB(30, 30, 30)})
local Draw = library:Create("Circle", {
	NumSides = 64,
	Thickness = 1
})

local CrosshairTop = library:Create("Square", {
	Filled = true
})
local CrosshairLeft = library:Create("Square", {
	Filled = true
})
local CrosshairRight = library:Create("Square", {
	Filled = true
})
local CrosshairBottom = library:Create("Square", {
	Filled = true
})

--Esp module

local VisualsTab = library:AddTab"Visuals"
local VisualsColumn = VisualsTab:AddColumn()
local VisualsColumn1 = VisualsTab:AddColumn()

local HealthBarAddon = Vector2.new(3)
local PlayerEspSection = VisualsColumn:AddSection"ESP"
local OldStep = 0
PlayerEspSection:AddToggle({
	text = "Enabled",
	flag = "Esp Enabled",
	callback = function(State)
		if not State then
			--RadarWindow.Visible = false
			if library.connections["Player ESP"] then
				library.connections["Player ESP"]:Disconnect()
				for _, v in next, ESPObjects do
					v.OOVArrow.Visible = false
					v.Invis()
					v.InvisChams()
					v.InvisChamsOutline()
				end
			end
			return
		end

		--RadarWindow.Visible = library.flags["Radar Enabled"]
		library:AddConnection(runService.RenderStepped, "Player ESP", function(Step)
            if not library then library.connections["Player ESP"]:Disconnect() end
			OldStep = OldStep + Step
			if OldStep < 0.016 then
				return
			end
			OldStep = 0
			for Player, Data in next, Players do
                if Player == Client then
                    continue
                end
                local Objects = ESPObjects[Player]
                local Character = Data.Character
                local Show
                local Team = Data.Enemy
                if Data.Whitelist then
                    Show = library.flags["Esp Show Whitelisted"]
                else
                    Show = Data.Priority or Team
                end
                if Show and Character then
                    local Health = Character.Stats.Health.Base.Value
                    if Health > 0.1 then
                        Team = Team and "Enemy" or "Team"
                        local Pos, Size = GBB(Character)
                        local RootPart = FFC(Character, "HumanoidRootPart")
                        if RootPart and (Pos.Position - RootPart.Position).Magnitude > 5 then
                            Pos = RootPart.CFrame
                        end
                        local Distance = (Camera.CFrame.p - Pos.Position).Magnitude
                        if Distance < library.flags["Esp Max Distance"] then
                            local ScreenPosition, OnScreen = WTVP(Camera, Pos.Position)
                            local ClientChar = Players[Client].Character
                            local Ignores = {
                                Camera,
                                ClientChar
                            }
                            -- if library.flags["Visible Check"] then
                            --     local Hit = RayCheck(ClientChar, Pos.Position, Distance)
                            --     Hit = Hit and Hit.Instance and FFA(Hit.Instance, Character.Name)
                            --     Hit = Hit and Hit == Character
                            -- end
                            local Occluded = Hit and " " or " Occluded "
                            local Visible = true
                            -- if library.flags[Team .. " Visible Only"] then
                            --     Visible = Hit ~= nil
                            -- end
                            local Color = (library.flags["Highlight Target"] and library.Aimbot.Player == Player and library.flags["Aimbot Highlight Color"])
                            Color = Color or (Data.Priority and library.flags["Player Priority Color"] or Data.Whitelist and library.flags["Player Whitelist Color"])
                            Color = Color

                            --
                            -- if library.flags["Radar Enabled"] and Distance < RadarWindow.Radius then
                            --     Objects.RadarBlip.Visible = true
                            --     local RelativePos = Camera.CFrame:Inverse() * Pos.Position
                            --     local Middle = Camera.ViewportSize / 2
                            --     local Degrees = math.deg(math.atan2(- RelativePos.Y, RelativePos.X)) * math.pi / 180
                            --     local EndPos = Middle + (Vector2.new(math.cos(Degrees), math.sin(Degrees)) * Distance)
                            --     Objects.RadarBlip.Position = EndPos
                            --     Objects.RadarBlip.Color = Color or Color3.new(1, 1, 1)
                            --     if not Objects.Visible then
                            --         continue
                            --     end
                            -- else
                            --     Objects.RadarBlip.Visible = false
                            -- end
                            --]]
                            if Visible then
                                local Transparency = (Data.Priority) and 1 or 1 - (Distance / library.flags["Esp Max Distance"])
                                if OnScreen then
                                    Objects.Visible = true
                                    Objects.OOVArrow.Visible = false

                                    --local xMin, yMin = 9e9, 9e9
                                    --local xMax, yMax = 0, 0
                                    local BoxColor = Color or library.flags[Team .. Occluded .. "Box Color"]
                                    local TextColor = Color or library.flags[Team .. Occluded .. "Info Color"]
                                    local ToolColor = Color or library.flags[Team .. Occluded .. "Tool Color"]
                                    local InventoryColor = Color or library.flags[Team .. Occluded .. "Inventory Color"]
                                    local LookColor = Color or library.flags[Team .. Occluded .. "Look Color"]
                                    local ChamsColor = Color or library.flags[Team .. Occluded .. "Chams Color"]
                                    local ChamsOutlineColor = Color or library.flags[Team .. Occluded .. "Chams Outline Color"]
                                    local DirectionColor = Color or library.flags[Team .. Occluded .. "Direction Color"]

                                    --Chams
                                    if library.flags[Team .. " Chams Enabled"] and Distance < 600 then
                                        Objects.ChamsVisible = true
                                        Objects.Chams.Parent = library.base
                                        Objects.ChamsStep = Objects.ChamsStep + Step
                                        if Objects.ChamsStep > 0.2 then
                                            Objects.ChamsStep = 0
                                            for _, PartName in next, UseBodyParts do
                                                local Part = FFC(Character, PartName, true)
                                                if Part then
                                                    local Cham = FFC(Objects.Chams, PartName) or (function()
                                                        return library:Create("BoxHandleAdornment", {
                                                            Name = PartName,
                                                            AlwaysOnTop = true,
                                                            ZIndex = 2,
                                                            Parent = Objects.Chams
                                                        })
                                                    end)()
                                                    Cham.Size = Part.Size
                                                    Cham.Adornee = Part
                                                    Cham.Transparency = library.flags[Team .. " Chams Transparency"]
                                                    Cham.Color3 = ChamsColor
                                                    if library.flags[Team .. " Chams Outline"] then
                                                        Objects.ChamsOutlineVisible = true
                                                        Objects.ChamsOutline.Parent = library.base
                                                        Cham = FFC(Objects.ChamsOutline, PartName) or (function()
                                                            return library:Create("BoxHandleAdornment", {
                                                                Name = PartName,
                                                                AlwaysOnTop = true,
                                                                ZIndex = 1,
                                                                Parent = Objects.ChamsOutline
                                                            })
                                                        end)()
                                                        Cham.Size = Part.Size * 1.2
                                                        Cham.Adornee = Part
                                                        Cham.Transparency = library.flags[Team .. " Chams Transparency"]
                                                        Cham.Color3 = ChamsOutlineColor
                                                    else
                                                        if Objects.ChamsOutlineVisible then
                                                            Objects.InvisChamsOutline()
                                                        end
                                                    end
                                                else
                                                    local Cham = FFC(Objects.Chams, PartName)
                                                    if Cham then
                                                        Cham.Visible = false
                                                    end
                                                    Cham = FFC(Objects.ChamsOutline, PartName)
                                                    if Cham then
                                                        Cham.Visible = true
                                                    end
                                                end
                                            end
                                        end
                                    else
                                        if Objects.ChamsVisible then
                                            Objects.InvisChams()
                                            Objects.InvisChamsOutline()
                                        end
                                    end

                                    --ESP
                                    local Height = (Camera.CFrame - Camera.CFrame.p) * Vector3.new(0, (math.clamp(Size.Y, 1, 10) + 0.5) / 2, 0)
                                    Height = math.abs(WTSP(Camera, Pos.Position + Height).Y - WTSP(Camera, Pos.Position - Height).Y)
                                    --local ViewportSize = Camera.ViewportSize
                                    --local Size = ((ViewportSize.X + ViewportSize.Y) / Distance) * (1 - (Camera.FieldOfView / 200))
                                    Size = library.round(Vector2.new(Height / 2, Height))
                                    local Position = library.round(Vector2.new(ScreenPosition.X, ScreenPosition.Y) - (Size / 2))
                                    if library.flags[Team .. " Box Enabled"] then
                                        Objects.Box.Visible = true
                                        Objects.Box.Color = BoxColor
                                        Objects.Box.Size = Size
                                        Objects.Box.Position = Position
                                        Objects.Box.Transparency = Transparency
                                        Objects.Box.Filled = false
                                        Objects.BoxOutline.Visible = true
                                        Objects.BoxOutline.Size = Size + V222
                                        Objects.BoxOutline.Position = Position - V211
                                        Objects.BoxOutline.Transparency = Transparency
                                        Objects.BoxOutline.Filled = false
                                        Objects.BoxInline.Visible = true
                                        Objects.BoxInline.Size = Size - V222
                                        Objects.BoxInline.Position = Position + V211
                                        Objects.BoxInline.Transparency = Transparency
                                        Objects.BoxInline.Filled = false
                                    else
                                        Objects.Box.Visible = false
                                        Objects.BoxOutline.Visible = false
                                        Objects.BoxInline.Visible = false
                                    end
                                    if library.flags[Team .. " Health Enabled"] then
                                        local MaxHealth = 100 + Character.Stats.Health.Bonus.Value -- Data.MaxHealth
                                        local HealthPerc = Health / MaxHealth
                                        local Position = Position - HealthBarAddon
                                        local Size = Vector2.new(1, Size.Y)
                                        Objects.BarOutline.Visible = true
                                        Objects.BarOutline.Position = Position - V211
                                        Objects.BarOutline.Size = Size + V222
                                        Objects.BarOutline.Transparency = Transparency
                                        Objects.Bar.Visible = true
                                        Objects.Bar.Color = Color3.new(1 - HealthPerc, HealthPerc, 0.2)
                                        Objects.Bar.Position = Position + Vector2.new(0, Size.Y)
                                        Objects.Bar.Size = Vector2.new(1, - Size.Y * HealthPerc)
                                        Objects.Bar.Transparency = Transparency
                                        Objects.HealthText.Visible = HealthPerc < 0.99
                                        Objects.HealthText.Position = Objects.Bar.Position + Objects.Bar.Size - Vector2.new(0, 7)
                                        Objects.HealthText.Text = tostring(library.round(Health)) or ""
                                        Objects.HealthText.Transparency = Transparency
                                    else
                                        Objects.BarOutline.Visible = false
                                        Objects.Bar.Visible = false
                                        Objects.HealthText.Visible = false
                                    end
                                    if library.flags[Team .. " Info"] then
                                        Objects.NameText.Visible = true
                                        Objects.NameText.Text = Player.Name
                                        Objects.NameText.Position = Position + Vector2.new(Size.X / 2, - Objects.NameText.TextBounds.Y - 1)
                                        Objects.NameText.Color = TextColor
                                        Objects.NameText.Transparency = Transparency
                                        Objects.DistanceText.Visible = true
                                        Objects.DistanceText.Text = "[" .. library.round(Distance) .. "m]"
                                        Objects.DistanceText.Position = Position + Vector2.new(Size.X / 2, Size.Y + 2)
                                        Objects.DistanceText.Color = TextColor
                                        Objects.DistanceText.Transparency = Transparency
                                    else
                                        Objects.NameText.Visible = false
                                        Objects.DistanceText.Visible = false
                                    end
                                    if library.flags[Team .. " Tool"] then
                                        Objects.ToolText.Visible = true
                                        if Character.Equipped:FindFirstChildOfClass("Model") then
                                            Objects.ToolText.Text = "[" .. Character.Equipped:FindFirstChildOfClass("Model").Name .. "]"
                                        else
                                            Objects.ToolText.Visible = false
                                        end
                                        Objects.ToolText.Position = Position + Vector2.new(Size.X / 16, Size.Y + 16)
                                        Objects.ToolText.Color = ToolColor
                                        Objects.ToolText.Transparency = Transparency
                                    else
                                        Objects.ToolText.Visible = false
                                    end
                                    -- local function getPlayerFromCharacter(character)
                                    --     for _, player in pairs(game:GetService("Players"):GetPlayers()) do
                                    --         if player.Character == character then
                                    --             return player
                                    --         end
                                    --     end
                                    -- end
                                    -- local function getToolFromPlayer(player)
                                    --     local t = {}
                                    --     for _, Tool in next, player.Backpack:GetChildren() do
                                    --         if Tool:IsA("Tool") then
                                    --             table.insert(t, Tool.Name)
                                    --         end
                                    --     end
                                    --     if t[1] and not t[2] then
                                    --         return t[1]
                                    --     end
                                    --     if t[2] and not t[3] then
                                    --         return t[1] .. ", " .. t[2]
                                    --     end
                                    --     if t[3] and not t[4] then
                                    --         return t[1] .. ", " .. t[2] .. ", " .. t[3]
                                    --     end
                                    --     if t[4] and not t[5] then
                                    --         return t[1] .. ", " .. t[2] .. ", " .. t[3] .. ", " .. t[4]
                                    --     end
                                    --     if t[5] and not t[6] then
                                    --         return t[1] .. ", " .. t[2] .. ", " .. t[3] .. ", " .. t[4] .. ", " .. t[5]
                                    --     end
                                    --     if t[6] and not t[7] then
                                    --         return t[1] .. ", " .. t[2] .. ", " .. t[3] .. ", " .. t[4] .. ", " .. t[5] .. ", " .. t[6]
                                    --     end
                                    --     if t[7] and not t[8] then
                                    --         return t[1] .. ", " .. t[2] .. ", " .. t[3] .. ", " .. t[4] .. ", " .. t[5] .. ", " .. t[6] .. ", " .. t[7]
                                    --     end
                                    --     if t[8] and not t[9] then
                                    --         return t[1] .. ", " .. t[2] .. ", " .. t[3] .. ", " .. t[4] .. ", " .. t[5] .. ", " .. t[6] .. ", " .. t[7] .. ", " .. t[8]
                                    --     end
                                    --     if t[9] and not t[10] then
                                    --         return t[1] .. ", " .. t[2] .. ", " .. t[3] .. ", " .. t[4] .. ", " .. t[5] .. ", " .. t[6] .. ", " .. t[7] .. ", " .. t[8] .. ", " .. t[9]
                                    --     end
                                    --     if t[10] and not t[11] then
                                    --         return t[1] .. ", " .. t[2] .. ", " .. t[3] .. ", " .. t[4] .. ", " .. t[5] .. ", " .. t[7] .. ", " .. t[7] .. ", " .. t[8] .. ", " .. t[9] .. ", " .. t[10]
                                    --     end
                                    -- end
                                    -- local function GetInventory(player)
                                    --     if player:FindFirstChild("Stats") and player.Stats.Primary.Value ~= nil or "" and player.Stats.Secondary.Value ~= nil or "" then
                                    --         return player.Stats.Primary.Value and player.Stats.Secondary.Value
                                    --     end
                                    -- end
                                    -- if library.flags[Team .. " Inventory"] then
                                    --     Objects.InventoryText.Visible = true
                                    --     if getPlayerFromCharacter(Character).Backpack:FindFirstChildOfClass("Tool") then
                                    --         Objects.InventoryText.Text = "[" .. getToolFromPlayer(getPlayerFromCharacter(Character)) .. "]"
                                    --     else
                                    --         Objects.InventoryText.Visible = false
                                    --     end
                                    --     Objects.InventoryText.Position = Position + Vector2.new(Size.X / 30, Size.Y + 30)
                                    --     Objects.InventoryText.Color = InventoryColor
                                    --     Objects.InventoryText.Transparency = Transparency
                                    -- else
                                    --     Objects.InventoryText.Visible = false
                                    -- end
                                    if library.flags[Team .. " Look Enabled"] then
                                        HeadPosition = GetHitboxFromChar(Character, "Head")
                                        if HeadPosition then
                                            Objects.LookAt.Visible = true
                                            HeadPosition1 = WTVP(Camera, HeadPosition.Position)
                                            local To = WTVP(Camera, HeadPosition.Position + (HeadPosition.CFrame.LookVector * 8))
                                            Objects.LookAt.From = Vector2.new(HeadPosition1.X, HeadPosition1.Y)
                                            Objects.LookAt.To = Vector2.new(To.X, To.Y)
                                            Objects.LookAt.Color = LookColor
                                            Objects.LookAt.Transparency = Transparency
                                        else
                                            Objects.LookAt.Visible = false
                                        end
                                    else
                                        Objects.LookAt.Visible = false
                                    end
                                    if library.flags[Team .. " Direction Enabled"] then
                                        Objects.DirectionLine.Visible = true
                                        Position = Position + (Size / 2)
                                        local PositionOffset2d = V2Empty
                                        local Diff = (Pos.Position - Data.LastPosition)
                                        if Diff.Magnitude > 0.01 then
                                            PositionOffset2d = library.round(Vector2.new(WTSP(Camera, Pos.Position + (Diff.Unit * 4)).X, Position.Y) - Position)
                                        end
                                        Objects.DirectionLine.From = Position
                                        Objects.DirectionLine.To = Position + PositionOffset2d
                                        Objects.DirectionLine.Color = DirectionColor
                                        Objects.DirectionLine.Transparency = Transparency
                                        if Distance < 600 then
                                            Objects.DirectionDot.Visible = true
                                            Objects.DirectionDot.Position = Objects.DirectionLine.To - V233
                                            Objects.DirectionDot.Color = DirectionColor
                                            Objects.DirectionDot.Transparency = Transparency
                                        else
                                            Objects.DirectionDot.Visible = false
                                        end
                                    else
                                        Objects.DirectionLine.Visible = false
                                        Objects.DirectionDot.Visible = false
                                    end
                                    Data.LastPosition = Pos.Position
                                    continue
                                end
                                if library.flags[Team .. " OOV Arrows"] then
                                    Objects.OOVArrow.Visible = true
                                    Objects.OOVArrow.Color = Color or library.flags[Team .. Occluded .. "OOV Arrows Color"]
                                    local RelativePos = Camera.CFrame:Inverse() * Pos.Position
                                    local Middle = Camera.ViewportSize / 2
                                    local Degrees = math.deg(math.atan2(- RelativePos.Y, RelativePos.X)) * math.pi / 180
                                    local EndPos = Middle + (Vector2.new(math.cos(Degrees), math.sin(Degrees)) * library.flags[Team .. " Out Of View Scale"])
                                    Objects.OOVArrow.PointB = EndPos + (- (Middle - EndPos).Unit * 15)
                                    Objects.OOVArrow.PointA = EndPos
                                    Objects.OOVArrow.PointC = EndPos
                                    Objects.OOVArrow.Transparency = Transparency
                                    if not Objects.Visible then
                                        continue
                                    end
                                end
                            end
                        end
                    end
                end
                Objects.OOVArrow.Visible = false
                if Objects.Visible then
                    Objects.Invis()
                    Objects.InvisChams()
                    Objects.InvisChamsOutline()
                    Objects.InvisRadar()
                end
            end
		end)
	end
}):AddBind({
	callback = function()
		library.options["Esp Enabled"]:SetState(not library.flags["Esp Enabled"])
	end
})
PlayerEspSection:AddSlider({
	text = "Max Distance",
	textpos = 2,
	flag = "Esp Max Distance",
	value = 10000,
	min = 0,
	max = 10000
})
PlayerEspSection:AddToggle({
	text = "Show Teammate Players",
	flag = "Esp Show Whitelisted"
})

--PlayerEspSection:AddDivider"Radar"
--PlayerEspSection:AddToggle({text = "Enabled", flag = "Radar Enabled", callback = function(State)
--	RadarWindow.Visible = State and library.flags["Esp Enabled"]
--end})
local VisualsWorld = VisualsColumn:AddSection"Lighting"
VisualsWorld:AddToggle({
	text = "Clock Time",
    flag = "Clock Time Enabled"
}):AddSlider({
	flag = "Clock Time Amount",
	min = 0,
	max = 24,
	float = 0.1,
	value = LightingSpoof.ClockTime,
})
VisualsWorld:AddToggle({
	text = "Brightness",
    flag = "Brightness Enabled"
}):AddSlider({
	flag = "Brightness Amount",
	min = 0,
	max = 100,
	float = 0.1,
	value = LightingSpoof.Brightness
})
VisualsWorld:AddToggle({
	text = "Ambient",
	flag = "Ambient Lighting"
}):AddColor({
	flag = "Outdoor Ambient",
	color = LightingSpoof.OutdoorAmbient
}):AddColor({
	flag = "Indoor Ambient",
	color = LightingSpoof.Ambient
})
VisualsWorld:AddToggle({
	text = "Color Shift",
    flag = "Color Shift Enabled"
}):AddColor({
	flag = "Color Shift Top",
	color = LightingSpoof.ColorShift_Top
})

local VisualsMiscSection = VisualsColumn:AddSection"Miscellaneous"

-- VisualsMiscSection:AddToggle({
-- 	text = "FOV Changer",
--     flag = "FOV Changer Enabled",
-- 	-- callback = function(State)
-- 	-- 	library.options["Dynamic Custom FOV"].main.Visible = State
-- 	-- end
-- }):AddSlider({
-- 	flag = "FOV Amount",
-- 	min = 0,
-- 	max = 120
-- })
-- VisualsMiscSection:AddToggle({
-- 	text = "Dynamic",
-- 	flag = "Dynamic Custom FOV"
-- })
-- VisualsMiscSection:AddToggle({
-- 	text = "Zoom",
-- 	flag = "FOV Zoom Enabled"
-- }):AddSlider({
-- 	flag = "FOV Zoom Amount",
-- 	min = 5,
-- 	max = 50
-- }):AddBind({
-- 	flag = "FOV Zoom Key",
-- 	mode = "hold"
-- })

VisualsMiscSection:AddDivider"Crosshair"
VisualsMiscSection:AddToggle({
	text = "Enabled",
	flag = "Crosshair Enabled",
	callback = function(State)
		library.options["Crosshair T-Shape"].main.Visible = State
		library.options["Crosshair Size"].main.Visible = State
		library.options["Crosshair Gap"].main.Visible = State
		library.options["Crosshair Thickness"].main.Visible = State
		CrosshairTop.Visible = State and not library.flags["Crosshair T-Shape"]
		CrosshairLeft.Visible = State
		CrosshairRight.Visible = State
		CrosshairBottom.Visible = State
	end
}):AddColor({
	callback = function(Color)
		CrosshairTop.Color = Color
		CrosshairLeft.Color = Color
		CrosshairRight.Color = Color
		CrosshairBottom.Color = Color
	end,
	trans = 1,
	calltrans = function(Transparency)
		CrosshairTop.Transparency = Transparency
		CrosshairLeft.Transparency = Transparency
		CrosshairRight.Transparency = Transparency
		CrosshairBottom.Transparency = Transparency
	end
})
VisualsMiscSection:AddToggle({
	text = "T-Shape",
	flag = "Crosshair T-Shape",
	callback = function(State)
		CrosshairTop.Visible = library.flags["Crosshair Enabled"] and not State
	end
})
VisualsMiscSection:AddSlider({
	text = "Size",
	textpos = 2,
	flag = "Crosshair Size",
	min = 1,
	max = 500,
	callback = function(Value)
		local Thickness = library.flags["Crosshair Thickness"]
		CrosshairTop.Size = Vector2.new(Thickness, - Value)
		CrosshairLeft.Size = Vector2.new(- Value, Thickness)
		CrosshairRight.Size = Vector2.new(Value, Thickness)
		CrosshairBottom.Size = Vector2.new(Thickness, Value)
	end
})
VisualsMiscSection:AddSlider({
	text = "Gap",
	textpos = 2,
	flag = "Crosshair Gap",
	min = 0,
	max = 20,
	float = 0.5
})
VisualsMiscSection:AddSlider({
	text = "Thickness",
	textpos = 2,
	flag = "Crosshair Thickness",
	min = 1,
	max = 20,
	float = 0.5,
	callback = function(Value)
		local Size = library.flags["Crosshair Size"]
		CrosshairTop.Size = Vector2.new(Value, - Size)
		CrosshairLeft.Size = Vector2.new(- Size, Value)
		CrosshairRight.Size = Vector2.new(Size, Value)
		CrosshairBottom.Size = Vector2.new(Value, Size)
	end
})

local PlayerEspEnemySection = VisualsColumn1:AddSection"Enemies"
-- PlayerEspEnemySection:AddToggle({
-- 	text = "Visible Only",
-- 	flag = "Enemy Visible Only"
-- })

-- PlayerEspEnemySection:AddToggle({
-- 	text = "Visible Check",
-- })

PlayerEspEnemySection:AddToggle({
	text = "Box",
	flag = "Enemy Box Enabled"
}):AddColor({
	flag = "Enemy Occluded Box Color",
	color = Color3.fromRGB(160, 32, 240)
}):AddColor({
	flag = "Enemy Box Color",
	color = Color3.fromRGB(240, 40, 50)
})

PlayerEspEnemySection:AddToggle({
	text = "Info",
	flag = "Enemy Info"
}):AddColor({
	flag = "Enemy Occluded Info Color",
	color = Color3.fromRGB(160, 32, 240)
}):AddColor({
	flag = "Enemy Info Color",
	color = Color3.fromRGB(240, 30, 40)
})

PlayerEspEnemySection:AddToggle({
	text = "Tool",
	flag = "Enemy Tool"
}):AddColor({
	flag = "Enemy Occluded Tool Color",
	color = Color3.fromRGB(160, 32, 240)
}):AddColor({
	flag = "Enemy Tool Color",
	color = Color3.fromRGB(240, 30, 40)
})

-- PlayerEspEnemySection:AddToggle({
-- 	text = "Inventory",
-- 	flag = "Enemy Inventory"
-- }):AddColor({
-- 	flag = "Enemy Occluded Inventory Color",
-- 	color = Color3.fromRGB(255, 140, 30)
-- }):AddColor({
-- 	flag = "Enemy Inventory Color",
-- 	color = Color3.fromRGB(240, 30, 40)
-- })

PlayerEspEnemySection:AddToggle({
	text = "Health",
	flag = "Enemy Health Enabled"
})

PlayerEspEnemySection:AddToggle({
	text = "Out Of View",
	flag = "Enemy OOV Arrows",
	callback = function(State)
		library.options["Enemy Out Of View Scale"].main.Visible = State
	end
}):AddColor({
	flag = "Enemy Occluded OOV Arrows Color",
	color = Color3.fromRGB(160, 32, 240)
}):AddColor({
	flag = "Enemy OOV Arrows Color",
	color = Color3.fromRGB(240, 30, 40)
})
PlayerEspEnemySection:AddSlider({
	text = "Scale",
	textpos = 2,
	flag = "Enemy Out Of View Scale",
	min = 75,
	max = 500
})

PlayerEspEnemySection:AddToggle({
	text = "Look Direction",
	flag = "Enemy Look Enabled"
}):AddColor({
	flag = "Enemy Occluded Look Color",
	color = Color3.fromRGB(160, 32, 240)
}):AddColor({
	flag = "Enemy Look Color",
	color = Color3.fromRGB(240, 60, 20)
})

--PlayerEspEnemySection:AddToggle({text = "Velocity", flag = "Enemy Direction Enabled"}):AddColor({flag = "Enemy Occluded Direction Color", color = Color3.fromRGB(240, 120, 80)}):AddColor({flag = "Enemy Direction Color", color = Color3.fromRGB(240, 60, 20)})

PlayerEspEnemySection:AddToggle({
	text = "Chams",
	flag = "Enemy Chams Enabled"
}):AddSlider({
	text = "Transparency",
	flag = "Enemy Chams Transparency",
	min = 0,
	max = 1,
	float = 0.1
}):AddColor({
	flag = "Enemy Occluded Chams Color",
	color = Color3.fromRGB(160, 32, 240)
}):AddColor({
	flag = "Enemy Chams Color",
	color = Color3.fromRGB(240, 40, 50)
})
PlayerEspEnemySection:AddToggle({
	text = "Outline",
	flag = "Enemy Chams Outline"
}):AddColor({
	flag = "Enemy Occluded Chams Outline Color",
	color = Color3.fromRGB(160, 32, 240)
}):AddColor({
	flag = "Enemy Chams Outline Color",
	color = Color3.fromRGB(240, 40, 50)
})

local PlayerEspTeamSection = VisualsColumn1:AddSection"Teammates"
-- PlayerEspTeamSection:AddToggle({
-- 	text = "Visible Only",
-- 	flag = "Team Visible Only"
-- })

PlayerEspTeamSection:AddToggle({
	text = "Box",
	flag = "Team Box Enabled"
}):AddColor({
	flag = "Team Occluded Box Color",
	color = Color3.fromRGB(20, 50, 255)
}):AddColor({
	flag = "Team Box Color",
	color = Color3.fromRGB(40, 255, 180)
})

PlayerEspTeamSection:AddToggle({
	text = "Info",
	flag = "Team Info"
}):AddColor({
	flag = "Team Occluded Info Color",
	color = Color3.fromRGB(20, 120, 255)
}):AddColor({
	flag = "Team Info Color",
	color = Color3.fromRGB(40, 240, 130)
})

PlayerEspTeamSection:AddToggle({
	text = "Health",
	flag = "Team Health Enabled"
})

PlayerEspTeamSection:AddToggle({
	text = "Out Of View",
	flag = "Team OOV Arrows",
	callback = function(State)
		library.options["Team Out Of View Scale"].main.Visible = State
	end
}):AddColor({
	flag = "Team Occluded OOV Arrows Color",
	color = Color3.fromRGB(20, 120, 255)
}):AddColor({
	flag = "Team OOV Arrows Color",
	color = Color3.fromRGB(40, 240, 130)
})
PlayerEspTeamSection:AddSlider({
	text = "Scale",
	textpos = 2,
	flag = "Team Out Of View Scale",
	min = 100,
	max = 500
})

PlayerEspTeamSection:AddToggle({
	text = "Look Direction",
	flag = "Team Look Enabled"
}):AddColor({
	flag = "Team Occluded Look Color",
	color = Color3.fromRGB(40, 80, 230)
}):AddColor({
	flag = "Team Look Color",
	color = Color3.fromRGB(40, 250, 100)
})

--PlayerEspTeamSection:AddToggle({text = "Velocity", flag = "Team Direction Enabled"}):AddColor({flag = "Team Occluded Direction Color", color = Color3.fromRGB(240, 120, 80)}):AddColor({flag = "Team Direction Color", color = Color3.fromRGB(240, 60, 20)})

PlayerEspTeamSection:AddToggle({
	text = "Chams",
	flag = "Team Chams Enabled"
}):AddSlider({
	text = "Transparency",
	flag = "Team Chams Transparency",
	min = 0,
	max = 1,
	float = 0.1
}):AddColor({
	flag = "Team Occluded Chams Color",
	color = Color3.fromRGB(20, 50, 255)
}):AddColor({
	flag = "Team Chams Color",
	color = Color3.fromRGB(40, 255, 180)
})
PlayerEspTeamSection:AddToggle({
	text = "Outline",
	flag = "Team Chams Outline"
}):AddColor({
	flag = "Team Occluded Chams Outline Color",
	color = Color3.fromRGB(80, 100, 255)
}):AddColor({
	flag = "Team Chams Outline Color",
	color = Color3.fromRGB(80, 255, 200)
})

-- --Misc stuff
local MiscTab = library:AddTab"Misc"
local MiscColumn = MiscTab:AddColumn()
local MiscColumn1 = MiscTab:AddColumn()
local MiscMain = MiscColumn:AddSection"ESP Elements"

MiscMain:AddToggle{
    text = "Vehicles",
    flag = "VehiclesEnabled",
    callback = function(State)
        if not State then
            return
        end

        pcall(function()
            for i, v in pairs(game:GetService("Workspace").Vehicles.Spawned:GetChildren()) do
                if v:IsA("Model") and v.PrimaryPart then
                    DrawDrop(v)
                end
            end
        end)
    end
}:AddColor({
	flag = "Vehicles Color",
	color = Color3.fromRGB(255, 255, 255)
})

MiscMain:AddSlider{
    text = "Max Distance",
    flag = "Vehicles Max Distance",
    min = 1,
    max = 15000,
    value = 1000,
    suffix = " Studs"
}

local ItemCategory = RepStorage.ItemData:GetChildren()

for _, v in pairs(ItemCategory) do
    if v.Name == "Building" then continue end
    local ItemFlag = v.Name

    MiscMain:AddToggle{
        text = v.Name,
        flag = ItemFlag .. " Loot Enabled",
        callback = function(State)
            if not State then
                return
            end
    
            local s,e = pcall(function()
                for i, v in pairs(game:GetService("Workspace").Loot:GetDescendants()) do
                    local ItemData = RepStorage.ItemData:FindFirstChild(v.Name, true)
                    if v:IsA("Model") and v.PrimaryPart and ItemData then
                        DrawDrop(v, "Loot", ItemData.Parent.Name)
                    end
                end

                library:AddConnection(game:GetService("Workspace").Loot.DescendantAdded, ItemFlag .. " LChild Added", function(drop)
                    pcall(function()
                        if library then
                            if not library.flags[ItemFlag .. " Loot Enabled"] then return end
                            local ItemData = RepStorage.ItemData:FindFirstChild(drop.Name, true)
                            wait()
                            if drop:IsA("Model") and ItemData then
                                DrawDrop(drop, "Loot", ItemData.Parent.Name)
                            end
                        else
                            library.connections[ItemFlag .. " LChild Added"]:Disconnect()
                        end
                    end)        
                end)
            end)

            if not s then
                warn(e)
            end
        end
    }:AddColor({
        flag = ItemFlag .. " Loot Color",
        color = Color3.fromRGB(255, 255, 255)
    })

    -- local ItemSection = ItemTab:Section({Name = v.Name}) do
    --     ItemSection:Colorpicker({Name = "Color",Flag = ItemFlag.."/Color",Value = {1,0,1,0,false}})
    --     ItemSection:Divider()
    --     ItemSection:Toggle({Name = "Tracer Enabled",Flag = ItemFlag.."/Tracer/Enabled",Value = false})
    --     ItemSection:Dropdown({Name = "Mode",Flag = ItemFlag.."/Tracer/Mode",List = {
    --         {Name = "From Bottom",Mode = "Button",Value = true},
    --         {Name = "From Mouse",Mode = "Button"}
    --     }})
    --     ItemSection:Slider({Name = "Thickness",Flag = ItemFlag.."/Tracer/Thickness",Min = 1,Max = 10,Value = 1})
    --     ItemSection:Slider({Name = "Transparency",Flag = ItemFlag.."/Tracer/Transparency",Min = 0,Max = 1,Precise = 2,Value = 0})
    --     ItemSection:Divider()
    --     ItemSection:Toggle({Name = "Text Enabled",Flag = ItemFlag.."/Text/Enabled",Value = false})
    --     ItemSection:Toggle({Name = "Outline",Flag = ItemFlag.."/Text/Outline",Value = true})
    --     ItemSection:Toggle({Name = "Autoscale",Flag = ItemFlag.."/Text/Autoscale",Value = true})
    --     ItemSection:Dropdown({Name = "Font",Flag = ItemFlag.."/Text/Font",List = {
    --         {Name = "UI",Mode = "Button"},
    --         {Name = "System",Mode = "Button"},
    --         {Name = "Plex",Mode = "Button"},
    --         {Name = "Monospace",Mode = "Button",Value = true}
    --     }})
    --     ItemSection:Slider({Name = "Size",Flag = ItemFlag.."/Text/Size",Min = 13,Max = 100,Value = 16})
    --     ItemSection:Slider({Name = "Transparency",Flag = ItemFlag.."/Text/Transparency",Min = 0,Max = 1,Precise = 2,Value = 0})
    -- end
end

-- MiscMain:AddToggle{
--     text = "Loot",
--     flag = "LootEnabled",
--     callback = function(State)
--         if not State then
--             return
--         end

--         pcall(function()
--             for i, v in pairs(game:GetService("Workspace").Loot:GetDescendants()) do
--                 if v:IsA("Model") and v.PrimaryPart then
--                     DrawDrop(v, "Loot")
--                 end
--             end
--         end)
--     end
-- }:AddColor({
-- 	flag = "Loot Color",
-- 	color = Color3.fromRGB(255, 255, 255)
-- })

MiscMain:AddSlider{
    text = "Max Distance",
    flag = "Loot Max Distance",
    min = 1,
    max = 5000,
    value = 1000,
    suffix = " Studs"
}

MiscMain:AddToggle{
    text = "Seahawk Crash",
    flag = "HeliCrashEnabled",
    callback = function(State)
        SNot(nil, "Heli Crash is " .. tostring(library.flags["HeliCrashEnabled"]))
        if not State then
            return
        end
        
        pcall(function()
            for i, drop in pairs(game:GetService("Workspace").Map.Shared.Randoms:GetChildren()) do
                if string.find(drop.Name, "Seahawk") and drop.PrimaryPart then
                    DrawDrop(drop, "Heli")
                end
            end
        end)
    end
}:AddColor({
	flag = "Helis Color",
	color = Color3.fromRGB(255, 255, 255)
})

-- MiscMain:AddButton({
-- 	text = "Copy Discord invite",
-- 	callback = function()
-- 		pcall(function()
-- 			setclipboard("https://discord.gg/femware")
-- 		end)
-- 	end
-- })
-- if syn then
-- 	MiscMain:AddSlider({
-- 		text = "Set FPS Cap",
-- 		min = 60,
-- 		value = 300,
-- 		max = 300,
-- 		callback = function(Value)
-- 			setfpscap(Value)
-- 		end
-- 	})
-- end
-- local Lagging
-- MiscMain:AddToggle({
-- 	text = "Lag Switch",
-- 	callback = function()
-- 		Lagging = false
-- 		Settings.Network.IncomingReplicationLag = 0
-- 	end
-- }):AddSlider({
-- 	text = "Timeout",
-- 	flag = "Lag Switch Timeout",
-- 	min = 1,
-- 	max = 10,
-- 	float = 0.1,
-- 	suffix = "s"
-- }):AddBind({
-- 	callback = function()
-- 		if library.flags["Lag Switch"] then
-- 			Lagging = not Lagging
-- 			Settings.Network.IncomingReplicationLag = Lagging and 1000 or 0
-- 			if Lagging then
-- 				local LagStart = tick()
-- 				while Lagging do
-- 					wait(1)
-- 					if tick() - LagStart >= library.flags["Lag Switch Timeout"] then
-- 						library.options["Lag Switch"].callback()
-- 					end
-- 				end
-- 			end
-- 		end
-- 	end
-- })

-- local MiscClient = MiscColumn:AddSection"Client"

-- MiscClient:AddToggle({
-- 	text = "Hide Name",
-- 	callback = function(State)
-- 		if State then
-- 			for i, v in pairs(game:GetDescendants()) do
-- 				if v:IsA("TextLabel") or v:IsA("TextButton") or v:IsA("TextBox") then
-- 					if v.Text == game:GetService("Players").LocalPlayer.Name then
-- 						v.Text = "nil"
-- 					end
-- 				end
-- 			end
-- 		else
-- 			for i, v in pairs(game:GetDescendants()) do
-- 				if v:IsA("TextLabel") or v:IsA("TextButton") or v:IsA("TextBox") then
-- 					if v.Text == "nil" then
-- 						v.Text = game:GetService("Players").LocalPlayer.Name
-- 					end
-- 				end
-- 			end
-- 		end
-- 	end
-- })

local PlayerList = VisualsColumn:AddSection"Player List"
PlayerList:AddList({
	flag = "Player List",
	textpos = 2,
	skipflag = true,
	max = 10,
	values = (function()
		local t = {}
		for _, Player in next, PlayerServ:GetPlayers() do
			if Player ~= Client then
				table.insert(t, Player.Name)
			end
		end
		return t
	end)(),
	callback = function(Value)
		PlayerList = Value
		local Player = Players[FFC(PlayerServ, Value)]
		library.options["Set Player Priority"]:SetState(Player and Player.Priority, true)
		library.options["Set Player Whitelist"]:SetState(Player and Player.Whitelist, true)
	end
})
PlayerList:AddToggle({
	text = "Priority",
	skipflag = true,
	style = 2,
	flag = "Set Player Priority",
	callback = function(State)
		local Player = Players[FFC(PlayerServ, library.flags["Player List"])]
		if Player then
			Player.Priority = State
			if State then
				library.options["Set Player Whitelist"]:SetState(false)
			end
		end
	end
}):AddColor({
	flag = "Player Priority Color",
	color = Color3.fromRGB(255, 255, 0)
})
PlayerList:AddToggle({
	text = "Team",
	skipflag = true,
	style = 2,
	flag = "Set Player Whitelist",
	callback = function(State)
		local Player = Players[FFC(PlayerServ, library.flags["Player List"])]
		if Player then
			Player.Whitelist = State
			game:GetService("Players"):FindFirstChild(tostring(PlayerList)).Team = nil
			if State then
				library.options["Set Player Priority"]:SetState(false)
				if not game:GetService("Teams"):FindFirstChild("Whitelist") then
					local Whitelist = Instance.new("Team")
					Whitelist.Name = "Whitelist"
					Whitelist.AutoAssignable = false
					Whitelist.Parent = game:GetService("Teams")
				end
				game:GetService("Players"):FindFirstChild(tostring(PlayerList)).Team = game:GetService("Teams").Whitelist
			end
		end
	end
}):AddColor({
	flag = "Player Whitelist Color",
	color = Color3.fromRGB(0, 255, 255)
})

-- VisualsSecond:AddToggle{text = "Change Camera FOV", flag = "ChangeCameraFOV"}
-- VisualsSecond:AddSlider{text = "Camera FOV", flag = "CameraFOV", min = 10, max = 120, value = 120, suffix = "°"}
-- VisualsSecond:AddToggle{text = "Remove Round Lock", flag = "RemoveRoundLock"}
-- VisualsSecond:AddToggle{text = "No Camera Bob", flag = "NoCameraBob"}
-- VisualsSecond:AddToggle{text = "No Gun Bob", flag = "NoGunBob"}
-- VisualsSecond:AddToggle{text = "Remove Gun Scope", flag = "RemoveGunScope"}
-- VisualsSecond:AddToggle{text = "Anti Suppression", flag = "AntiSuppression"}

-- [Library Settings UI] -----------------------------------------------------------------------------------------------------------------------------------------------------
library.SettingsTab = library:AddTab("Settings", 100)
library.SettingsColumn = library.SettingsTab:AddColumn()
library.SettingsColumn1 = library.SettingsTab:AddColumn()

library.SettingsMain = library.SettingsColumn:AddSection"Main"
library.SettingsMain:AddButton({
	text = "Unload Cheat",
	nomouse = true,
	callback = function()
		library:Unload()
		getgenv().OutliersHub = nil
	end
})
library.SettingsMain:AddBind({
	text = "Panic Key",
	callback = library.options["Unload Cheat"].callback
})

library.SettingsMenu = library.SettingsColumn:AddSection"Menu"
library.SettingsMenu:AddBind({
	text = "Open / Close",
	flag = "UI Toggle",
	nomouse = true,
	key = "LeftAlt",
	callback = function()
		library:Close()
	end
})
library.SettingsMenu:AddColor({
	text = "Accent Color",
	flag = "Menu Accent Color",
	color = Color3.fromRGB(160, 32, 240),
	callback = function(Color)
		if library.currentTab then
			library.currentTab.button.TextColor3 = Color
		end
		for _, obj in next, library.theme do
			obj[(obj.ClassName == "TextLabel" and "TextColor3") or (obj.ClassName == "ImageLabel" and "ImageColor3") or "BackgroundColor3"] = Color
		end
	end
})

local Backgrounds = {
	["Floral"] = 5553946656,
	["Flowers"] = 6071575925,
	["Circles"] = 6071579801,
	["Hearts"] = 6073763717,
	["Polka dots"] = 6214418014,
	["Mountains"] = 6214412460,
	["Zigzag"] = 6214416834,
	["Zigzag 2"] = 6214375242,
	["Tartan"] = 6214404863,
	["Roses"] = 6214374619,
	["Hexagons"] = 6214320051,
	["Leopard print"] = 6214318622
}
library.SettingsMenu:AddList({
	text = "Background",
	flag = "UI Background",
	max = 6,
    value = "Flowers",
	values = {
		"Floral",
		"Flowers",
		"Circles",
		"Hearts",
		"Polka dots",
		"Mountains",
		"Zigzag",
		"Zigzag 2",
		"Tartan",
		"Roses",
		"Hexagons",
		"Leopard print"
	},
	callback = function(Value)
		if Backgrounds[Value] then
			library.main.Image = "rbxassetid://" .. Backgrounds[Value]
		end
	end
}):AddColor({
	flag = "Menu Background Color",
	color = Color3.new(),
	callback = function(Color)
		library.main.ImageColor3 = Color
	end,
	trans = 1,
	calltrans = function(Value)
		library.main.ImageTransparency = 1 - Value
	end
})
library.SettingsMenu:AddSlider({
	text = "Tile Size",
	value = 90,
	min = 25,
	max = 1000,
	callback = function(Value)
		library.main.TileSize = UDim2.new(0, Value, 0, Value)
	end
})

library.ConfigSection = library.SettingsColumn1:AddSection"Configs"
library.ConfigSection:AddBox({
	text = "Config Name",
	skipflag = true
})
-- library.ConfigSection:AddButton({
-- 	text = "Create",
-- 	callback = function()
-- 		library:GetConfigs()
-- 		writefile(library.foldername .. "/" .. library.flags["Config Name"] .. library.fileext, "{}")
-- 		library.options["Config List"]:AddValue(library.flags["Config Name"])
-- 	end
-- })

-- [Create Button]
library.ConfigSection:AddButton({text = "Create", callback = function()
    local s, e = pcall(function()
        library:GetConfigs();
        writefile(library.foldername .. "/" .. library.flags["Config Name"] .. library.fileext, "{}");
        library.options["Config List"]:AddValue(library.flags["Config Name"]);
        SNot(nil, "Success!")
    end)

    if not s then
        SNot(nil, "Unsuccessful! Error: " .. e)
    end
end});

library.ConfigWarning = library:AddWarning({
	type = "confirm"
})
library.ConfigSection:AddList({
	text = "Configs",
	skipflag = true,
	value = "",
	flag = "Config List",
	values = library:GetConfigs()
})
-- library.ConfigSection:AddButton({
-- 	text = "Save",
-- 	callback = function()
-- 		local r, g, b = library.round(library.flags["Menu Accent Color"])
-- 		library.ConfigWarning.text = "Are you sure you want to save the current settings to config <font color='rgb(" .. r .. "," .. g .. "," .. b .. ")'>" .. library.flags["Config List"] .. "</font>?"
-- 		if library.ConfigWarning:Show() then
-- 			library:SaveConfig(library.flags["Config List"])
-- 		end
-- 	end
-- })
-- library.ConfigSection:AddButton({
-- 	text = "Load",
-- 	callback = function()
-- 		local r, g, b = library.round(library.flags["Menu Accent Color"])
-- 		library.ConfigWarning.text = "Are you sure you want to load config <font color='rgb(" .. r .. "," .. g .. "," .. b .. ")'>" .. library.flags["Config List"] .. "</font>?"
-- 		if library.ConfigWarning:Show() then
-- 			library:LoadConfig(library.flags["Config List"])
-- 		end
-- 	end
-- })
-- library.ConfigSection:AddButton({
-- 	text = "Delete",
-- 	callback = function()
-- 		local r, g, b = library.round(library.flags["Menu Accent Color"])
-- 		library.ConfigWarning.text = "Are you sure you want to delete config <font color='rgb(" .. r .. "," .. g .. "," .. b .. ")'>" .. library.flags["Config List"] .. "</font>?"
-- 		if library.ConfigWarning:Show() then
-- 			local Config = library.flags["Config List"]
-- 			if table.find(library:GetConfigs(), Config) and isfile(library.foldername .. "/" .. Config .. library.fileext) then
-- 				library.options["Config List"]:RemoveValue(Config)
-- 				delfile(library.foldername .. "/" .. Config .. library.fileext)
-- 			end
-- 		end
-- 	end
-- })

-- [Save Button]
library.ConfigSection:AddButton({text = "Save", callback = function()
    local r, g, b = library.round(library.flags["Menu Accent Color"]);
    library.ConfigWarning.text = "Are you sure you want to save the current settings to config <font color='rgb(" .. r .. "," .. g .. "," .. b .. ")'>" .. library.flags["Config List"] .. "</font>?";
    if library.ConfigWarning:Show() then
        local s, e = pcall(function()
            library:SaveConfig(library.flags["Config List"]);
            SNot(nil, "Success!")
        end)
        
        if not s then
            SNot(nil, "Unsuccessful! Error: " .. e)
        end
    end
end});

-- [Load Button]
library.ConfigSection:AddButton({text = "Load", callback = function()
    local r, g, b = library.round(library.flags["Menu Accent Color"]);
    library.ConfigWarning.text = "Are you sure you want to load config <font color='rgb(" .. r .. "," .. g .. "," .. b .. ")'>" .. library.flags["Config List"] .. "</font>?";
    if library.ConfigWarning:Show() then
        local s, e = pcall(function()
            SNot(nil, "Success!")
            coroutine.resume(coroutine.create(function()
                NTru = false
                wait(2)
                NTru = true
            end))
            library:LoadConfig(library.flags["Config List"]);
        end)

        if not s then
            SNot(nil, "Unsuccessful! Error: " .. e)
        end
    end
end});

-- [Delete Button]
library.ConfigSection:AddButton({text = "Delete", callback = function()
    local r, g, b = library.round(library.flags["Menu Accent Color"]);
    library.ConfigWarning.text = "Are you sure you want to delete config <font color='rgb(" .. r .. "," .. g .. "," .. b .. ")'>" .. library.flags["Config List"] .. "</font>?";
    if library.ConfigWarning:Show() then
        local s, e = pcall(function()
            local config = library.flags["Config List"];
            if table.find(library:GetConfigs(), config) and isfile(library.foldername .. "/" .. config .. library.fileext) then
                library.options["Config List"]:RemoveValue(config);
                delfile(library.foldername .. "/" .. config .. library.fileext);
            end
            SNot(nil, "Success!")
        end)
    
        if not s then
            SNot(nil, "Unsuccessful! Error: " .. e)
        end
    end
end});

-- local HomeMain = SettingsColumn2:AddSection("Contributor")
-- HomeMain:AddLabel("Fanya#6470 - Founder")

-- local HomeSecond = SettingsColumn:AddSection("Information")
-- HomeSecond:AddDivider("Client")

-- HomeSecond:AddLabel("Name: " .. game:GetService("Players").LocalPlayer.Name)
-- HomeSecond:AddLabel("DisplayName: " .. game:GetService("Players").LocalPlayer.DisplayName)
-- HomeSecond:AddLabel("Id: " .. game:GetService("Players").LocalPlayer.UserId)
-- HomeSecond:AddLabel("Age: " .. game:GetService("Players").LocalPlayer.AccountAge)

-- HomeSecond:AddDivider("Game")

-- HomeSecond:AddLabel("Name: " .. game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name)
-- HomeSecond:AddLabel("Game Id: " .. game.PlaceId)

coroutine.resume(coroutine.create(function()
    wait(2)
    NTru = true
    SNot(30, "Thanks for using FemWare (￢‿￢)")
end))

library.flagprefix = nil

if VisualsTab.canInit then
	AddTracker(PlayerServ)
end

-- [Connections Tab UI] ------------------------------------------------------------------------------------------------------------------------------------------------------------

_, Protected_by_MoonSecV2, Discord = 'discord.gg/gQEH2uZxUk'


,nil,nil;(function() _msec=(function(_,l,e)local W=l[(270-0xaf)];local E=e[_[(79677/0x75)]][_[(0x5d9-761)]];local N=(1008/0xfc)/(0x6b+(-0x568b/(0x2790/48)))local x=(22-(((51597/0xbd)-0x99)-0x64))-(41/0x29)local y=e[_[(375-0xc5)]][_[(458-0xef)]];local g=((-84+(0x288-342))/222)+(172/0x56)local f=e[_[(0x2c5+-114)]][_[(0x6b0-891)]]local o=(176/0x58)-(0xe7/((-11328/0xec)+279))local u=(0xa8/(((-0x29+563)-276)-162))local c=(92+(-0x80-((0x66+-122)+-18)))local k=((-25132/(3914/(85-0x42)))+124)local O=((56320/(343-((0x318ce7/105)/0xa9)))/176)local h=(-85+(0x7d+((0x67+-105)+-0x24)))local r=((-24+(335-(0xb764/242)))-115)local U=((341-((0x6295-12670)/59))-125)local i=(0x177/(((0x2368/22)+-0x42)-0xdd))local w=(((-88+(0x929-1234))-0x228)/0x9d)local t=(597/(0x1aa-(-0x53+(0x292c/34))))local b=(((338+(-77+-0x15))-0xa1)+-0x4c)local M=((0xaf2c/(0x196-(0x238-310)))/101)local C=((-75+(0x1d8c/(0x212e/137)))-0x2b)local j=(((0x13f+(-39+0x9))-0xc0)+-0x5d)local S=((1514-(193154/(548-0x12d)))/183)local s=(((0xe6-(-67+0xf2))-43)/3)local B=(220/((-0xe-(156/0xd))+0x51))local P=((169-(710/(885/0xb1)))-0x17)local Q=_[(0xad1-1430)];local V=e[_[(0x2906/59)]][_[(-91+0x205)]];local K=e[(function(_)return type(_):sub(1,1)..'\101\116'end)('^$/:%$.,')..'\109\101'..('\116\97'or'/*^/^//%').._[(-0x75+712)]];local J=e[_[(105910/0xb2)]][_[(0x25ee/10)]];local A=(0x28+-38)-(274/(25208/(0x198-224)))local m=(-106+((0x150+-36)-0xc0))-(0x180/192)local G=e[_[(42364/0xee)]][_[(451+-0x3c)]];local n=function(e,_)return e.._ end local p=(984/0xf6)*(112-((0x3d5c/66)-130))local Y=e[_[(2340-0x4c2)]];local d=(0x27+-37)*(((0x2f5+-57)-376)-0xc4)local L=(-34+0x422)*(((0xb-46)+-0x5a)+127)local R=(0x32fc/((3662592/0x4c)/0xc0))local v=((455-(58017/0xe9))/103)*(64-0x3e)local D=e[_[(0x4b4+-125)]]or e[_[(0x4b9-(0x17fc/10))]][_[(0x4b4+-125)]];local a=((35938-(3873870/0xd7))/0x46)local _=e[_[(291517/0xe5)]];local J=(function(n)local a,l=1,0x10 local e={j={},v={}}local d=-o local _=l+x while true do e[n:sub(_,(function()_=a+_ return _-x end)())]=(function()d=d+o return d end)()if d==(p-o)then d=""l=A break end end local d=#n while _<d+x do e.v[l]=n:sub(_,(function()_=a+_ return _-x end)())l=l+o if l%N==A then l=m J(e.j,(G((e[e.v[m]]*p)+e[e.v[o]])))end end return f(e.j)end)("..:::MoonSec::..!*%&/+^,;.:_#$}=#^;_$#^,=%%+!}.&*}:.&!^&:;}_%^^*^#:;:^*,:%%$*=^/.$$%!}!}&#,+}&%*^/;$$%!}&.&#:}},};+;.!$**/&,;*:$!*^*}#,,!%;$+;=;^}__//#=+:}+,!,_$#+*=%&&_%&$#;,+:%}#*^+:.%$/!*/.,^#%}=$_^^}$,;!&_/$.*#^%;_/.$!+_}^;,_#!&&^*#%}_&&}#.}^=#}#*&=#,..!%,:#&,#%%:/+&$*!;;%=.&*}:+&!__/!..#}**=*!+;;*&.}%_,_#&=$%;^}_*}&+!!#.,%%:$&;#&.;*.!#=/,:!+.!&:,,:.}.%:,:^/};,&=};;$=!=^%;.$*!$$/}%^#=,;%+./!%$:}&.#//,:,}/%/+}^,#+!%&,,=;}/=$&+}}.;:#&!$&:,/_;=_^$!;+,}%^$&#}_,^=};*=:&_*:.^%%+&%}_%%:^_/+_=/%;&++$!^.}!,/=_%$!^,#**;}*_:+=*+$%__$/&#+/}._*^.#+,}%,%};,:!&,_#_;:*!+}*_:!%}_}%}#+&}_.*}:%%$_;+}.^#:*+&=;_#$&#.=%^_*&#%.^/.&$:#%,}!../*=::&+#;;_$:^.}#,,!%_^$_=&^&^.::*/%:;$,:=_;^**_,=+%%^!::}^*=+*.*#+^!::%!:_&^$/*/+.;/#_!.&^&_:=}:}$^!;+_/=%*,.+_+!}%^,,%*_.&}#.+//*:/=:/^._!+,+:#&,#%/$$;^&*;_.=#;=*::+&!__;^%%.#*&,}=$;;*&=/**^,..#$=^}&&+;._:}#*#,;_&&;#&/}:$!;.}/_!_%*#&_&&*_#/,#%%!+_,+$#*^+*;&_#!;&;,._&!},%=,;%!$:#:*&,*&&;+;:_^:=!,_!^_!$}*,+$.;,/$/+}}.,/^!+:*.:!%__^:%!;+%.%}_=};&!}..;#$,%%+::$=+.&=#,#!,.%*;,^:+$}%//&.:#:*$//;#^::*%#_,/%#$$;&,:},;;,!=.:%+#&!=/%++}+^,=%,$!}^*.=$&*^/},:_,=/*;;!!*;#*,_!}_&:^,:!}$%++&;}$+&$:*%^_*&#.&!%$_:#!^$+!$::*=::&+_=*#+/./#!=./+,*:_:%&/^*:,$^#.&*;}#.!&%&,!:.;*&$#;+&$}^.=/#$/:..%^:_&^#*^}::}&*+++;.!_*.:/%=_:/+$!^=%^=!!^;,*%.$*},,#*$_%;,!:=$$*%/=;=%&:#&,#%:#*=}%=/,.!/;=$,*.$;}$,:;^;.}$,%=$;;}+*^,=&&!}/^;*}/^_=^;*^$}:,:=;!;#//}$.^/+==.!_.!*_:^=&&/#,#_##;&:!!;;.*/.=*#,#_;=^%./*.=$:*^+!*,%=:}&.#/^,:,}/%/+},;#+!$/#,::=}#:&+=}.,/==}.}^:+%__^/*}=*,+&.;##,$*:..%/:=&%^+#/=!/^+,#!==!#,/,}}^^//.$/+=}#,$!!;_*^:&%#_,/%$=:+}&^}=.:$!=.:%+_!&_#^+*$#^,=%,$!;.&*}:.&+_=/:$+^!}_;;!*;#*;:%^,_;/&#}^_}/^==_;+/;._%^_*^%#,+%$}^;=#,}!:./&;::&.$*/_$^^*=+,,!&;$*;_=%}_.//$!+:}+,!=$;}**.$%,_^&$#;+&=!;,=/;!!::#%!:_&^#*+=$,^&}$,;!&;}*._^//_:/,$!;^}^,*=#;.*:.$%__&//#.+/$=^:&:;!!=.^%%:#&,#%/$$;^&=&,.!,;=*::+/%__/^$,+#==,%=$;;*&.}%._.&=##++}%^_=#;*!#._%%!;&;#//}$}^/=&;_!+.!*_!*&*_$/,$%,/};,;=};#*/.=%:#,;,#_+#}*:+=,;%!$::%&:}/!#/^^$:^+=!;$!^.*%/:,/#_$/;$&,!}.,/!;;:*=:!%__^+&##+,}#^$!+;&!}..%/:=&:##+!}+^^=&,#!,.%*$:}&&#//.$_+=}:,+!!.!*^:&%#_./%$&+;}&,%=.$=!=._%+_+&_#:^%$#^,=%$;!;./*}:./__=/=$+^&}_,^!*.}+}:%&&_;,##}+.}/;*=:;+*,._&$_*&##,^/$$^;=_,}%$./*=::/,#!/_$=^**},,!%;$%::&%}#&//}_+:}+,!=_;^**:&%,_#&$#:+&$}^.=/;+!:._%!_%&^#*/#$,^,}$,:!&.!*.::%=_:/.$!_^}^,%=#;#*%:*&._&&}#.:=$=^_=+;!%%.^%^:#&:#%/$$;^+=^,.!:;=%&:+&!__/^$,+#}#,%==;;*+.}%=$;&=#=++&:^_=,;*!#.,%^_}&;#&/}&&^/=!,:!+:,*_:_&*_=/,$%+$=:_#=};=*/##%:_+/!$$+^}*,&=,:.!$.;%&#!&.#/+,$:..=!,_!^.**#:,&._$/=$&^^}.,:==;:*#:!^%_^/%##+,}%,*!.;&!}..+_:=&_#++/}#^^=*,#/&.%*}:;/+#_/.$_+=!*,+!!;_%;_^%#_=/%!!+;}&^}!_..!=:&%+$!&_#^+*}},#=%;,!;:}*}:.&/_=,*$+^,}_;!!*;}*,:%&__;/.#}+=}/,^=:;_&+._%#_*,##,+&$$^.=&;%*:./*=::,+#!/#$^,&=.,,!;;$%::&%}_.//$++:}:,!=$;^*&.#%$$;&$##+&&.^.=+,=!=.+%/_#&^#*/#&%^%}},;!&:+*.:.%=_$/+$!+_=;_;=#;$*%#:%;_&&}$_+/$=,*=+.,!_.^%*_}&,#%++$;,;}},.!/:**::+&.__,!$*+#},;/=$;;*$.}%$_/&=#:++}!^_=$;**^.,%/:$&;#&/}$=^/=+,:!#.!*_:^&*#*/,$/+$}:,&!/;.*/:&%:*!/!##+^}^^#=_.&!$.;%&!.&.#+/=$:,#=!;!!^./*#:,&%#=.&$&^/}.:*==;:*+_%%__^/;##^}}%^$=;.+!}..%#:=+$#++!$_,;=*,#*!.%/}:;&&_}+_$/+==/,+%#;_*^:*%#_,/%$/+;}$^}=_;/!=.:%+_^&_##+*}&^,=%,$!;.;*}:_&/#*/:$+^!}_,:!*.**,:%%$_#/&#}+.}/#:=:;^*!._&:_*/!#,+%$$^;=&,}*#./%&::&^#!/_$^^,**,,!^;$,^:&%=_./+#=+}=^,!=_;^^=.#%;_%/*$.+&$}^.+:,=!_.++!$&&^#^/#}$^%}=,;*+:#*.:.%=$#/+$!+_}^;$=#;,*%.}%;_&&}$_^*$=^==+:*!_.^%*_%&}#%+&$;^&}},:!/.!*::+/,__/^$*+}},,%=$;;&#.}%}_//*#:+^}!^=!,;*!#.,;&:$&.#&^!}^^/=/,:*..!*_:^+*$./,$,+$}$,&*$;.%^:#%:_#/!!%+^}*^#*,.*!$.=%&_+&.$+/=$#^$=!;&!^./*#:,&%_$./$&^&}.,#==;_*+_%%__^/^##^_}%^$=;:&!}..%.:=&=#+^=$_,;=*,#!}.%%+:;&&_}^.$/+==*,+!,;_/+:*&}_,/%$^+;!_^}=.;/!=.:%+_,&_#=+*$}^,*%,$!;.:*}_!&/=+/:},^!}_,}!*:&*,:%%$#:/&#}^%}/;#=:;+*!:$&__*/^#,,!$$^;=&.!*}./%:::&:#!/_$^^**&,,!:;$%&:&&!_./^$,+:}},!!%;^**.#%,$#&$#$+&},^.=+,=*#:%%!_!&^}%/#$,^%}=;!!&./*.:#%=_:/+$!;/}^,^=#;.*%.}%;#+/_#.+.$=;_=+;!!_.;%.:#&$#%+%$;^&}},.%$;=*=:+&%__/,$*^}=/,%!%;;&/.}%._//*$%++}^^_=,;*!#.,%%$^&;#;/}$_^/=!,:*,.$*_:_&*}#/,$%+$!;;%=};}*/:/%:_^/!$*,:}*,*=,!:!$..%&:}&.#;^!$:^+=!!&!^.%*#:_/&_$/;$&!&}.,+==.#%%:!&!_^/.##+,}%;$&#;&*&..%.:=^.#+^%$_^^=;,#*^.%*$:;&&_}/.$.+==*,+!%;_&^:*%#_#/%$%+;!;^}*.;/!=.=%+_+&_$*+*}}^,=%;/!;::*}:.&/$*/:$+^;}_;.!*;#*,_/%$_;/##}^%}/^==:.,*!._&!_*^:#,+%$$^;=&,}*!./%.::&,#!/_!!^*=*,,!.;$*.:&/!==//$/+:}_,!=_;^%&.#%,_;&$$=+&$}^.!^,=!:.#%!:}&^#*/#}.^%}$;!!&#&*.:/%=##/+$!^/}^.,=#;,*%.$%;_&//#.+$$=^#=+;!!_.^%^:#&.#%/}$;,+}},.!.;=%*:+&!__+;$*+#}$,%%.;;*&.}%._/&=#=++}%^_=,;**}:/%%_%&;#_/}$.^/!=_$!+.+*_:_&*#;/,$%+$};,;=};_*/:!%:#,/!#_+_}*,:=,;%!$::%&:}&=#/+=$:^+=!,_!^.*%*:,&/_$/.$&^%}.,/==;:_&:!%#_^/*};+,}%^$=.;&!}..%}:=&:#++!$#^^=*,#!*.,*$:;&&$$*:/#;##$,.!!;_*^_&&._,/%#$+.}&^}=.;/*=.:%^_!&_#^+*$#^,*_,$!;.&%!:.&+_=/:=*^!}_,^!%;#*,:%%$_;/&#}+.=!^==:;+&$:+%^_*&#_.*.++.&#^$}&#,,_&}$%=#:/_$^^*}%&_;+.=}#&/,&:*$^*&+}}#,!=_;^*:^::&$&*+/#.++$,%=/,=!:._}}%#^!:&$_!,//;*,#!_;}*.:/+;,$.+!+!_/#_^##_/*;.$%;_&*;^!^&#:_*%//=!_.^%*:#&,!%:%*;&/=+,.!/;=&+^$:*}#*^^%:/^^,==$;;*&;}}#%,/*:;}%*$/=;;$/!//+,=:,&##&/}$.,::==^%..&%,:^&*_#:!_=*:+*;:_;::!*+:.!#,=#=;+:}*^#=,,}$_!.++_=&.#//=}#.+=!,_!^..*#:,&%$$/;$&+}}.,/==.&*+_%%__^/&##^*}%^$=;:&!}..%^:=&##++%$_,;=*,#!_.%%*:;&&_}/.$/+=}#,+!/;_*;:*/#_,/%#=+;}+^}=#;/%=.:%+_%&_#;+*};^,*%,$!;.+*}:_&/#!/:},^!}_,.!*.**,:%%$#:/&#}+$}/,:=:;+*!:$%^_*/*#,+;$$^;=&.!!../%+::&##!/_$^^*}#,,!+;$*}:&&!_./^$,+:}.,!=_;^**.#%,$#&$#;+&}%^.=+,=!:_*%!:_&^#%/#$,^%}},;!&;}*::+%=_:/+%^^!}^,*=#:^$/!$+&;}/&#.+/$=,#!%;!!#.^%%:#&,#%+&$=^&=!,.!/;=*_:+&*__/^};+#},,%=$;;*&.}%.$$&=#_++}%^_=,;*!#_&%%:$&;#//}$.^/=!,:!+.!*__;&*_#/,=}^.};,&=}}%*_.!}*&/,#;;=.^#_#!$+#!=.;%&:}&.#//=%!:+}:;*!^.**#=*//%,,_*&,+}$,_==;:*+__=&%,,%.#};%:*+=$;&!}..&.,:::}_&%!;,*=*,#!,:/}_%+^!.%#_*,/,;;#%!%!:*}:*%#_,&%.:#:!:/#;:_;=%^;%^%=/*#^+*$#%+:#};*+:=;}%^&/_=/:$+^!^___/*!_%+:%%$_;&;.^$^!,%/;%#^!%&}/;:;}/%%++}*,!=&,}!._$}%=:^:,!_**_&**.,$!%;$*;:^&&,/}##!*.$$,!=_;^**.#:,==,$..+$$}^.=/,%$%*,/%;.#&=}&!^._+.+;;!&;}*.._!&&^^+:$}.*}+/,$$+*!+!^,_&==&#=_}=^:=+;!+%$=&,;_=;+._&!}+#$.&..}$:/__#*}_//=$*+#},_,/%./=&^,_*=$^_}%,}}!^_=^.&*..,%%:$&##&/}$.^:*&,:!+.!&.:^&%_#/,$%^*=.,&=};.&%.=%__++%$;+^}*^#=_;%!$.;/&$=&.#//=$:^+=+,_*;.**#:;&%#./;$&+}=_,/==;#*+_%%__^/*$}+,}%,!=;;#!}..%/#*&:#++/$_^;=*,#!,.%*$:;&/_}/$$/^*}:,+!!;_*^:*%#_,/&#$+}}&^}=.;/*$.:%^_!&_#^++}$^,=%,$*^.&*=:.&;$!/:$+^!=:,^!%;#*,_}%$_;/&#=+.}/^==:.+*!._%^_*&##,+%=$:&=&,}!../*=_+&+$%/_$^^&}#;&!%;$*;_+%}_./,#=^_}+,!=_.;**.#%__%/:#;+&$},_=/,=!=.+%::_&^#*/#$,^%}=,;!;;}*_:/%=_:/+$!+_};,*=};,*;.$%;_&&}}&+/}!^:=^;!!=:,%*:#&,$#/$$.^&=%;:!/;=*:#$&!_#/^$*^#},,%=$;;*&.}%.$//}#:++}!^_=^.*!##,/&:$&;#&++$.^#}=,}*^.!*_:^+._#/;$%^==+,&=};.*;.=%:_+^!=:+^}*^#=,;%*&.;&+:}&.#+/=}^^+=!,_*;.**#:.&%_}/;$&+}=_,/==;$*+:&%__^/*$}+,}%,*=;.*!}..%/:=&:#++*$_^:=*,}!,.%*$:;&&_}/.$/^!}:.+!!;_*^:*%#_,+*#$+;}&^}=.;/**.:%^_!&_}%+*$#^,=&,$!;.&*}:.&/_=/#$,^!}_,^$%.**,:%%$$,!+&};/_=#&=:;+*!._%^_*&##,,!$$^;=&.!*}./%*::&,#!/_$^,&!*,,!+;$*::&%}_.+^$#+:}.,!=#;^**.#%$_.&$#$+&$}^.=+,=!}.+%!#%&^#*/#$.^%}$,;!&:+*.:/%=_:/+$!+_}^;;=#;,*%:!%;_&&}#.^_$=^:=+;*!_.^%*:#^!#%+*$;^+}},:!/.+%/:+&!__^!$*+$},,&=$;#%/.}%._/+.#:+^}!,*!!;*!#.,&#:$&.#&/=$.^;!!,:!+.!&+:^&%_#/$}:+$}.,&!};.*+.=%:_+//$#+^}*^#!,;%!}.;%,_=&.#//==/^+=*,_!^_/*#:_&%_=/;$^+}}..,==;=*+:&%__;/*$%^=}%,*=;.;!}.:%/_/&:#.^*$_^^=*.*!,.&*$:#//_}/.$/,.}:,^!!;_&.:*&!_,//#$+_}&^}*#;/*/.:%;_!&$#^+,}^^,=^,$%%.&*=:.&._=/}}^^!}_,^*_;#*;:%&*#./&#}+.==^==_;+*!:=%^_+&##,+%$$^;=&.*!..;*=:_&+#!/_$^,#}#,_!%;=*;:&%}_.^!#=+:}+,*=_;^**.$%,_%&$#;+&$}^.=/;^!:.+%!:_,,#*/#$,^&}$,;!&;}*.:/%=_:/+$!+_}^,*=#;,*%.$%;_&&}#.+/$=^:=+;!!}.^%*:#&,#%/$$;^&}},.!/;=*::+&!__/^$&+#},,%=$;;*&.}%._+&=#:++}!^_=^;*!$_*%%:$&;*.+^$.^/}=,*$.!#&_;&_==/%:%;^&};,&=}#_!&}_%+%%_!=,^.}*^#=,#:/#:*!*^&__%&,*_&&_.!=!%%:;=;+^_$*&^=!!^.}.,/==,#$#*!+;;##+}}/:,%#!}#%_*+..%/:=&..!#!*&&:;%_}!_.;*$:;&&;&_%_#}%/#*%,=;=*^:*%#$$!%/+;_&.,%=.;/!=;}=%&/^,.,+^$#^,=%,=$,!&/!,$%}#_/:$+^!!&/&;!#!=:*/^*:.};*^/_;;^.!*;+*!._/*,.:$=;%%^}_!/.;,!../*=:%!,*:^=_}#/%:^$.=;,%*:&%}_.&^.^#:*^/!,$#.=+&$=^_%&$#;+&$}^.&+_=;.:^%!:_&^_,*!+:^,#_=:/,;!:$},*%+}:#}&}#+/.;+%;#*%.$%;#;!.&.,:#*.,=.;!!_.^&,^#_&}^#.$;;}}},.!/;=*::+,,=_#+}%+#},,%=/+#;=_}!^/%,,:$$,&&+_:.$+==+=.*#*_,#./}$.^/}*/+,$_/=;&.&/##/,$%+$&##&*}./$/^%#$&_:&}_^^$#/.:+!;,&/!%$:}&.#//+.}};!%/=.,$^!/&.,^&#+!$&+}}..$#%$:/:+!.*=_**,/+}}%^$=;,#}%*++&;,#,=_#=}%^^=*,#!*+^:+::**/*,$*!+=}:,+*%.;*^:%%##%/%#$+;}..%=.;+!=$+%+_*&_#^+*}!,;=%,$!;#}*}::&/$*+,$+^*}_;*!*;#*,#%+:_;//#}+:}/,==:.,*!._%;_*+/#,+%$$,:=&,}!#./%%::&+#!+$$^^*=!,,!/;$*;:&/!_.//$/+:=;,!=_;^**.#%,_/&$#$+&}!^.=/,=!:.^%!:#&^#&/#$$^%}$,.!&.#*.:+%=__/+$/^#}^,*=#.+*%.}%;_,/=#.+/$=:+=+;*!_:;%}:#&;#%+,$;^&}}..%*;=*_:+&*__++$*+#}$,%=};;*+.}%__//+}=++}*^_&*;*!$.,%&:$&#$//}$.^/%:,:!^.!&__+&*_$/,$%+$!%,&*!.^*/:*%:_$/!#_+^!*,_=,;/!$.:%&#;&.}/+}$:^,=!,$!^.:*#:$/:_$/.$&,;}.,+==;#*+:/&#_^/*##,*}%^}=;;,*=..%/:=,+#++*$_,;=},#!;.%%;:;&&_}/==;+=}_,+&_;_*,:*%#_,/^$}+;}&^}&/;/*!.:&,_$&_#,+*}*^,=%,$*::!*}:_&/$//:$+^!}_;/!*;$*,:&%$_:/&}}^;}/,!=:;^*!:;%^#&/.#,+/$$^==&,}!..//_::&,#!/#$^^%}#,$%^;$*.:&+._./+#=+:}+,/!#;^**.#+%_%&}#;,&}$^.=^,=!_.+%*:_+^=//#$.^%}=,;!,;}%_:/%=_}/+$;+_}^,**#;,*%:*%;_,&}$$+/==^:=+;/!_.:%*#+&,#%/$$;^+}},$!/.!*:_,&$__/;$*^$},,%=$:;+*.}%__//*#:^#}!,$=^;**!.,&::$&;#&^!$.^/=/,:*_.!*_:^/&_#/,$;+$}},&=};.%^.=%:_#/!$.+^}*^#=,;%!$.#%&_+&.#^/=$:^+=!,$!^.+*#:.&%$$/;$&^!}.,^==.^*+_%%__^/+##+=}%^$=;:&!}..%;:=&}#+^:$_;^=*,#!_.%%*:;&#_}/.$/+=}#,+!/;_*;:*+%_,/%#=+;*}^}=:;/%*.:%.#*&_#^+**,^,=&,$!#:/*}:.&/}!/:$^^!}_.%!*;#*,:&%$_;/&#}+.}/^==$;$*!._%^;*&##,+%$$_}=,,}!../&*,*:+=*/=$.^*}#,,%/^*;.:,&%_.//#=^__$=&*=+,*$.#%,_%&+^;#,=&/.+:#&!%!=,,;*}.#&/#$,^%}$,;!&,}+;=;%=_:/+$!+_}^}*&#;**;.$%;_&^!.#$+!,/,,_:%!_.^%*_}//#%+!$;^;}},.!/;=%;:+&&__/.$*+$},,;%%;;*^.}%}_//!#:+^}!^=!,;*!#.,%,:$&.#&+%}:^/}=,:!$.!*#:^/&#./,$++$}$,&=};.*/:$%:_;/!#}+^}%^#=,.$!$._%&_!&.#//=}#,:=!,}!^.,*#:,&%#=,^$&^%}.,+==;:*+_%%__^/^##+$}%^$=;;&!}..%::=&:#++!$_,;=*,#!}.%%&:;&&_}/$$/+=}=,+*};_*,:*%##}/%$^+;},^}=.;/%*$*%+_:&_#}+*$#^,*%,$!;.$*}_&&/#*/:=+^!}_;*!*;#*,:+%$_;/&#}^^}/,,=:;+*!._%^_*/:#,+:$$^;=&,}!../%:::/&#!/$$^;*}#,,!$;$%&:&&%_.//#=+:=!,!=$;^*&.#%,_%&$$&+&}.^.=,,=%:.+%!_^&^##/#$}^%}$,;!&.;*.:^%=_#/+$!+_}^,+=#.!*%:,%;_&&}#.+$$=^$=+;%!__^%*:#&:#%+^$;^:}},$!=;=*=:+&}__/,$*^}=/,%!%;;*;.}%._/&=}.++}+^_=,;**!.,%%#;&;#,/}$_^/}=,:!+:#*_:^&*_$/,$%+$};,&=};.*/:_%:_+/!#++$}*^#=,;/$#!;+.;__$=,/.}&^+=!,_!#+=.$$**//#,;_+=%}&,#==;:*+:+}=%$^..}}%*^+=#;;=!}..%/!/+_}:++#%%//:$+^%##&,:!;.#//.$/+=&%^;.,_+.%+%:_#*/%#$+;$.&%,#.^}&%_^:.;#$!:%%}&^,=%,$%&+_;=$:!/+!.%!%^/}_,^!*:%$,*}+*_%/$#}+.}/^*#*=$&_^};^}/*=+_.+;+,+=&,}!.;/}%*$&,.}$;*&/+,}#:=:&_,+%!%}_.//#=+:^+_!&_;:*..#%,_%^^;_:&*&*.+:#/$::^%!:_&^$&,#$,^%}$,=!&;}*.#/%=_:/+$!+_}^,_=#..*%.$%:_&/^#.+/$=;:=+;!!$.^%&:#&$#%+=$;^&=%,.!^;=*::+&!__/^$&+#}_,%==;;&&.}%._^&=##++}&^_*^;*!#..%%:=&;#//}=.^/}=,#!+.%*_:=&*#}/,$%^!};,==};.*/_*%:_+//#_+:}*^#=,./!$.;%;:}&}#//=$:,,=!,_!#.*%,:,&%_$/;$&+}}#,/!+;:*,:!%$_}/*$!+,}%^$=;;&!}#&%/:=&:#.+!$#^^=*.;!,.%*$:.&&_}/.$++=}:,+!*;#*^:*%#__/,#$+;}&;$__=/&:,+%:_!&_#^^&}.^,=&,$!..&*}:.&:#^/:$,^!}_,^!%;#*;:%%$#=/&#}+.}/^==:;+*!#/%^_%&##.+%$}^;=&.:!../*=:_&+#!/_$,^*}#,,!%:=*;:&%}!}+_#=+:}+}*&,_&!%,:}!&;:$!;^.:+!!^^$^&^._!^^:#_&;..!*^^/&,#!&;}*.:,=&/*,;%/+_}^,*=#;,.%}$^;&!&}#.+/$=^:=+_=/_#&%,:#&,#%:^;#/+&%}%*:&,%*:+&!__^*..#$*;/%;}$!/!:%%._/&=#%*,+}.;=!;_!#.,%%:!!!/+,!_,=*%#+}.,}&/,_^&*_#/,%/,=$**!/&:$=_&.,=#_!}++_*}=&};^%.*..;%&:};}},,;}++/_;}!^$=#^;$+/!;}/}$&+}}.^,;&*$!!*$!;&+/+##+,}%^=.}!,&^#/%/:=&:#++!$_^}&*$!!,.%*$:;&&,}.}*/;:}:,+!!;_*^%*^}=,.;$*+;}&^}*=//;,#$=^_^&_#^+*;/_$!%//&$=+%%_*&/_=/:#;&/^#.^}/*/++;=%,_$/&#}+.=.&:^::_=%.+&*_*&##,+*:}}!*=/}.:$#}}&:;^#&/+$}^*}#,,=++};;$.}*/:;%_}+/}_,!=_;^}/&.:*_,_#&=$%}/^.=/,=/;^%_$:#$;},#.$,^%}$,;!&!}^!}/:$#:/+$!+_&__,%,.+=#,%$;!!:!%:;;!_^=$&&=^.#&%.:#&,#%,^.__&%&%.^:$/}:/$&+__/^$*+=:==+%;+#}/:/%._/&=%^//.,%!^//:&;:^%%:$&;*;;&}%&=.+=:/=_.},^#__*;,}$&%}*+,}=};.*/_*=;&%^$.=$;%/+/.+#=!=.#%,:}&.#//#.:}**/,&!^.**#:,&%_$;^*&!^=!,/==;:*,^/:}_;*=+$;_&,,_=;;&!}_;&/^*:,;;!=/+,*:+$_!}&.^#^:,;_}/.$/,*=,,+!!;_*#:*%#_,/;=%+;}&^}=$;/*!.:%^_!&=$,+*$#^,=^,$!..&%%_:&/_=/:!=^!}#,^*&..*,:%%$_}/&#}+.!/.#=:;+*!._%^#/&#$.+%$$^.=&.;!../*=_#&+#!/$$^,}}#,,!%.=*;:&&*_./.#=+:}+;%=_;^*+.#&=_%&$#;+&$}^.=+,=!}.+%%:_&^#*/#$,^%}$,;!/;}*=:/%=_:/+$=+_},,*=$;,*^:}%;_&&}$;+/}!^:=+.#!_.^%*:$&,#%/$}:,!}},.!/._*::+&!$_,:$*+#},,%=$:.*&_!%._//*#:^=}!^_=^.&!#.,%+:$/*#&/}$.,^}=,:!..!%#:^&*_#+.$%+$}$,&!*;.*/.=%:_+/!#$+^}^^#=.;%!$.;%&_*&.#//=$}^+!%,_!^.+*##*&%_$/;}++}}.,.==:&*+:!%_#;/*##+$}%;.=;;&!}:_%/:=/*#+,!$_^^=*,#!,.%%*:;&:_}/_$/^=}:,+!&;_&*:*&!_,/%#$+;},^}=.;/!=.:/+_!&_#:+*}!^,**,$*:.&*}:}&/$./:$+^!=$,^!*.%*,#/%$_;/&}!+.}/,^=:.#*!._%^#&&##,+:$$,^=&,}!../*=::&:#!+&$^^&}#,,!%;$*#:&&%_./.#=^:}+,!=};^*&.#%__%/=#;+&}%^.!},=!:.+&%:_&^#^/#$;^%}$,;*+;}*.::%=$!/+$!+_=;,*=#;}*%:#%;_&&}#.+/$=^}=+;,!_.;%*_#&,#%+!$;^:}},$!/_=*::+&&__+;$*,#},,%=$;;*&.}%#_//!#:^,}!^_=^;**#.,%%:$/:#&/}$:^/=#,:!+.!*_:^&*_#/,$/+$}.,&=};.*/.=%:_+/!#_+^!*^#=,;%!$.;%&#%&.#:/=$:^+=!_*!^.%*#:;&%#*+.$&+}}.::==;_*+:/&#_^/*##._}%^}=;.+*_..%/:=/=#++!$_^^!*,#!;.%*$:;&&_}/.=$+=}:,+!%;_*,:*&!#;/%#$+;%,^}=:;/%*:,%+_!&_##+*$#^,*%:#!;.&*}:.&/$$/:},^!}_,,!*:^*,:%%$#:/&#}+_}/,.=:;+*!:$%^_*&=#,+$$$^;=&.!!../%&::&.#!/_$^^*}#,,!&;$*#:&&!_.//#=+:}+,!=_;^*%.#/,_%&$#;+&$}^.=#,=!:.+%!:_&^#&/#$;^%}$./!&;}*.:+%=_:/+$!+_}^,*=$;;*%.$%;!./&#.+/$=;._,=!&^,*%.:#&,#%/$}_^&}=,.!/;=*::+/%#;/^$&+#};,%=$;;*.:+%._,&=#:++}*^_=;;*!#:}%%:$&;#//}$.^/}=.*!+.!*_:^&*_#/,$%;^};,+=};_*/:!%:_++_#_+,}*^}=,;%!$.;&=:}&.#/+!$:^+=!,#!^.**#:,&^_$/;$&^%=+,/==;:%_^/:}$;*=+...$+=$/+;^#!/*%}:=&:#+^;:$}**&+,.+$/**/.,,^^++$/+=}:;$$%=./*^=:}=%&!^=:#}/*%:*;.!=.:%+#&==&,;+_%,^=%,$!;:+%_:.&/_=/#$+^!}_,#%^;#*,:%&;_;//#}+:}/,&!_;+*!._&*_*&$#,^/}:^;=&,}!#./*=::&_}+/_$^^*=,,,!&;$*.:&&%#://#=+:=!,!=#;^%&:.%,_%&$#.+&$}^.=::/!:.+%!_^&^#%/#$;^%=*;.!&;}*.:=%=__/+}%^;}^,*=#;_*%.$%;$&/$#.+/$=^:=+;*!_.^&*:#&;#%/}$;^&}},.!:;=*::+&%__/;$*+#!.,%=$;;*&.}%._/&=}^++}!^_=,;*!#.,%%:$&;#&/=}.^/}=,:+_.^*_:^&*:!:#+*&},!%,%_./*/.=%:#,!}/;;&_+}}&:^::_}+%+_%&$#//=$:^_:&}!*+&.%+:,&%_$&:.}#}*_+^^#_:!*&/;*_#/*##+,!:!*%=%=_^:!%;_+&:#++!#$%^^$:!};*%/:_#&&_}/.$:%$^_:!$&=}+/,^#/=_/;,#_^=/&*/;:%$,*,+;$$/$#^+*$#^$#!=}&&^^.*},!^+*._#.!//;^+_==/&/,+&!#//&#}+.&::*/*_$&_:}}+;**=.:*^.!}+=&,}!../*=::^+!!/+$}^*}#,,%_+!^;$;$}*=;..=;,}=,!=_;^!/^/:.$/*_++.!#%=_/,=}**.+%!:_+*;._$!;&%,}#!;*./*.:/%==#+&.;#.!=&,!!;_*%.$%;_.=*%_^&}*^:=+;!!_.^:*!!,,$}/$$;^&!!;^!/.!*:_%&!__/^$,;!},,&=$;#*&.=%._/&=#}^^}!^_=^;+!#.;%%_*/.#&/}$.,%}=,_!+:%%;:^&%_#+/$%+$};.&%$;.*+.=%__+/%#_^;}*^#=.;%*;.;%&:}/_#//=$$^+=.,_!^.*%}:,&%#*/;$/+}}.,/**;:*+:+%_#!/*##+,}%^$=;;+!}.}%/_*&:#++!$_^,=*,$!,./*$#;&&_}/:$/^!}:;*!!;_*^:*%$_,//#$+.}&;}!;;/*!.:%+_!&=#^^&*%^,=/,$*&.&*}:./^_=/:$;^!=.,^!*;#%.:%%$_#/&$&+.}/^=!#;+*!:!%^#*&##,+%$$^;=&;!!...*=:#&+#^/_$^^%}#.%!%;}*;:+%}_$++#=+:}+;_=_;,**:}/+_%&$#;+.$}^.=/.=*..+%*:_&^#*+/$,,/!_,;!/;}%;:/%=_:^+$=+_},,*=#;,*..$&:$*&}#:+/}%^:=+;!!__%%*:#&,#&/$$;^&}},.!/;=*:_%&!__/^+!^%},,%=$}^#.:}+;%=#_._+=}!^_=^,,$!*:&/;*#.!;&^^_:;#!;*!+.!*_#*=.%$,;:%}}&!,,!,;.*/.=&!;&#*=+&;,!.#$.*^!,.}%&:}&.#^*^/:.^#/=}!..$*#:,&%!/^+=!+,#!*}/!#,+!_^*$;%#!$^+,}%^$}:/:;^#/=,!=^$:;}/*}!}=},#!,.%!$^_:^#!%,^*.##}!,+&;&#/=}&!_:/%#$+;$=%},;%#*,.:%+_!^/;.:****,+;#%$;^/%+:.&/_=/_.+$$!}+/;$#}!=:%%$_;/&#}$.%^:=#_;.*!._%^#,=#/&,^}=^;=&,}*_$^*=::&+#&/_$^^*!#,,!%;$*;:&%}#*//}*+:}+,%=_.&**.#%,$%&$#;++$}^_=/;*!::,%!:_&:#*+!$,^%}$,;!&;}*_:/&&_:/,$!,_}^,*=};,*/.$&*_&+}#.+/}*^:=,;!*!.^/*:#&,#//$$:^&=.,.%/;=*::,&!_$/^$;+#=.,%=$;_*&:;%._/&=$#++}!^==^;,!#.,%%_=&;#&+&$.^+}=,:!+:%*_:^&,_#+&$%+$};,&=};.*,.=&!_+/%#_+;}.^#=_;%!$.;%&:}&.}}/=$:^+=/,_!,.**##&&%_$/;$/+}}.,/!!;:*+:!%#_,/*##+,}^,%=;;&!}_;}^*=^+:!++$_^^=*;}*/.%*}:;&/_}/.$/^+=*,+!%;_*^:*%$_,/&#$+;=:^}=.;/!=.:%+_!&_}=+*$$^,=/,$!..&*}#+&/_=/:$^^!}_,^!%;#*,:%%$}%/&#}+.**,&=:;+*!.;}^%$^!^=+;$$^;=&$!};_.;*!^!%#%/_$^^*}#,,!%}&+;%%&%_.//#=;!:+};%}%$%*.#%,_%;/$^*%//+&_,$_%%/#+}_#}/*:+.;,___},}!&;}*.,#;=*+#!*;^.$=,;=#;,*%}=/;;_$.*.,^_*#!=_;!!_.^;}$}:}&.}=^+;}}},.!/;=*:^+;!=_#&$*+#},,%=$;;*_$}+^__&=#:++=_&&^,_%$#%;^:_!/=#&/}$.$+!$^_.#=^&},;#=!#/=^$::=%//;^#$*:^!:&=%&+,=#^^!,%=,;%!$;:!&*=!,#}_!!+^+=!,_!^.**#=#,%*%+;$&+}}.#^%#;.$&**;^$=%;,.$!*},!$,%!,:#$*}_+&:#++!.$}$^,.&%/!*.::;&&_}/.$/$=&+_+,=.&*^:*%#::*^/},;#^=^&,,*;}.=%+_!&_$_*#/#;$$/$&*%.&*}:.%,;,##=,&},;_&}+*}^:,%&._;/&#}:!$%%}^^:!#=#%*:,/:_}&*.!:,!=&,}!.;,=!*:^_,&$#*/+!_$,$!%;$*;&/*}&}+;#&=.;#,/=_;^**}&&+,*:&^}+&$}^.=/,=!:}^^!!*&_#*/#$,^+_+=_%}^%};:/%=_:/+$!$_&/_*,_;=*%.$%;$#!**.;.;=$!&:+!;:.:%*:#&,_:!=+^.!./,.!/;=*::+_!*!;^=}^%},,%=$::}^*=+*.*#+=,+_}!^_=^+&!*%/=%:*,=/%+%$.^/}=,$#.*,/}::&;_#/,$%+=:#=^!!^,:+$&;!__/!#_+^;!.,&::_^$_%+!_%&.#//=}=%$^$.}!..=*#:,&%$#,%_.*.*/_+!+/_..}.&^,_#;}!+:}=^$=;;&++:+$=!==./=_*$&*;/!,!:%.%*,_&&&_}/.$&&!^%:*$!*#+},!_#!;/+=:^&}&^}=..^$$*,+%;/_$!.&.,:_/=/:;!;.&*}:.&/_=;;*+;$}=,^!*;#*./;_*}!.:#}+.}/;*!,;+*!._&*_*&##,+;!%^;=&,}!$./%!::&^#!/=},^*}#,,!^;$*.:&&%#://#=+:&*,!=#;^%&:.%,_%&$$&+&$}^.*/_!!:.+%!:_&^$//#}.^%}$,.!&::*.:/%=##/+$!+$}^,^=#;,*%:=%;_&/*#.+:$=^:=+.%!_.^%+:#++#%/$$;^&}},.!+;=*}:+&%__/^$*+#},,%=$;;*/.}%=_/&=#:++}=^_=,;*!#.,%^_}&;#&/}};^/=!,:!.:**_:^&*##/,$&+$};;==};.*/:!%:_+/!$$^&}*^#=,:*!$.;%&#},+#//=$:^+=!.=!^.**#:,&&_$/;$&+}}../==;:*^:!%#_^/%##^.}%^$=:;&%:..%/:=/##++!$}^^=;,#!,.%%=:;&&#%/.}/+=}:,+*%;_*^:^%#$!/%#$+;}&^}=.;^!=.=%+_%&_#^+*$#^,=%,=!;.+*}:=&/_=/:$+_^}_,,!*;#*,:^&}_;/&#}:=}/,!=:.,*$._%^_*^^#,+%$$;;%,,}!../*=::+,#!+$$^^*}},,*};$*;:&/!_.//$%+:=/,!=_;^%&.#%,_^&$$++&$}^.!^,=!:.:%!_#&^#*/#$,^%}$,:!&.&*.:^%=_:/+$!+}}^,*=#;_*%:=%;_&/%#.,!$=^:=+.%!_.^%^:#+$#%/$$;,+}},.!:;=*#:+&!__+;$*+#}},%!!;;*&.}%._/&=#}++},^_=;;**#.,%%_!&;$$/}$$^/}=,:!+./*_:^&*_#/,=%+$};,,=};$*/:!%:#,/!#_+_}*;;=,;%!$::%&:}&=#/,/$:^+=!;$!^.*%&:,/._$/;$&,!}.,/!,;:&!:!%__^/*##+,},^$!!;&*!..%/:=&:#.+!$=^^=^,#*,.%*$:_&&$=/.$;+==#,+!!;=*^_$%#_,/%$=+;}&,&=..!!=.:%+#%&_#^+,$#;:=%,$!;:+*}:.&__=+&$+^!}_,^!*;#*_:%&/_;/+#}^.}/^==$;+%$._%:_*^##,+%}!^;!+,}&%./*=::&+#!/_$.^*}$,,*/;$*;:&%}_$//#=+:=,,!=_;,**:^%,_%&$#;+&$}^.=/;*!:.^%!:_&^#*/#$,^%}$,;!&:}*.:/%=_:/+$!;%}^,,=#;,*%.$^__&&=#.++$=^}!^;!!_.^^/:#&;#%+*}.^&}},.+:;=*_:+/%#;/^$*+#=$,%=$;;*&$}%._+&=#:++}!^_!;;*!#..%%#.&;#&/}}_^/}=,$!+:;*_:^&*#}/,$%^*};,_=};.*/_*%:_+/+#_,/}*^#=,;%!$.;%+:}&}#/+*$:^+=!,_!^.**}:,&&_$/#$&+}}.,/++;:*^:!&$#&/*##+,}$^$=;;&%}#;%/:=&:#++!!&^^!&,#!,.&*$#/&&_}/.}^+=}:,,!!:!*^:*%##./%#$+_}&;}=.;/!=:#%+_!&=#^+=$#^,=%,$!;.&*=:.&;_=/#$+^!}_,^!*;#*,:%%}_;^&#}+.}/^==:;+%/._%^_*&##,+%$=^;=/,}!._!*=::&+#*/_$^^*}#,,!%;$*;:&%}_.//$!+:}+,!=_:%**.#%,_&&$#;+&$}^.=/,=");local f=(0x126-177)local l=58 local e=o;local _={}_={[(37/0x25)]=function()local n,x,_,o=y(J,e,e+g);e=e+v;l=(l+(f*v))%a;return(((o+l-(f)+d*(v*N))%d)*((N*L)^N))+(((_+l-(f*N)+d*(N^g))%a)*(d*a))+(((x+l-(f*g)+L)%a)*d)+((n+l-(f*v)+L)%a);end,[(-0x51+83)]=function(_,_,_)local _=y(J,e,e);e=e+x;l=(l+(f))%a;return((_+l-(f)+L)%d);end,[(100+-0x61)]=function()local _,o=y(J,e,e+N);l=(l+(f*N))%a;e=e+N;return(((o+l-(f)+d*(N*v))%d)*a)+((_+l-(f*N)+a*(N^g))%d);end,[(102-0x62)]=function(e,_,l)if l then local _=(e/N^(_-o))%N^((l-x)-(_-o)+x);return _-_%o;else local _=N^(_-x);return(e%(_+_)>=_)and o or m;end;end,[((0x17e-252)-125)]=function()local e=_[(0xaf/175)]();local l=_[(-0x50+81)]();local r=o;local n=(_[((714-0x19a)/76)](l,x,p+v)*(N^(p*N)))+e;local e=_[(0x1e8/122)](l,21,31);local _=((-o)^_[(-73+(0x1d7a/98))](l,32));if(e==m)then if(n==A)then return _*m;else e=x;r=A;end;elseif(e==(d*(N^g))-x)then return(n==m)and(_*(x/A))or(_*(m/A));end;return E(_,e-((a*(v))-o))*(r+(n/(N^R)));end,[(0x50-74)]=function(n,r,r)local r;if(not n)then n=_[(-0x57+88)]();if(n==m)then return'';end;end;r=V(J,e,e+n-o);e=e+n;local _=''for e=x,#r do _=Q(_,G((y(V(r,e,e))+l)%a))l=(l+f)%d end return _;end}local function J(...)return{...},Y('#',...)end local function L()local O={};local n={};local e={};local r={O,n,nil,e};local l={}local w=(0x3160/158)local e={[(0x67-102)]=(function(e)return not(#e==_[(0x94/74)]())end),[((379+-0x17)/178)]=(function(e)return _[(0x63+-94)]()end),[(0x6f-108)]=(function(e)return _[(96+-0x5a)]()end),[(-0x55+89)]=(function(e)local o=_[(40+-0x22)]()local e=''local _=1 for l=1,#o do _=(_+w)%a e=Q(e,G((y(o:sub(l,l))+_)%d))end return e end)};r[3]=_[(118-0x74)]();local d=_[(-77+0x4e)]()for o=1,d do local _=_[(50+-0x30)]();local d;local _=e[_%((254+-0x3e)-151)];l[o]=_ and _({});end;for r=1,_[(0x74-115)]()do local e=_[((17850/0xee)-0x49)]();if(_[(0x4f-75)](e,o,x)==A)then local n=_[(-0x3a+62)](e,N,g);local d=_[(0x398/230)](e,v,N+v);local e={_[(0xf6/82)](),_[((0xcf+-80)-0x7c)](),nil,nil};local a={[((315-0xd3)-104)]=function()e[b]=_[(-0x1a+29)]();e[P]=_[(0x2f-44)]();end,[(-0x44+69)]=function()e[i]=_[(71+-0x46)]();end,[(0x1b+-25)]=function()e[M]=_[(0x2d-44)]()-(N^p)end,[(0xc3/65)]=function()e[M]=_[(-0x12+19)]()-(N^p)e[j]=_[(81-0x4e)]();end};a[n]();if(_[(-0x60+100)](d,x,o)==x)then e[h]=l[e[c]]end if(_[(0x33c/207)](d,N,N)==o)then e[t]=l[e[i]]end if(_[(0x62+-94)](d,g,g)==x)then e[C]=l[e[B]]end O[r]=e;end end;for _=x,_[(0x29-40)]()do n[_-x]=L();end;return r;end;local function m(_,v,f)local y=_[N];local l=_[g];local d=_[o];return(function(...)local e=o;local a=l;local L={};local g={...};local p={};local l={};local A=Y('#',...)-x;local _=J local _=o _*=-1 local _=_;local d=d;local y=y;for _=0,A do if(_>=a)then L[_-a]=g[_+x];else l[_]=g[_+o];end;end;local _=A-a+o local _;local a;while true do _=d[e];a=_[(1/0x1)];n=(6460148)while a<=(0xd5c/(241-0x97))do n-= n n=(11351600)while a<=(0x9fc/142)do n-= n n=(410550)while a<=(33+-0x19)do n-= n n=(235248)while a<=(36+(25-0x3a))do n-= n n=(6258346)while a<=(100-0x63)do n-= n n=(5814450)while((0xd50/142)-24)<a do n-= n local _={l,_};_[o][_[N][k]]=_[N][B]+_[N][M];break end while(n)/((186150/0x66))==3186 do local _={l,_};_[x][_[N][r]]=_[o][_[N][S]]+_[x][_[N][i]];break end;break;end while 1802==(n)/((-100+0xdf5))do n=(716400)while a>(0x2f+-45)do n-= n local _=_[r]l[_](l[_+x])break end while 200==(n)/((7279-0xe71))do local e=_[c]l[e](D(l,e+x,_[t]))break end;break;end break;end while 676==(n)/((0x1c8+-108))do n=(4148040)while(56+-0x33)>=a do n-= n n=(10385300)while(0x25-33)<a do n-= n local e=_[h]l[e]=l[e](D(l,e+o,_[U]))break end while(n)/((0x88220/200))==3725 do l[_[u]]();break end;break;end while 2659==(n)/((0x65c+-68))do n=(4219672)while a<=(58-0x34)do n-= n local _=_[O]l[_]=l[_](l[_+x])break;end while 1633==(n)/((136952/0x35))do n=(3856732)while(0x4fa/182)<a do n-= n l[_[r]]=m(y[_[i]],nil,f);break end while(n)/((0x1e1e-3899))==1012 do local r=y[_[w]];local a;local o={};a=K({},{__index=function(e,_)local _=o[_];return _[1][_[2]];end,__newindex=function(l,_,e)local _=o[_]_[1][_[2]]=e;end;});for n=1,_[s]do e=e+x;local _=d[e];if _[(57-0x38)]==23 then o[n-1]={l,_[t]};else o[n-1]={v,_[t]};end;p[#p+1]=o;end;l[_[c]]=m(r,a,f);break end;break;end break;end break;end break;end while(n)/((0x2cf-369))==1173 do n=(592470)while(0x52+-69)>=a do n-= n n=(3966291)while(0x730/184)>=a do n-= n n=(4844230)while a>(0x3e-53)do n-= n if(l[_[k]]==l[_[C]])then e=e+x;else e=_[i];end;break end while(n)/((0xf9f-2029))==2459 do local o=_[w];local e=l[o]for _=o+1,_[s]do e=e..l[_];end;l[_[O]]=e;break end;break;end while(n)/((300027/0x5b))==1203 do n=(5119400)while(76-0x41)>=a do n-= n local o=_[k];local n=l[o+2];local d=l[o]+n;l[o]=d;if(n>0)then if(d<=l[o+1])then e=_[U];l[o+3]=d;end elseif(d>=l[o+1])then e=_[i];l[o+3]=d;end break;end while 1790==(n)/((374660/0x83))do n=(3864537)while(0x58-76)<a do n-= n l[_[u]]=f[_[i]];break end while 3491==(n)/((1147+-0x28))do local o=_[r];local d=l[o]local n=l[o+2];if(n>0)then if(d>l[o+1])then e=_[t];else l[o+3]=d;end elseif(d<l[o+1])then e=_[M];else l[o+3]=d;end break end;break;end break;end break;end while(n)/((-0x35+198))==4086 do n=(3083782)while(147-0x84)>=a do n-= n n=(12831708)while(50+-0x24)<a do n-= n l[_[O]]=l[_[b]][_[C]];break end while(n)/((7774-0xf4c))==3326 do l[_[r]]=l[_[M]][l[_[s]]];break end;break;end while(n)/((0x1139-(4566-0x90b)))==1429 do n=(5287744)while((0x2749/113)-73)>=a do n-= n l[_[k]]=v[_[M]];break;end while(n)/((2147+-0x4b))==2552 do n=(7577240)while(-87+0x68)<a do n-= n l[_[u]]=#l[_[b]];break end while 2026==(n)/((7528-0xecc))do e=_[w];break end;break;end break;end break;end break;end break;end while(n)/((782340/0xff))==3700 do n=(2880766)while(0xad4/99)>=a do n-= n n=(8361204)while((0x1e98/88)-66)>=a do n-= n n=(8226270)while(3840/0xc0)>=a do n-= n n=(7173573)while(0x92-127)<a do n-= n l[_[h]]=(_[i]~=0);e=e+x;break end while(n)/((0x49e28/152))==3603 do l[_[h]]=(_[w]~=0);break end;break;end while(n)/((172536/0x54))==4005 do n=(5516822)while a<=(1323/0x3f)do n-= n l[_[h]]=_[t];break;end while(n)/((1875+-0x71))==3131 do n=(3025877)while a>(-0x23+57)do n-= n l[_[h]]=l[_[M]];break end while(n)/((86185/0x37))==1931 do l[_[r]]=l[_[w]]%_[B];break end;break;end break;end break;end while 3261==(n)/((0x142d-2601))do n=(992341)while(4675/0xbb)>=a do n-= n n=(9453483)while a>(150-0x7e)do n-= n if(l[_[r]]~=_[C])then e=e+x;else e=_[t];end;break end while 3513==(n)/((0x155f-(0x2141c/49)))do if(l[_[u]]~=l[_[P]])then e=e+x;else e=_[w];end;break end;break;end while(n)/((353+(-0xfc0/48)))==3689 do n=(3178187)while a<=(-0x7d+(6191/0x29))do n-= n l[_[h]]={};break;end while 3559==(n)/((0x777-1018))do n=(1194336)while a>(0xcc3/121)do n-= n do return end;break end while(n)/((-0x2f+743))==1716 do do return l[_[h]]end break end;break;end break;end break;end break;end while 1043==(n)/((0x25c30/56))do n=(11231920)while(0xb4-147)>=a do n-= n n=(1658980)while a<=(0x87+-105)do n-= n n=(1441308)while a>(132+-0x67)do n-= n f[_[w]]=l[_[c]];break end while 537==(n)/((5436-0xac0))do local o=_[c];local e=l[_[M]];l[o+1]=e;l[o]=e[_[j]];break end;break;end while(n)/((0x135f8/182))==3805 do n=(13373100)while(-0x40+95)>=a do n-= n l[_[u]][l[_[U]]]=l[_[s]];break;end while 3810==(n)/(((0x109add-544171)/155))do n=(4589940)while(1920/0x3c)<a do n-= n l[_[c]][_[M]]=_[S];break end while 1362==(n)/((6786-0xd58))do l[_[r]][_[U]]=l[_[j]];break end;break;end break;end break;end while 3235==(n)/((0xb63f0/215))do n=(5991811)while a<=(164-0x81)do n-= n n=(8420192)while a>(0x95+-115)do n-= n l[_[O]]=l[_[U]]-l[_[C]];break end while(n)/((120864/0x30))==3344 do v[_[U]]=l[_[r]];break end;break;end while 1787==(n)/((6831-0xd96))do n=(1799534)while a<=(8424/0xea)do n-= n if l[_[k]]then e=e+o;else e=_[U];end;break;end while(n)/(((595+-0x19)+-0x31))==3454 do n=(1266222)while a>(116-0x4f)do n-= n local o=l[_[s]];if not o then e=e+x;else l[_[O]]=o;e=_[b];end;break end while(n)/((0x3b6+-67))==1434 do if not l[_[r]]then e=e+x;else e=_[U];end;break end;break;end break;end break;end break;end break;end break;end while(n)/((0xc11+-36))==2116 do n=(51870)while a<=(0x1d2b/131)do n-= n n=(6183360)while(115-0x44)>=a do n-= n n=(2636164)while(0xba-144)>=a do n-= n n=(6511488)while((18705/0x91)-0x59)>=a do n-= n n=(3383575)while(0x861/55)<a do n-= n local _={l,_};_[o][_[N][h]]=_[N][j]+_[N][t];break end while(n)/((0x2bd2c/100))==1885 do local e=_[r]l[e]=l[e](D(l,e+o,_[b]))break end;break;end while 2188==(n)/((6056-0xc08))do n=(1916134)while a>((0x2da2-5860)/0x8e)do n-= n local e=_[h]l[e](D(l,e+x,_[b]))break end while(n)/((1450-0x2f4))==2761 do local _=_[c]l[_](l[_+x])break end;break;end break;end while(n)/((3599-0x721))==1486 do n=(6828808)while a<=(-0x31+93)do n-= n n=(91432)while a>(189-0x92)do n-= n l[_[O]]();break end while(n)/((185-0x8d))==2078 do local _={l,_};_[x][_[N][O]]=_[o][_[N][s]]+_[x][_[N][i]];break end;break;end while(n)/(((12104862/0x4d)/57))==2476 do n=(2457735)while(7605/0xa9)>=a do n-= n local n;l[_[h]]=l[_[b]][_[s]];e=e+o;_=d[e];l[_[O]]=f[_[M]];e=e+o;_=d[e];l[_[h]]=_[U];e=e+o;_=d[e];l[_[O]]=_[U];e=e+o;_=d[e];l[_[k]]=_[b];e=e+o;_=d[e];n=_[k]l[n]=l[n](D(l,n+o,_[i]))e=e+o;_=d[e];l[_[c]]=l[_[i]][l[_[P]]];e=e+o;_=d[e];if not l[_[c]]then e=e+x;else e=_[b];end;break;end while(n)/((-83+0x2c2))==3945 do n=(5768814)while(5934/0x81)<a do n-= n local a;local n;l[_[u]]=l[_[M]][_[j]];e=e+o;_=d[e];l[_[r]]=f[_[i]];e=e+o;_=d[e];l[_[O]]=_[b];e=e+o;_=d[e];l[_[c]]=_[t];e=e+o;_=d[e];l[_[r]]=_[t];e=e+o;_=d[e];n=_[h]l[n]=l[n](D(l,n+o,_[i]))e=e+o;_=d[e];l[_[c]]=l[_[i]][l[_[S]]];e=e+o;_=d[e];n=_[r];a=l[_[t]];l[n+1]=a;l[n]=a[_[B]];e=e+o;_=d[e];n=_[O]l[n](l[n+x])break end while 2346==(n)/(((-52/0x1)+0x9cf))do local x;local a;local n;l[_[h]]=_[b];e=e+o;_=d[e];l[_[u]]=_[w];e=e+o;_=d[e];l[_[r]]=#l[_[i]];e=e+o;_=d[e];l[_[c]]=_[i];e=e+o;_=d[e];n=_[O];a=l[n]x=l[n+2];if(x>0)then if(a>l[n+1])then e=_[i];else l[n+3]=a;end elseif(a<l[n+1])then e=_[i];else l[n+3]=a;end break end;break;end break;end break;end break;end while(n)/((375725/0xaf))==2880 do n=(5526014)while(0xcf-155)>=a do n-= n n=(1726980)while a<=(127-0x4e)do n-= n n=(3909388)while(6720/0x8c)<a do n-= n local n;l[_[h]]=l[_[w]][_[S]];e=e+o;_=d[e];l[_[O]]=f[_[b]];e=e+o;_=d[e];l[_[r]]=_[w];e=e+o;_=d[e];l[_[k]]=_[t];e=e+o;_=d[e];l[_[u]]=_[M];e=e+o;_=d[e];n=_[O]l[n]=l[n](D(l,n+o,_[i]))e=e+o;_=d[e];l[_[k]]=l[_[w]][l[_[C]]];e=e+o;_=d[e];if l[_[h]]then e=e+o;else e=_[w];end;break end while 2924==(n)/((-45+0x566))do local a;local n;l[_[O]]=f[_[w]];e=e+o;_=d[e];n=_[h];a=l[_[i]];l[n+1]=a;l[n]=a[_[j]];e=e+o;_=d[e];l[_[k]]=f[_[U]];e=e+o;_=d[e];n=_[k];a=l[_[i]];l[n+1]=a;l[n]=a[_[S]];e=e+o;_=d[e];l[_[h]]=_[M];e=e+o;_=d[e];n=_[u]l[n]=l[n](D(l,n+o,_[w]))e=e+o;_=d[e];l[_[k]]=l[_[i]][_[C]];e=e+o;_=d[e];l[_[c]]=l[_[i]][_[S]];e=e+o;_=d[e];l[_[k]]=l[_[t]][_[C]];e=e+o;_=d[e];l[_[k]]=f[_[M]];e=e+o;_=d[e];l[_[O]]=_[i];e=e+o;_=d[e];l[_[O]]=_[U];e=e+o;_=d[e];l[_[h]]=_[b];e=e+o;_=d[e];n=_[O]l[n]=l[n](D(l,n+o,_[t]))break end;break;end while(n)/((0x4a1+-109))==1605 do n=(5511142)while a<=(0x87-85)do n-= n local n;l[_[u]]=l[_[M]][_[B]];e=e+o;_=d[e];l[_[h]]=f[_[t]];e=e+o;_=d[e];l[_[r]]=_[M];e=e+o;_=d[e];l[_[k]]=_[t];e=e+o;_=d[e];l[_[h]]=_[b];e=e+o;_=d[e];n=_[c]l[n]=l[n](D(l,n+o,_[b]))e=e+o;_=d[e];l[_[h]]=l[_[i]][l[_[C]]];e=e+o;_=d[e];if not l[_[c]]then e=e+x;else e=_[U];end;break;end while(n)/(((-4+-0x2c)+0x59f))==3962 do n=(795760)while(-0x43+118)<a do n-= n local N;local a;local n;n=_[r];a=l[_[w]];l[n+1]=a;l[n]=a[_[P]];e=e+o;_=d[e];l[_[k]]=f[_[t]];e=e+o;_=d[e];l[_[c]]=_[U];e=e+o;_=d[e];l[_[h]]=_[i];e=e+o;_=d[e];l[_[O]]=_[U];e=e+o;_=d[e];n=_[h]l[n]=l[n](D(l,n+o,_[i]))e=e+o;_=d[e];l[_[O]]={};e=e+o;_=d[e];l[_[O]]=f[_[w]];e=e+o;_=d[e];l[_[r]]=_[w];e=e+o;_=d[e];l[_[r]]=_[b];e=e+o;_=d[e];l[_[r]]=_[t];e=e+o;_=d[e];n=_[r]l[n]=l[n](D(l,n+o,_[M]))e=e+o;_=d[e];l[_[h]][_[M]]=l[_[P]];e=e+o;_=d[e];l[_[r]]=v[_[t]];e=e+o;_=d[e];l[_[c]]=l[_[w]][_[S]];e=e+o;_=d[e];l[_[k]]=f[_[b]];e=e+o;_=d[e];l[_[r]]=_[w];e=e+o;_=d[e];l[_[u]]=_[i];e=e+o;_=d[e];l[_[c]]=_[b];e=e+o;_=d[e];n=_[c]l[n]=l[n](D(l,n+o,_[b]))e=e+o;_=d[e];a=_[U];N=l[a]for _=a+1,_[C]do N=N..l[_];end;l[_[h]]=N;e=e+o;_=d[e];l[_[u]][_[w]]=l[_[s]];e=e+o;_=d[e];l[_[k]]=f[_[t]];e=e+o;_=d[e];l[_[c]]=_[t];e=e+o;_=d[e];l[_[r]]=_[i];e=e+o;_=d[e];l[_[O]]=_[t];e=e+o;_=d[e];n=_[u]l[n]=l[n](D(l,n+o,_[M]))e=e+o;_=d[e];l[_[c]][_[t]]=l[_[C]];e=e+o;_=d[e];l[_[h]][_[t]]=_[S];e=e+o;_=d[e];n=_[k]l[n](D(l,n+x,_[w]))e=e+o;_=d[e];l[_[c]]=f[_[M]];e=e+o;_=d[e];l[_[O]]=_[U];e=e+o;_=d[e];n=_[O]l[n](l[n+x])e=e+o;_=d[e];l[_[k]]=v[_[t]];e=e+o;_=d[e];l[_[O]]=l[_[U]][_[S]];e=e+o;_=d[e];if not l[_[h]]then e=e+x;else e=_[i];end;break end while(n)/((247254/0x57))==280 do local a;local n;n=_[k];a=l[_[t]];l[n+1]=a;l[n]=a[_[C]];e=e+o;_=d[e];l[_[c]]=f[_[t]];e=e+o;_=d[e];l[_[O]]=l[_[U]][_[S]];e=e+o;_=d[e];l[_[k]]=l[_[w]][_[s]];e=e+o;_=d[e];n=_[u]l[n](D(l,n+x,_[t]))break end;break;end break;end break;end while(n)/((6707-0xd26))==1654 do n=(2031297)while a<=(176-0x7a)do n-= n n=(3270968)while(0x951/45)<a do n-= n local n;l[_[r]]=f[_[i]];e=e+o;_=d[e];l[_[O]]=_[b];e=e+o;_=d[e];l[_[r]]=_[w];e=e+o;_=d[e];l[_[r]]=_[b];e=e+o;_=d[e];n=_[u]l[n]=l[n](D(l,n+o,_[U]))e=e+o;_=d[e];if(l[_[r]]==l[_[B]])then e=e+x;else e=_[b];end;break end while(n)/((1365+-0x1f))==2452 do local a;local n;l[_[k]]=l[_[i]][_[j]];e=e+o;_=d[e];l[_[r]]=f[_[i]];e=e+o;_=d[e];l[_[c]]=_[U];e=e+o;_=d[e];l[_[u]]=_[U];e=e+o;_=d[e];l[_[h]]=_[w];e=e+o;_=d[e];n=_[r]l[n]=l[n](D(l,n+o,_[t]))e=e+o;_=d[e];l[_[r]]=l[_[U]][l[_[P]]];e=e+o;_=d[e];n=_[O];a=l[_[i]];l[n+1]=a;l[n]=a[_[s]];e=e+o;_=d[e];n=_[r]l[n](l[n+x])break end;break;end while 3209==(n)/(((804+-0x4f)+-0x5c))do n=(9232462)while a<=(0x1130/80)do n-= n local v;local a;local u;local n;l[_[c]]=f[_[b]];e=e+o;_=d[e];l[_[O]]=l[_[w]][_[s]];e=e+o;_=d[e];n=_[c];u=l[_[U]];l[n+1]=u;l[n]=u[_[B]];e=e+o;_=d[e];l[_[r]]=l[_[w]];e=e+o;_=d[e];l[_[r]]=l[_[M]];e=e+o;_=d[e];n=_[h]l[n]=l[n](D(l,n+o,_[b]))e=e+o;_=d[e];n=_[k];u=l[_[b]];l[n+1]=u;l[n]=u[_[P]];e=e+o;_=d[e];n=_[k]l[n]=l[n](l[n+x])e=e+o;_=d[e];a={l,_};a[x][a[N][O]]=a[o][a[N][C]]+a[x][a[N][b]];e=e+o;_=d[e];l[_[c]]=l[_[t]]%_[P];e=e+o;_=d[e];n=_[c]l[n]=l[n](l[n+x])e=e+o;_=d[e];u=_[w];v=l[u]for _=u+1,_[S]do v=v..l[_];end;l[_[h]]=v;e=e+o;_=d[e];a={l,_};a[x][a[N][r]]=a[o][a[N][s]]+a[x][a[N][t]];e=e+o;_=d[e];l[_[c]]=l[_[i]]%_[j];break;end while 3034==(n)/((0x8970b/185))do n=(14088612)while(91+-0x23)<a do n-= n local a;local n;l[_[O]]=l[_[w]][_[C]];e=e+o;_=d[e];l[_[O]]=f[_[w]];e=e+o;_=d[e];l[_[h]]=_[U];e=e+o;_=d[e];l[_[r]]=_[i];e=e+o;_=d[e];l[_[c]]=_[t];e=e+o;_=d[e];n=_[r]l[n]=l[n](D(l,n+o,_[M]))e=e+o;_=d[e];l[_[k]]=l[_[M]][l[_[P]]];e=e+o;_=d[e];n=_[r];a=l[_[t]];l[n+1]=a;l[n]=a[_[P]];e=e+o;_=d[e];n=_[r]l[n](l[n+x])break end while 4007==(n)/((-63+0xdfb))do local N;local a;local n;n=_[u];a=l[_[U]];l[n+1]=a;l[n]=a[_[C]];e=e+o;_=d[e];l[_[k]]=f[_[i]];e=e+o;_=d[e];l[_[h]]=_[b];e=e+o;_=d[e];l[_[u]]=_[M];e=e+o;_=d[e];l[_[k]]=_[t];e=e+o;_=d[e];n=_[h]l[n]=l[n](D(l,n+o,_[M]))e=e+o;_=d[e];l[_[O]]={};e=e+o;_=d[e];l[_[u]]=f[_[b]];e=e+o;_=d[e];l[_[u]]=_[w];e=e+o;_=d[e];l[_[u]]=_[t];e=e+o;_=d[e];l[_[c]]=_[M];e=e+o;_=d[e];n=_[r]l[n]=l[n](D(l,n+o,_[U]))e=e+o;_=d[e];l[_[h]][_[w]]=l[_[B]];e=e+o;_=d[e];l[_[h]]=v[_[M]];e=e+o;_=d[e];l[_[h]]=l[_[M]][_[S]];e=e+o;_=d[e];l[_[r]]=f[_[w]];e=e+o;_=d[e];l[_[h]]=_[w];e=e+o;_=d[e];l[_[k]]=_[U];e=e+o;_=d[e];l[_[r]]=_[i];e=e+o;_=d[e];n=_[c]l[n]=l[n](D(l,n+o,_[b]))e=e+o;_=d[e];a=_[i];N=l[a]for _=a+1,_[C]do N=N..l[_];end;l[_[O]]=N;e=e+o;_=d[e];l[_[c]][_[t]]=l[_[j]];e=e+o;_=d[e];l[_[O]]=f[_[U]];e=e+o;_=d[e];l[_[r]]=_[U];e=e+o;_=d[e];l[_[h]]=_[M];e=e+o;_=d[e];l[_[k]]=_[i];e=e+o;_=d[e];n=_[O]l[n]=l[n](D(l,n+o,_[t]))e=e+o;_=d[e];l[_[O]][_[b]]=l[_[P]];e=e+o;_=d[e];l[_[u]][_[i]]=_[C];e=e+o;_=d[e];n=_[k]l[n](D(l,n+x,_[t]))e=e+o;_=d[e];l[_[r]]=f[_[w]];e=e+o;_=d[e];l[_[r]]=_[i];e=e+o;_=d[e];n=_[r]l[n](l[n+x])e=e+o;_=d[e];l[_[r]]=v[_[w]];e=e+o;_=d[e];l[_[O]]=l[_[U]][_[B]];e=e+o;_=d[e];if not l[_[u]]then e=e+x;else e=_[M];end;break end;break;end break;end break;end break;end break;end while(n)/((27300/0x96))==285 do n=(8186730)while a<=(0x3ed0/240)do n-= n n=(3357840)while a<=(0xb3-117)do n-= n n=(1358652)while a<=(0xd2-151)do n-= n n=(5576256)while a>(0xc0-134)do n-= n local a;local n;n=_[h];a=l[_[w]];l[n+1]=a;l[n]=a[_[S]];e=e+o;_=d[e];l[_[h]]=f[_[b]];e=e+o;_=d[e];l[_[k]]=_[U];e=e+o;_=d[e];l[_[u]]=_[w];e=e+o;_=d[e];l[_[k]]=_[b];e=e+o;_=d[e];n=_[c]l[n]=l[n](D(l,n+o,_[U]))e=e+o;_=d[e];n=_[c]l[n]=l[n](D(l,n+o,_[w]))e=e+o;_=d[e];if not l[_[r]]then e=e+x;else e=_[i];end;break end while 3024==(n)/(((0x575bd-178953)/0x61))do local a;local n;l[_[O]]=f[_[i]];e=e+o;_=d[e];n=_[u];a=l[_[w]];l[n+1]=a;l[n]=a[_[S]];e=e+o;_=d[e];l[_[r]]=f[_[M]];e=e+o;_=d[e];n=_[u];a=l[_[w]];l[n+1]=a;l[n]=a[_[s]];e=e+o;_=d[e];l[_[h]]=_[b];e=e+o;_=d[e];n=_[O]l[n]=l[n](D(l,n+o,_[w]))e=e+o;_=d[e];l[_[c]]=l[_[i]][_[C]];e=e+o;_=d[e];l[_[c]]=l[_[w]][_[B]];e=e+o;_=d[e];l[_[k]]=l[_[i]][_[B]];e=e+o;_=d[e];l[_[u]]=f[_[t]];e=e+o;_=d[e];l[_[r]]=_[b];e=e+o;_=d[e];l[_[c]]=_[i];e=e+o;_=d[e];l[_[O]]=_[i];e=e+o;_=d[e];n=_[k]l[n]=l[n](D(l,n+o,_[b]))break end;break;end while(n)/((16362/0x1b))==2242 do n=(3078780)while a<=(0x99-93)do n-= n local n;l[_[O]]=l[_[b]][_[s]];e=e+o;_=d[e];l[_[O]]=v[_[t]];e=e+o;_=d[e];l[_[u]]=l[_[U]][_[P]];e=e+o;_=d[e];l[_[c]]=f[_[U]];e=e+o;_=d[e];l[_[k]]=_[i];e=e+o;_=d[e];l[_[u]]=_[t];e=e+o;_=d[e];l[_[h]]=_[b];e=e+o;_=d[e];n=_[h]l[n]=l[n](D(l,n+o,_[M]))e=e+o;_=d[e];n=_[c]l[n]=l[n](D(l,n+o,_[t]))e=e+o;_=d[e];if l[_[u]]then e=e+o;else e=_[i];end;break;end while(n)/((17460/0x6))==1058 do n=(13222521)while(-68+0x81)<a do n-= n local a;local n;n=_[O];a=l[_[w]];l[n+1]=a;l[n]=a[_[C]];e=e+o;_=d[e];l[_[r]]=f[_[U]];e=e+o;_=d[e];l[_[r]]=_[U];e=e+o;_=d[e];l[_[c]]=_[w];e=e+o;_=d[e];l[_[k]]=_[M];e=e+o;_=d[e];n=_[u]l[n]=l[n](D(l,n+o,_[i]))e=e+o;_=d[e];n=_[O]l[n]=l[n](D(l,n+o,_[M]))e=e+o;_=d[e];n=_[u];a=l[_[M]];l[n+1]=a;l[n]=a[_[B]];e=e+o;_=d[e];l[_[c]]=f[_[b]];e=e+o;_=d[e];l[_[O]]=l[_[i]][_[C]];e=e+o;_=d[e];l[_[c]]=l[_[U]][_[S]];e=e+o;_=d[e];n=_[h]l[n]=l[n](D(l,n+o,_[t]))e=e+o;_=d[e];if(l[_[c]]~=_[P])then e=e+x;else e=_[M];end;break end while 3897==(n)/((0x1add-3484))do local n;l[_[O]]=l[_[U]][_[B]];e=e+o;_=d[e];l[_[h]]=f[_[b]];e=e+o;_=d[e];l[_[u]]=_[t];e=e+o;_=d[e];l[_[r]]=_[b];e=e+o;_=d[e];l[_[r]]=_[M];e=e+o;_=d[e];n=_[u]l[n]=l[n](D(l,n+o,_[w]))e=e+o;_=d[e];l[_[h]]=l[_[M]][l[_[C]]];e=e+o;_=d[e];if l[_[r]]then e=e+o;else e=_[i];end;break end;break;end break;end break;end while 2040==(n)/(((18020408/0xee)/0x2e))do n=(773750)while(0xc7-(0x131-170))>=a do n-= n n=(2427275)while(-0x6f+174)<a do n-= n local n;l[_[k]]=v[_[b]];e=e+o;_=d[e];l[_[k]]=f[_[b]];e=e+o;_=d[e];l[_[c]]=_[b];e=e+o;_=d[e];l[_[u]]=_[M];e=e+o;_=d[e];l[_[r]]=_[U];e=e+o;_=d[e];n=_[c]l[n]=l[n](D(l,n+o,_[M]))e=e+o;_=d[e];n=_[c]l[n](D(l,n+x,_[M]))e=e+o;_=d[e];e=_[U];break end while(n)/((2513-0x504))==1975 do local a;local n;l[_[r]]=l[_[U]][_[S]];e=e+o;_=d[e];l[_[c]]=f[_[i]];e=e+o;_=d[e];l[_[h]]=_[t];e=e+o;_=d[e];l[_[c]]=_[w];e=e+o;_=d[e];l[_[u]]=_[t];e=e+o;_=d[e];n=_[c]l[n]=l[n](D(l,n+o,_[b]))e=e+o;_=d[e];l[_[k]]=l[_[t]][l[_[P]]];e=e+o;_=d[e];n=_[O];a=l[_[U]];l[n+1]=a;l[n]=a[_[s]];e=e+o;_=d[e];n=_[k]l[n](l[n+x])break end;break;end while 1238==(n)/((-0x39+682))do n=(4385548)while a<=(89+-0x18)do n-= n l[_[k]]=v[_[U]];e=e+o;_=d[e];l[_[k]]=#l[_[U]];e=e+o;_=d[e];v[_[b]]=l[_[c]];e=e+o;_=d[e];l[_[u]]=v[_[M]];e=e+o;_=d[e];l[_[c]]=#l[_[M]];e=e+o;_=d[e];v[_[i]]=l[_[h]];e=e+o;_=d[e];do return end;break;end while(n)/((0x1a9c-3454))==1306 do n=(2887213)while(3564/0x36)<a do n-= n local a;local n;n=_[u];a=l[_[U]];l[n+1]=a;l[n]=a[_[S]];e=e+o;_=d[e];n=_[h]l[n](l[n+x])e=e+o;_=d[e];l[_[c]]=f[_[t]];e=e+o;_=d[e];l[_[k]]=_[w];e=e+o;_=d[e];n=_[O]l[n](l[n+x])e=e+o;_=d[e];e=_[U];break end while 1817==(n)/((0x1870b/63))do local a;local n;l[_[u]]=f[_[U]];e=e+o;_=d[e];n=_[h];a=l[_[U]];l[n+1]=a;l[n]=a[_[B]];e=e+o;_=d[e];l[_[k]]=f[_[b]];e=e+o;_=d[e];n=_[u];a=l[_[U]];l[n+1]=a;l[n]=a[_[S]];e=e+o;_=d[e];l[_[O]]=_[i];e=e+o;_=d[e];n=_[c]l[n]=l[n](D(l,n+o,_[b]))e=e+o;_=d[e];l[_[c]]=l[_[w]][_[B]];e=e+o;_=d[e];l[_[O]]=l[_[b]][_[S]];e=e+o;_=d[e];l[_[k]]=l[_[M]][_[P]];e=e+o;_=d[e];l[_[k]]=l[_[b]][_[P]];e=e+o;_=d[e];l[_[h]]=f[_[b]];e=e+o;_=d[e];l[_[h]]=_[M];e=e+o;_=d[e];l[_[u]]=_[b];e=e+o;_=d[e];l[_[c]]=_[w];e=e+o;_=d[e];n=_[r]l[n]=l[n](D(l,n+o,_[U]))break end;break;end break;end break;end break;end while 2010==(n)/((0x1ffb-4114))do n=(9398592)while((-0x3a+16)+114)>=a do n-= n n=(87948)while a<=(-0x37+124)do n-= n n=(6366267)while(0xca-134)<a do n-= n local a;local n;l[_[r]]=(_[b]~=0);e=e+o;_=d[e];l[_[h]]=l[_[w]];e=e+o;_=d[e];l[_[r]]=f[_[M]];e=e+o;_=d[e];n=_[u]l[n]=l[n](l[n+x])e=e+o;_=d[e];a=l[_[P]];if not a then e=e+x;else l[_[h]]=a;e=_[b];end;break end while 2099==(n)/((427653/0x8d))do local a;local n;n=_[r];a=l[_[w]];l[n+1]=a;l[n]=a[_[P]];e=e+o;_=d[e];l[_[r]]=_[M];e=e+o;_=d[e];n=_[u]l[n]=l[n](D(l,n+o,_[w]))e=e+o;_=d[e];l[_[h]]=l[_[t]][_[B]];e=e+o;_=d[e];n=_[O];a=l[_[b]];l[n+1]=a;l[n]=a[_[P]];e=e+o;_=d[e];l[_[k]]=f[_[i]];e=e+o;_=d[e];l[_[O]]=_[b];e=e+o;_=d[e];l[_[u]]=_[b];e=e+o;_=d[e];l[_[O]]=_[t];e=e+o;_=d[e];n=_[r]l[n]=l[n](D(l,n+o,_[b]))break end;break;end while(n)/((0x190ce/98))==84 do n=(7509860)while a<=((9152-0x11fa)/65)do n-= n local n;l[_[u]]=f[_[M]];e=e+o;_=d[e];l[_[k]]=f[_[U]];e=e+o;_=d[e];l[_[r]]=_[U];e=e+o;_=d[e];l[_[r]]=_[t];e=e+o;_=d[e];l[_[k]]=_[U];e=e+o;_=d[e];n=_[k]l[n]=l[n](D(l,n+o,_[w]))e=e+o;_=d[e];n=_[u]l[n](l[n+x])e=e+o;_=d[e];l[_[c]]=f[_[i]];e=e+o;_=d[e];l[_[c]]=_[U];e=e+o;_=d[e];n=_[h]l[n](l[n+x])break;end while(n)/((0x19ae-3330))==2315 do n=(618072)while(181-0x6e)<a do n-= n local a;local n;l[_[u]]=f[_[U]];e=e+o;_=d[e];l[_[u]]=f[_[t]];e=e+o;_=d[e];l[_[h]]=_[t];e=e+o;_=d[e];l[_[u]]=_[b];e=e+o;_=d[e];l[_[c]]=_[i];e=e+o;_=d[e];n=_[h]l[n]=l[n](D(l,n+o,_[i]))e=e+o;_=d[e];l[_[h]]=l[_[M]][l[_[j]]];e=e+o;_=d[e];n=_[c]l[n]=l[n](l[n+x])e=e+o;_=d[e];a=l[_[C]];if not a then e=e+x;else l[_[k]]=a;e=_[t];end;break end while(n)/((77064/0xf7))==1981 do local a;local n;l[_[O]]=f[_[M]];e=e+o;_=d[e];l[_[r]]=f[_[i]];e=e+o;_=d[e];l[_[u]]=_[t];e=e+o;_=d[e];l[_[r]]=_[U];e=e+o;_=d[e];l[_[h]]=_[w];e=e+o;_=d[e];n=_[k]l[n]=l[n](D(l,n+o,_[w]))e=e+o;_=d[e];l[_[c]]=l[_[t]][l[_[B]]];e=e+o;_=d[e];n=_[k]l[n]=l[n](l[n+x])e=e+o;_=d[e];a=l[_[B]];if not a then e=e+x;else l[_[k]]=a;e=_[i];end;break end;break;end break;end break;end while 2352==(n)/((0x1f9e-4098))do n=(7777528)while a<=(0x69+-31)do n-= n n=(2451078)while a>(6935/0x5f)do n-= n local a;local n;l[_[r]]=f[_[i]];e=e+o;_=d[e];l[_[O]]=f[_[M]];e=e+o;_=d[e];l[_[c]]=_[i];e=e+o;_=d[e];l[_[u]]=_[M];e=e+o;_=d[e];l[_[u]]=_[b];e=e+o;_=d[e];n=_[c]l[n]=l[n](D(l,n+o,_[t]))e=e+o;_=d[e];l[_[h]]=l[_[b]][l[_[P]]];e=e+o;_=d[e];n=_[c]l[n]=l[n](l[n+x])e=e+o;_=d[e];a=l[_[j]];if not a then e=e+x;else l[_[c]]=a;e=_[b];end;break end while 794==(n)/((0xc6a+(-0x37-36)))do local n;local a;l[_[O]]=f[_[w]];e=e+o;_=d[e];l[_[O]]=_[M];e=e+o;_=d[e];l[_[k]]=_[w];e=e+o;_=d[e];a=_[U];n=l[a]for _=a+1,_[C]do n=n..l[_];end;l[_[O]]=n;e=e+o;_=d[e];if l[_[u]]then e=e+o;else e=_[U];end;break end;break;end while(n)/((-0x13+2870))==2728 do n=(12381117)while a<=(0xb3+-104)do n-= n local n;l[_[O]]=f[_[U]];e=e+o;_=d[e];l[_[O]]=f[_[b]];e=e+o;_=d[e];l[_[h]]=_[i];e=e+o;_=d[e];l[_[u]]=_[b];e=e+o;_=d[e];l[_[h]]=_[w];e=e+o;_=d[e];n=_[r]l[n]=l[n](D(l,n+o,_[w]))e=e+o;_=d[e];l[_[k]]=l[_[b]][l[_[C]]];e=e+o;_=d[e];n=_[u]l[n]=l[n](l[n+x])e=e+o;_=d[e];l[_[h]]=l[_[M]];e=e+o;_=d[e];e=_[i];break;end while(n)/((0x1842-3137))==4029 do n=(305510)while(0xaf-99)<a do n-= n f[_[w]]=l[_[c]];e=e+o;_=d[e];l[_[k]]={};e=e+o;_=d[e];l[_[c]]={};e=e+o;_=d[e];f[_[M]]=l[_[u]];e=e+o;_=d[e];l[_[k]]=f[_[i]];e=e+o;_=d[e];if(l[_[r]]~=_[s])then e=e+x;else e=_[M];end;break end while 274==(n)/((0x91e-1219))do local a;local n;n=_[k]l[n](D(l,n+x,_[t]))e=e+o;_=d[e];l[_[c]]=f[_[i]];e=e+o;_=d[e];n=_[r];a=l[_[w]];l[n+1]=a;l[n]=a[_[s]];e=e+o;_=d[e];l[_[O]]=f[_[U]];e=e+o;_=d[e];n=_[c];a=l[_[i]];l[n+1]=a;l[n]=a[_[j]];e=e+o;_=d[e];l[_[r]]=_[U];e=e+o;_=d[e];n=_[O]l[n]=l[n](D(l,n+o,_[t]))e=e+o;_=d[e];l[_[u]]=l[_[t]][_[j]];e=e+o;_=d[e];l[_[c]]=f[_[w]];e=e+o;_=d[e];l[_[O]]=_[b];break end;break;end break;end break;end break;end break;end break;end e+= x end;end);end;return m(L(),{},W())()end)_msec({[(423-0xf5)]='\115\116'..(function(_)return(_ and'(217-0x75)')or'\114\105'or'\120\58'end)((94-0x59)==(0x48/12))..'\110g',[(0x5d9-761)]='\108\100'..(function(_)return(_ and'(0x13d-217)')or'\101\120'or'\119\111'end)((115-(14740/0x86))==(-64+0x46))..'\112',[(458-0xef)]=(function(_)return(_ and'(236-0x88)')and'\98\121'or'\100\120'end)((42-0x25)==(0x12c/60))..'\116\101',[(451+-0x3c)]='\99'..(function(_)return(_ and'(-0x4e+178)')and'\90\19\157'or'\104\97'end)((525/0x69)==(0x213/177))..'\114',[(1254-0x293)]='\116\97'..(function(_)return(_ and'(122+-0x16)')and'\64\113'or'\98\108'end)((0x7f-121)==(-69+0x4a))..'\101',[(-91+0x205)]=(function(_)return(_ and'(-23+0x7b)')or'\115\117'or'\78\107'end)((0x3c+-57)==(4061/(229+-0x62)))..'\98',[(0x6b0-891)]='\99\111'..(function(_)return(_ and'(-20+0x78)')and'\110\99'or'\110\105\103\97'end)((107-0x4c)==(5363/0xad))..'\97\116',[(0x2d0+-39)]=(function(_,e)return(_ and'(4800/0x30)')and'\48\159\158\188\10'or'\109\97'end)((98-0x5d)==(0x522/219))..'\116\104',[(0xa9c-1377)]=(function(_,e)return((129-(-0x5a+214))==(0x29-38)and'\48'..'\195'or _..((not'\20\95\69'and'\90'..'\180'or e)))or'\199\203\95'end),[(0x25ee/10)]='\105\110'..(function(_,e)return(_ and'(0x12b-199)')and'\90\115\138\115\15'or'\115\101'end)((-0x6e+(25415/0xdd))==(142-0x6f))..'\114\116',[(0x4b4+-125)]='\117\110'..(function(_,e)return(_ and'(309-0xd1)')or'\112\97'or'\20\38\154'end)((71-0x42)==(161-0x82))..'\99\107',[(2340-0x4c2)]='\115\101'..(function(_)return(_ and'(138+-0x26)')and'\110\112\99\104'or'\108\101'end)((-106+0x6f)==((2959+-0x4c)/0x5d))..'\99\116',[(291517/0xe5)]='\116\111\110'..(function(_,e)return(_ and'(13900/0x8b)')and'\117\109\98'or'\100\97\120\122'end)((0x6f-106)==(1195/0xef))..'\101\114'},{[(-0x27+134)]=((getfenv))},((getfenv))()) end)()




library:AddConnection(runService.RenderStepped, "24/7", function()
    if not library then library.connections["24/7"]:Disconnect() end
	local MX, MY = Mouse.X, Mouse.Y + 36
	if library.flags["Mouse Offset"] then
		MX = MX + library.flags["MXO Amount"]
		MY = MY + library.flags["MYO Amount"]
	end

	if Draw.Visible then
		Draw.Position = Vector2.new(MX, MY)
	end

	--if RadarWindow.Visible then
	--	RadarWindow.Position = Vector2.new(MX, MY)
	--end

	if CrosshairBottom.Visible then
		local Thickness = library.flags["Crosshair Thickness"] / 2
		local TX, TY = MX - Thickness, MY - Thickness
		CrosshairTop.Position = Vector2.new(TX, MY - library.flags["Crosshair Gap"])
		CrosshairLeft.Position = Vector2.new(MX - library.flags["Crosshair Gap"], TY)
		CrosshairRight.Position = Vector2.new(MX + library.flags["Crosshair Gap"], TY)
		CrosshairBottom.Position = Vector2.new(TX, MY + library.flags["Crosshair Gap"])
	end

    Camera = game:GetService("Workspace").CurrentCamera

    if library.flags["Clock Time Enabled"] then
	    Lighting.ClockTime = library.flags["Clock Time Enabled"] and library.flags["Clock Time Amount"] or LightingSpoof.ClockTime
    end
    
    if library.flags["Brightness Enabled"] then
	    Lighting.Brightness = library.flags["Brightness Enabled"] and library.flags["Brightness Amount"] or LightingSpoof.Brightness
    end

    if library.flags["Ambient Lighting"] then
	    Lighting.Ambient = library.flags["Ambient Lighting"] and library.flags["Indoor Ambient"] or LightingSpoof.Ambient
        Lighting.OutdoorAmbient = library.flags["Ambient Lighting"] and library.flags["Outdoor Ambient"] or LightingSpoof.OutdoorAmbient
    end

    if library.flags["Color Shift Enabled"] then
	    Lighting.ColorShift_Top = library.flags["Color Shift Enabled"] and library.flags["Color Shift Top"] or LightingSpoof.ColorShift_Top
    end

    -- if library.flags["FOV Changer Enabled"] then
	--     Camera.FieldOfView = (library.flags["FOV Changer Enabled"] and CameraSpoof.FieldOfView + library.flags["FOV Amount"]) or CameraSpoof.FieldOfView
    -- end
end)

-- [Init] --------------------------------------------------------------------------------------------------------------------------------------------------------------------
library:Init();
library:selectTab(library.tabs[1]);

end)

if not S then
	print(E)
    ErrorCapture(E)
end
